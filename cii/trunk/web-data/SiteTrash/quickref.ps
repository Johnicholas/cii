%-12345X@PJL JOB
@PJL SET RESOLUTION = 600
@PJL SET BITSPERPIXEL = 2
@PJL SET ECONOMODE = OFF
@PJL ENTER LANGUAGE = POSTSCRIPT 
%!PS-Adobe-3.0
%%Title: quickref.fm
%%Creator: PScript5.dll Version 5.2
%%CreationDate: 12/21/2001 16:56:23
%%BoundingBox: (atend)
%%Pages: (atend)
%%Orientation: Landscape
%%PageOrder: Special
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (HP LaserJet 8100 Series) (2014.108) 1
%%LanguageLevel: 2
%%EndComments

%%BeginDefaults
%%PageBoundingBox: 12 12 599 779
%%ViewingOrientation: 0 1 -1 0
%%EndDefaults


%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if errorname(VMerror)ne{showpage}if initgraphics courier setfont
lmargin 720 moveto errorname(VMerror)eq{userdict/ehsave known{clear userdict
/ehsave get restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}{
(ERROR: )prnt errorname prnt nl(OFFENDING COMMAND: )prnt/command load prnt
$error/ostack known{nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}
repeat}if}ifelse systemdict/showpage get exec(%%[ Error: )print errorname
=print(; OffendingCommand: )print/command load =print( ]%%)= flush}if end end
end}dup 0 systemdict put dup 4 $brkpage put bind readonly put/currentpacking
where{pop/setpacking where{pop oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(This job requires more memory than is available in this printer.)100 500
(Try one or more of the following, and then print again:)100 485
(For the output format, choose Optimize For Portability.)115 470
(In the Device Settings page, make sure the Available PostScript Memory is accurate.)
115 455(Reduce the number of fonts in the document.)115 440
(Print the document in parts.)115 425 12/Times-Roman showpage
(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}bind def end
version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get def}ifelse
105000 VM?
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b/G2UBegin{findresource/FontInfo get/GlyphNames2Unicode get
`}bind d/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource
end
%%EndProlog

%%BeginSetup
statusdict begin (%%[ ProductName: ) print product print ( ]%%)= flush end
[ 0 1 -1 0 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
featurebegin{
%%BeginNonPPDFeature: JobTimeout 0
0 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/JobTimeout  4 -1 roll put setuserparams}{statusdict/setjobtimeout get exec}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginNonPPDFeature: WaitTimeout 120
120 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginFeature: *HPPaperPolicy PromptUser

   <</DeferredMediaSelection true>> setpagedevice
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPHalftone PrinterDefault

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Collate False
<</Collate false>> setpagedevice
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Smoothing True

  << /PostRenderingEnhance true /PostRenderingEnhanceDetails << /REValue 2 /Type 8 >>
  >> setpagedevice
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *PageSize Letter

  <</PageSize [612 792] /ImagingBBox null>> setpagedevice
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *StapleLocation 1parallel

  userdict /HPStapleOption {(ONE)} put
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *MediaType None

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *OutputBin Upper
<</Staple 0 /OutputType (TOP OUTPUT BIN)>> setpagedevice
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Duplex DuplexNoTumble

  <</Duplex true /Tumble false>> setpagedevice
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Option2 True

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Option6 False

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Option3 True

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Option4 True

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Option5 False

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Option20 Standard

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Option21 MailboxModeMailbox

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *InstalledMemory 24-27MB

%%EndFeature
}featurecleanup
1 setlinecap 1 setlinejoin
/mysetup [ 0 72 600 V 72 600 V 0 11.99905 11.99905 ] def 
%%EndSetup

userdict begin /ehsave save def end
%%Page: 1 1
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_WinNT_Compat 5.0 0
userdict/Pscript_WinNT_Compat 19 dict dup begin/bd{bind def}bind def/ld{load
def}bd/$x matrix def/ANSIVec[16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde
16#4/macron 16#5/breve 16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A
/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60
/grave 16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#88/circumflex 16#89/perthousand 16#8A
/Scaron 16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash 16#98
/tilde 16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe 16#9F
/Ydieresis 16#A0/space 16#A1/exclamdown 16#A4/currency 16#A5/yen 16#A6
/brokenbar 16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB
/guillemotleft 16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron
16#B0/degree 16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute
16#B5/mu 16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf 16#BE
/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute 16#CE
/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute
16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply 16#D8/Oslash
16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute 16#DE
/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute 16#E2/acircumflex 16#E3
/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8/egrave 16#E9
/eacute 16#EA/ecircumflex 16#EB/edieresis 16#EC/igrave 16#ED/iacute 16#EE
/icircumflex 16#EF/idieresis 16#F0/eth 16#F1/ntilde 16#F2/ograve 16#F3/oacute
16#F4/ocircumflex 16#F5/otilde 16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9
/ugrave 16#FA/uacute 16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn
16#FF/ydieresis]def currentdict{dup type/operatortype eq{[exch]cvx def}{pop
pop}ifelse}forall/initialize{currentdict exch begin begin}bind def/terminate{
/@FL where not{pop end end}{pop}ifelse}bind def/suspend/terminate load def
/resume/initialize load def/RS{/pagesave where{pop pagesave restore}{$x matrix
invertmatrix concat}ifelse}def/SS{/pagesave save def}def/CB{pop pop pop pop}def
/B{pop pop pop pop}def/:/gsave load def/;/grestore load def/N/newpath load def
end put
%%EndResource
end reinitialize
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Text 5.0 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & d/TextInitialised? T d
/fM[1 0 0 1 0 0]d/mFM matrix d/iMat[1 0 0.212557 1 0 0]d}if}b/copyfont{1 ^
length add dict `{1 ^/FID ne{d}{! !}?}forall & E}b/EncodeDict 11 dict d/bullets
{{/bullet}repeat}b/rF{3 copyfont @ ` ~ EncodeDict ~ get/Encoding ~ 3 ^/0 eq{&
/CharStrings known{CharStrings/Eth known not{! EncodeDict/ANSIEncodingOld get}
if}if}if d E}b/mF{@ 7 1 $ findfont ~{@/Encoding get @ StandardEncoding eq{! T}{
{ISOLatin1Encoding}stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get
StandardEncoding 3 -1 $ get eq and}for E}?}?}{F}?{1 ^ ~ rF}{0 copyfont}? 6 -2 $
! ! ~ !/pd_charset @ where{~ get 128 eq{@ FDV 2 copy get @ length array copy
put pd_CoverFCRange}if}{!}? 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0 put fM
makefont Pscript_Windows_Font 3 1 $ put}b/sLT{: Lw -M currentpoint snap M 0 - 0
Lc K ;}b/xUP null d/yUP null d/uW null d/xSP null d/ySP null d/sW null d/sSU{N
/uW ~ d/yUP ~ d/xUP ~ d}b/sU{xUP yUP uW sLT}b/sST{N/sW ~ d/ySP ~ d/xSP ~ d}b/sT
{xSP ySP sW sLT}b/sR{: + R 0 0 M}b/sRxy{: matrix astore concat 0 0 M}b/eR/; , d
/AddOrigFP{{&/FontInfo known{&/FontInfo get length 6 add}{6}? dict `
/WinPitchAndFamily ~ d/WinCharSet ~ d/OrigFontType ~ d/OrigFontStyle ~ d
/OrigFontName ~ d & E/FontInfo ~ d}{! ! ! ! !}?}b/mFS{makefont
Pscript_Windows_Font 3 1 $ put}b/mF42D{0 copyfont `/FontName ~ d 2 copy ~ sub 1
add dict `/.notdef 0 d 2 copy 1 ~{@ 3 ^ sub Encoding ~ get ~ d}for & E
/CharStrings ~ d ! ! & @ E/FontName get ~ definefont}b/mF42{15 dict ` @ 4 1 $
FontName ~ d/FontType 0 d/FMapType 2 d/FontMatrix[1 0 0 1 0 0]d 1 ^ 254 add 255
idiv @ array/Encoding ~ d 0 1 3 -1 $ 1 sub{@ Encoding 3 1 $ put}for/FDepVector
Encoding length array d/CharStrings 2 dict `/.notdef 0 d & E d 0 1 Encoding
length 1 sub{@ @ 10 lt{! FontName length 1 add string}{100 lt{FontName length 2
add string}{FontName length 3 add string}?}? @ 0 FontName @ length string cvs
putinterval @ 3 -1 $ @ 4 1 $ 3 string cvs FontName length ~ putinterval cvn 1 ^
256 mul @ 255 add 3 -1 $ 4 ^ findfont mF42D FDepVector 3 1 $ put}for & @ E
/FontName get ~ definefont ! ! ! mF}b/mF_OTF_V{~ ! ~ ! 4 -1 $ ! findfont 2 ^ ~
definefont fM @ @ 4 6 -1 $ neg put 5 0 put 90 matrix R matrix concatmatrix
makefont Pscript_Windows_Font 3 1 $ put}b/mF_TTF_V{3{~ !}repeat 3 -1 $ !
findfont 1 ^ ~ definefont Pscript_Windows_Font 3 1 $ put}b/UmF{L2?
{Pscript_Windows_Font ~ undef}{!}?}b/UmF42{@ findfont/FDepVector get{/FontName
get undefinefont}forall undefinefont}b
%%EndResource
end reinitialize
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Encoding256 5.0 0
/CharCol256Encoding[/.notdef/breve/caron/dotaccent/dotlessi/fi/fl/fraction
/hungarumlaut/Lslash/lslash/minus/ogonek/ring/Zcaron/zcaron/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma
/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S
/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/grave
/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright
/asciitilde/.notdef/Euro/.notdef/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef
/.notdef/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/.notdef/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]def EncodeDict/256 CharCol256Encoding put
%%EndResource
end reinitialize

%%IncludeResource: font Times-Bold
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_Euro_L2 5.0 0
/UseT3EuroFont{/currentdistillerparams where{pop currentdistillerparams
/CoreDistVersion get 4000 le}{false}ifelse}bind def/NewEuroT3Font?{dup/FontType
get 3 eq{dup/EuroFont known exch/BaseFont known and}{pop false}ifelse}bind def
/T1FontHasEuro{dup/CharStrings known not{dup NewEuroT3Font?{dup/EuroGlyphName
get exch/EuroFont get/CharStrings get exch known{true}{false}ifelse}{pop false}
ifelse}{dup/FontType get 1 eq{/CharStrings get/Euro known}{dup/InfoDict known{
/InfoDict get/Euro known}{/CharStrings get/Euro known}ifelse}ifelse}ifelse}bind
def/FontHasEuro{findfont dup/Blend known{pop true}{T1FontHasEuro}ifelse}bind
def/EuroEncodingIdx 1 def/EuroFontHdr{12 dict begin/FontInfo 10 dict dup begin
/version(001.000)readonly def/Notice(Copyright (c)1999 Adobe Systems
Incorporated. All Rights Reserved.)readonly def/FullName(Euro)readonly def
/FamilyName(Euro)readonly def/Weight(Regular)readonly def/isFixedPitch false
def/ItalicAngle 0 def/UnderlinePosition -100 def/UnderlineThickness 50 def end
readonly def/FontName/Euro def/Encoding 256 array 0 1 255{1 index exch/.notdef
put}for def/PaintType 0 def/FontType 1 def/FontMatrix[0.001 0 0 0.001 0 0]def
/FontBBox{-25 -23 1500 804}readonly def currentdict end dup/Private 20 dict dup
begin/ND{def}def/NP{put}def/lenIV -1 def/RD{string currentfile exch
readhexstring pop}def/-|{string currentfile exch readstring pop}executeonly def
/|-{def}executeonly def/|{put}executeonly def/BlueValues[-20 0 706 736 547 572]
|-/OtherBlues[-211 -203]|-/BlueScale 0.0312917 def/MinFeature{16 16}|-/StdHW
[60]|-/StdVW[71]|-/ForceBold false def/password 5839 def/Erode{8.5 dup 3 -1
roll 0.1 mul exch 0.5 sub mul cvi sub dup mul 71 0 dtransform dup mul exch dup
mul add le{pop pop 1.0 1.0}{pop pop 0.0 1.5}ifelse}def/OtherSubrs[{}{}{}
{systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]|-/Subrs 5 array dup 0
<8E8B0C100C110C110C210B>put dup 1<8B8C0C100B>put dup 2<8B8D0C100B>put dup 3<0B>
put dup 4<8E8C8E0C100C110A0B>put |- 2 index/CharStrings 256 dict dup begin
/.notdef<8b8b0d0e>def end end put put dup/FontName get exch definefont pop}bind
def/AddEuroGlyph{2 index exch EuroEncodingIdx 1 eq{EuroFontHdr}if systemdict
begin/Euro findfont dup dup/Encoding get 5 1 roll/Private get begin/CharStrings
get dup 3 index known{pop pop pop pop end end}{begin 1 index exch def end end
end EuroEncodingIdx dup 1 add/EuroEncodingIdx exch def exch put}ifelse}bind def
/GetNewXUID{currentdict/XUID known{[7 XUID aload pop]true}{currentdict/UniqueID
known{[7 UniqueID]true}{false}ifelse}ifelse}bind def/BuildT3EuroFont{exch 16
dict begin dup/FontName exch def findfont dup/Encoding get/Encoding exch def
dup length 1 add dict copy dup/FID undef begin dup dup/FontName exch def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for def GetNewXUID{/XUID
exch def}if currentdict end definefont pop/BaseFont exch findfont 1000
scalefont def/EuroFont exch findfont 1000 scalefont def pop/EuroGlyphName exch
def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox BaseFont/FontBBox
get def/Char 1 string def/BuildChar{exch dup begin/Encoding get 1 index get
/Euro eq{BaseFont T1FontHasEuro{false}{true}ifelse}{false}ifelse{EuroFont
setfont pop userdict/Idx 0 put EuroFont/Encoding get{EuroGlyphName eq{exit}
{userdict/Idx Idx 1 add put}ifelse}forall userdict/Idx get}{dup dup Encoding
exch get BaseFont/Encoding get 3 1 roll put BaseFont setfont}ifelse Char 0 3 -1
roll put Char stringwidth newpath 0 0 moveto Char true charpath flattenpath
pathbbox setcachedevice 0 0 moveto Char show end}bind def currentdict end dup
/FontName get exch definefont pop}bind def/AddEuroToT1Font{dup findfont dup
length 10 add dict copy dup/FID undef begin/EuroFont 3 -1 roll findfont 1000
scalefont def CharStrings dup length 1 add dict copy begin/Euro{EuroFont
setfont pop EuroGBBox aload pop setcachedevice 0 0 moveto EuroGName glyphshow}
bind def currentdict end/CharStrings exch def GetNewXUID{/XUID exch def}if 3 1
roll/EuroGBBox exch def/EuroGName exch def currentdict end definefont pop}bind
def/BuildNewFont{UseT3EuroFont{BuildT3EuroFont}{pop AddEuroToT1Font}ifelse}bind
def/UseObliqueEuro{findfont/FontMatrix get dup 2 get 0 eq exch dup 0 get exch 3
get eq and UseT3EuroFont or}bind def
%%EndResource
end reinitialize
7500 VM?
/Times-Bold FontHasEuro not
{
/Euro.Times-Bold
 [500 0 19 -13 492 688 ] 
<9EF8880DF84CA6037EA701F791C801F7FFC801F928A7018F0AC3F73203F852A6037EA701
F791C801F7FFC801F928A701F86DF89C15F73A0770068875877D778B08858B749A799308
7E916E946B8B08358BFB144773FB58086506774E05C1065A076706774E05C7069DFB27E1
FB0BF7188B088F0AC3F73203F84CA6037EA701F791C801F7FFC801F928A701B88BAA9F91
8E089C939892908B089F8B8F7D8E7508A606F7450772067A3F5240538B084F8B68EC89F7
2108F72F06A0C805FB4506BC07F75506A0C805FB690690F71CA9EFC88B088F0AF852A603
7EA701F791C801F7FFC801F928A701D58BB93A9C5008090E>
AddEuroGlyph
/Euro /Times-Bold /Times-Bold-Copy BuildNewFont
} if
F /F0 0 /256 T /Times-Bold mF 
/F0S85 F0 [133 0 0 -133 0 0 ] mFS
F0S85 Ji 
1380 1199 M (C)S 
/F0S74 F0 [116 0 0 -116 0 0 ] mFS
F0S74 Ji 
1476 1199 M ( Interfaces and Implementations)[29 45 65 39 52 52 39 58 52 51 46 29 58 65 65 29 45 98 64 33 52 97 51 65 39 58 39 33 58 65  0]xS 
1380 1329 M (Quick Reference)[90 65 33 51 65 29 85 51 39 52 50 52 64 52  0]xS 

%%IncludeResource: font Times-Roman
7500 VM?
/Times-Roman FontHasEuro not
{
/Euro.Times-Roman
 [500 0 24 -14 493 676 ] 
<A3F8880DC0EB03F854F743950C0C037DA501F7A0BB01F805BB01F91EA501F869F8911584
F73A0576068478827E7F8B087F8B70AC438B082A8BFB0D6471FB700863067C5B05BE068A
7E8B878B7D08750764067D5B05C206A0FB7BF71858E88B088F0AC0EB03F84BF789950C0C
037DA501F7A0BB01F805BB01F91EA501CA8BACAC998B08988B95809076088F0AC0EB03F8
54F743950C0C037DA501F7A0BB01F805BB01F91EA501A00692F73705750675FB09417667
8B083A8B43C182F75E08F7740699BB05FB84069C078B978C978B9708F7950699BB05FBA1
069AF755D5B3D18B08AB8BDD71A2FB0708090E>
AddEuroGlyph
/Euro /Times-Roman /Times-Roman-Copy BuildNewFont
} if
F /F1 0 /256 T /Times-Roman mF 
/F1S53 F1 [83 0 0 -83 0 0 ] mFS
F1S53 Ji 
1380 1507 M (Interface summaries are listed below in alphabetical order; the subsections name each interface and its pri-)
[27 42 23 37 28 28 37 37 37 26 33 42 64 65 37 28 23 37 32 27 37 28 37 27 23 23 32 24 37 41 27 42
37 23 41 61 26 23 42 27 37 23 42 41 37 42 37 23 23 37 37 23 27 42 28 41 37 28 23 27 23 42 37 26
33 42 41 33 37 37 23 23 41 42 33 26 42 37 65 37 27 36 37 37 42 27 23 42 23 37 28 27 37 37 37 27
37 42 41 27 23 23 33 27 41 28 23  0]xS 
1380 1607 M (mary type, if it has one. The notation \223)[65 37 27 42 22 23 42 41 37 21 22 23 28 22 23 23 22 42 37 32 22 42 42 37 21 22 50 42 37 22 42 41
24 37 23 23 42 41 22  0]xS 

%%IncludeResource: font Courier
7500 VM?
/Courier FontHasEuro not
{
/Euro.Courier
 [600 0 17 -12 578 584 ] 
<9CF8EC0DD1C303F88DC1037FC201F760C201F7CEC201F8A5C201F76004DB06A8FB0FE32E
F7278B08DA8BD8A8C8B80873BA0556644870478B08278B39C56DF208F776069FC205FB94
068B968A968B96088B928B938C9208F7A6069FC205FBB106A3EAD3CCEB8B08D18BD071B1
63084307C106F75507550656075AAE569D438B08FB188B2D2D70FB0D085106775405D106
7A078B7E8C7F8C7E085706090E>
AddEuroGlyph
/Euro /Courier /Courier-Copy BuildNewFont
} if
F /F2 0 /256 T /Courier mF 
/F2S53 F2 [83 0 0 -83 0 0 ] mFS
F2S53 Ji 
2680 1607 M (T)S 
F1S53 Ji 
2730 1607 M ( is opaque )[22 23 33 22 41 42 37 42 41 37  0]xS 

%%IncludeResource: font Times-Italic
7500 VM?
/Times-Italic FontHasEuro not
{
/Euro.Times-Italic
 [500 0 23 -7 578 676 ] 
<A2F8880DDBDB03F7F8A003F88D9D0384A701F79DBB01F802BB01F91CA7018F0ADBDB03F7
F8A003F88D9D0384A701F79DBB01F802BB01F89CF71301F8BFF93315770680758A89818B
08848B79947592088F0ADBDB03F7F8A003F88D9D0384A701F79DBB01F802BB01F91CA701
75916F926D8B08FB0E8B27FB0A5BFB24084606735B05D6068879857A8A79084A06745B05
DD068A7D8A7C8B7C08FB01B3FB0BF7101EA28BA4919E94089D94948F928B08928B8D858D
7508A006B0F72205780679674E3D438B08477BD1D11F8BB290B28FA508F76306A2BB05FB
71068D9D929C8F9D08F77E06A3BB05FB88069FDEC8F72BEC8B08D9B757461F84078F0ADB
DB03F7F8A003F88D9D0384A701F79DBB01F802BB01F89CF713019D06090E>
AddEuroGlyph
/Euro /Times-Italic /Times-Italic-Copy BuildNewFont
} if
F /F3 0 /256 T /Times-Italic mF 
/F3S53 F3 [83 0 0 -83 0 0 ] mFS
F3S53 Ji 
3092 1607 M (X)S 
F2S53 Ji 
3143 1607 M (_T)[50  0]xS 
F1S53 Ji 
3243 1607 M (\224 indicates that interface )[37 22 23 42 42 23 37 37 23 37 32 22 23 42 37 23 22 23 42 23 37 28 28 37 37 37  0]xS 
F3S53 Ji 
4081 1607 M (X)S 
F1S53 Ji 
4132 1607 M ( exports an opaque pointer)[22 37 42 42 41 28 23 33 22 37 41 22 42 42 37 41 42 37 22 42 41 23 42 23 37  0]xS 
1380 1707 M (type )[23 42 41 37  0]xS 
F3S53 Ji 
1544 1707 M (X)S 
F2S53 Ji 
1594 1707 M (_T)[50  0]xS 
F1S53 Ji 
1688 1707 M (, abbreviated as )[21 20 37 42 41 28 37 42 23 37 23 37 42 20 37 32  0]xS 
F2S53 Ji 
2228 1707 M (T)S 
F1S53 Ji 
2278 1707 M ( in the descriptions. The representation for )[21 23 41 21 23 42 36 21 41 37 33 37 27 24 41 23 24 41 42 32 21 20 51 42 37 20 28 37 41 28 37 33
37 41 23 37 23 24 41 42 20 28 41 28  0]xS 
F3S53 Ji 
3708 1707 M (X)S 
F2S53 Ji 
3759 1707 M (_T)[50  0]xS 
F1S53 Ji 
3858 1707 M ( is given, if the interface reveals its)[21 23 32 20 42 23 42 37 41 21 20 24 27 21 23 41 37 21 23 41 23 37 28 28 37 37 37 20 28 37 41 37
37 24 32 20 23 23  0]xS 
1380 1807 M (primary type.)[41 28 23 65 37 28 41 21 23 42 42 37  0]xS 
1480 1907 M (The summary for each interface lists, in alphabetical order, the exported variables, excluding exceptions,)
[51 41 37 25 33 41 65 65 37 28 41 25 28 41 28 25 37 37 37 42 25 23 41 24 37 27 28 37 37 37 25 23
23 33 23 32 21 25 23 42 25 37 23 41 42 37 42 37 23 23 37 37 23 25 42 27 42 37 24 21 25 23 42 37
25 37 41 42 42 27 24 36 42 25 42 37 27 24 37 41 23 37 33 21 24 37 42 37 23 42 41 24 41 42 25 37
41 37 37 42 23 23 42 42 32  0]xS 
1380 2007 M (followed by the exported functions. The prototype for each function is followed by the exceptions it can raise)
[27 42 23 23 42 60 37 42 20 42 42 20 23 42 37 20 37 42 42 41 28 23 37 42 20 28 42 41 37 24 23 41
42 32 21 21 51 41 37 21 41 28 42 23 42 23 41 42 37 20 28 42 28 20 37 37 37 42 20 28 42 41 37 23
23 42 42 20 23 33 20 28 42 23 23 42 60 37 41 21 42 41 21 23 42 36 21 37 42 37 37 41 23 24 41 42
32 21 23 23 21 37 37 41 21 27 37 24 32  0]xS 
1380 2107 M (and a concise description. The abbreviations \223c.r.e.\224 and \223u.r.e.\224 stand for checked and unchecked runtime)
[37 41 42 28 37 28 37 41 42 37 23 33 37 27 42 37 32 37 28 23 42 23 23 42 42 20 28 51 42 37 28 37
41 42 28 37 41 24 37 23 23 41 42 33 27 37 37 21 23 21 37 21 37 28 37 41 42 28 37 42 20 24 20 37
21 37 28 32 24 37 41 42 28 28 41 28 28 37 41 37 37 42 37 42 28 37 41 42 28 41 42 37 42 37 37 41
37 42 28 28 41 42 23 23 65  0]xS 
1380 2207 M (error\(s\).)[37 27 28 42 28 27 33 27  0]xS 
1480 2307 M (The following table summarizes the interfaces by category and gives the pages on which the summaries)
[51 41 37 27 27 42 23 23 42 60 23 42 41 27 23 37 42 23 37 26 32 42 65 65 37 27 23 37 37 33 26 23
42 37 26 23 42 23 37 28 28 37 37 37 32 26 42 42 26 37 37 23 37 42 41 28 42 26 37 41 42 26 42 23
42 37 32 27 23 41 37 27 41 37 42 37 32 27 41 42 26 60 42 23 37 42 26 23 42 37 26 32 42 65 65 37
27 24 36  0]xS 
1380 2407 M (begin.)[41 37 42 23 42  0]xS 
/F1S3A F1 [58 0 0 -58 0 0 ] mFS
F1S3A Ji 
1380 3682 M (Copyright \251 1996 David R. Hanson. All Rights Reserved.)[39 29 29 29 19 17 29 29 16 15 44 14 29 30 29 29 14 42 26 29 17 29 14 39 15 14 42 26 29 23 29 29
15 14 42 17 16 14 39 16 29 30 16 22 15 39 26 22 26 20 29 26 29  0]xS 
1380 3749 M (12/21/01 16:40)[29 29 16 29 29 17 29 29 14 30 29 16 29  0]xS 
F3S53 Ji 
1782 2616 M (Fundamentals)[51 42 42 41 42 60 37 42 23 42 23  0]xS 
2519 2616 M (ADTs)[51 60 38  0]xS 
3083 2616 M (Strings)[39 23 33 23 41 42  0]xS 
3614 2616 M (Arithmetic)[51 32 23 24 41 60 37 24 23  0]xS 
4245 2616 M (Threads)[46 42 29 37 42 41  0]xS 
/F2S4B F2 [75 0 0 -75 0 0 ] mFS
F2S4B Ji 
1773 2760 M (Arena)[45 45 45 45  0]xS 
/F1S4B F1 [75 0 0 -75 0 0 ] mFS
F1S4B Ji 
2246 2760 M (5)S 
F2S4B Ji 
1773 2852 M (Arith)[45 45 45 45  0]xS 
F1S4B Ji 
2246 2852 M (6)S 
F2S4B Ji 
1773 2943 M (Assert)[45 45 45 45 45  0]xS 
F1S4B Ji 
2246 2943 M (9)S 
F2S4B Ji 
1773 3035 M (Except)[45 45 45 45 45  0]xS 
F1S4B Ji 
2208 3035 M (14)[38  0]xS 
F2S4B Ji 
1773 3127 M (Mem)[45 45  0]xS 
F1S4B Ji 
2208 3127 M (20)[38  0]xS 
F2S4B Ji 
2363 2760 M (Array)[45 45 45 45  0]xS 
F1S4B Ji 
2836 2760 M (7)S 
F2S4B Ji 
2363 2852 M (ArrayRep)[45 45 45 45 45 45 45  0]xS 
F1S4B Ji 
2836 2852 M (8)S 
F2S4B Ji 
2363 2943 M (Bit)[45 45  0]xS 
F1S4B Ji 
2801 2943 M (11)[35  0]xS 
F2S4B Ji 
2363 3035 M (List)[45 45 45  0]xS 
F1S4B Ji 
2798 3035 M (18)[38  0]xS 
F2S4B Ji 
2363 3127 M (Ring)[45 45 45  0]xS 
F1S4B Ji 
2798 3127 M (26)[38  0]xS 
F2S4B Ji 
2363 3218 M (Seq)[45 45  0]xS 
F1S4B Ji 
2798 3218 M (29)[38  0]xS 
F2S4B Ji 
2363 3310 M (Set)[45 45  0]xS 
F1S4B Ji 
2798 3310 M (30)[38  0]xS 
F2S4B Ji 
2363 3402 M (Stack)[45 45 45 45  0]xS 
F1S4B Ji 
2798 3402 M (32)[38  0]xS 
F2S4B Ji 
2363 3493 M (Table)[45 45 45 45  0]xS 
F1S4B Ji 
2798 3493 M (36)[38  0]xS 
F2S4B Ji 
2953 2760 M (Atom)[45 45 45  0]xS 
F1S4B Ji 
3388 2760 M (10)[38  0]xS 
F2S4B Ji 
2953 2852 M (Fmt)[45 45  0]xS 
F1S4B Ji 
3388 2852 M (15)[38  0]xS 
F2S4B Ji 
2953 2943 M (Str)[45 45  0]xS 
F1S4B Ji 
3388 2943 M (33)[38  0]xS 
F2S4B Ji 
2953 3035 M (Text)[45 45 45  0]xS 
F1S4B Ji 
3388 3035 M (38)[38  0]xS 
F2S4B Ji 
3543 2760 M (AP)[45  0]xS 
F1S4B Ji 
4016 2760 M (2)S 
F2S4B Ji 
3543 2852 M (MP)[45  0]xS 
F1S4B Ji 
3978 2852 M (22)[38  0]xS 
F2S4B Ji 
3543 2943 M (XP)[45  0]xS 
F1S4B Ji 
3978 2943 M (43)[38  0]xS 
F2S4B Ji 
4133 2760 M (Chan)[45 45 45  0]xS 
F1S4B Ji 
4568 2760 M (13)[38  0]xS 
F2S4B Ji 
4133 2852 M (Sem)[45 45  0]xS 
F1S4B Ji 
4568 2852 M (28)[38  0]xS 
F2S4B Ji 
4133 2943 M (Thread)[45 45 45 45 45  0]xS 
F1S4B Ji 
4568 2943 M (41)[38  0]xS 
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_GdiObject 5.0 0
/SavedCTM null d/CTMsave{/SavedCTM SavedCTM currentmatrix d}b/CTMrestore
{SavedCTM setmatrix}b/mp null d/ADO_mxRot null d/GDIHMatrix null d
/GDIHPatternDict 22 dict d GDIHPatternDict `/PatternType 1 d/PaintType 2 d/Reps
L2?{1}{5}? d/XStep 8 Reps mul d/YStep XStep d/BBox[0 0 XStep YStep]d/TilingType
1 d/PaintProc{` 1 Lw[]0 sd PaintData , exec E}b/FGnd null d/BGnd null d
/HS_Horizontal{horiz}b/HS_Vertical{vert}b/HS_FDiagonal{fdiag}b/HS_BDiagonal
{biag}b/HS_Cross{horiz vert}b/HS_DiagCross{fdiag biag}b/MaxXYStep XStep YStep
gt{XStep}{YStep}? d/horiz{Reps{0 4 M XStep 0 - 0 8 +}repeat 0 -8 Reps mul + K}b
/vert{Reps{4 0 M 0 YStep - 8 0 +}repeat 0 -8 Reps mul + K}b/biag{Reps{0 0 M
MaxXYStep @ - 0 YStep neg M MaxXYStep @ - 0 8 +}repeat 0 -8 Reps mul + 0 YStep
M 8 8 - K}b/fdiag{Reps{0 0 M MaxXYStep @ neg - 0 YStep M MaxXYStep @ neg - 0 8
+}repeat 0 -8 Reps mul + MaxXYStep @ M 8 -8 - K}b E/makehatch{4 -2 $/yOrg ~ d
/xOrg ~ d GDIHPatternDict/PaintData 3 -1 $ put CTMsave GDIHMatrix setmatrix
GDIHPatternDict matrix xOrg yOrg + mp CTMrestore ~ U ~ 2 ^ put}b/h0{/h0
/HS_Horizontal makehatch}b/h1{/h1/HS_Vertical makehatch}b/h2{/h2/HS_FDiagonal
makehatch}b/h3{/h3/HS_BDiagonal makehatch}b/h4{/h4/HS_Cross makehatch}b/h5{/h5
/HS_DiagCross makehatch}b/GDIBWPatternMx null d/pfprep{save 8 1 $
/PatternOfTheDay 8 1 $ GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/yExt
~ d/Width ~ d/BGnd ~ d/FGnd ~ d/Height yExt RepsV mul d/mx[Width 0 0 Height 0
0]d E build_pattern ~ !}b/pfbf{/fEOFill ~ d pfprep hbf fEOFill{O}{L}? restore}b
/GraphInit{GDIHMatrix null eq{/SavedCTM matrix d : ADO_mxRot concat 0 0 snap +
: 0.48 @ GDIHPatternDict ` YStep mul ~ XStep mul ~ nonzero_dsnap YStep V ~
XStep V ~ E +S/GDIHMatrix matrix currentmatrix readonly d ; : 0.24 -0.24 +S
GDIBWPatternDict ` Width Height E nonzero_dsnap +S/GDIBWPatternMx matrix
currentmatrix readonly d ; ;}if}b
%%EndResource
%%BeginResource: file Pscript_Win_GdiObject_L2 5.0 0
/GDIBWPatternDict 25 dict @ `/PatternType 1 d/PaintType 1 d/RepsV 1 d/RepsH 1 d
/BBox[0 0 RepsH 1]d/TilingType 1 d/XStep 1 d/YStep 1 d/Height 8 RepsV mul d
/Width 8 d/mx[Width 0 0 Height neg 0 Height]d/FGnd null d/BGnd null d
/SetBGndFGnd{BGnd null ne{BGnd aload ! scol BBox aload ! 2 ^ sub ~ 3 ^ sub ~
rf}if FGnd null ne{FGnd aload ! scol}if}b/PaintProc{` SetBGndFGnd RepsH{Width
Height F mx PaintData imagemask Width 0 +}repeat E}b E d/mp/makepattern , d
/build_pattern{CTMsave GDIBWPatternMx setmatrix/nupangle where{! nupangle -90
eq{nupangle R}if}if GDIBWPatternDict @ ` Width Height ne{Width Height gt{Width
Height V 1}{1 Height Width V}? +S}if xOrg yOrg E matrix + mp CTMrestore}b/hbf
{setpattern}b/hf{:/fEOFill ~ d ~ ! setpattern fEOFill{O}{L}? ;}b/pbf{: !
/fEOFill ~ d GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/OutputBPP ~ d
/Height ~ d/Width ~ d/PaintType 1 d/PatternType 1 d/TilingType 1 d/BBox[0 0
Width Height]d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d 20 dict @ `
/ImageType 1 d/Width Width d/Height Height d/ImageMatrix[1 0 0 1 0 0]d
/BitsPerComponent 8 d OutputBPP 24 eq{/Decode[0 1 0 1 0 1]d}{OutputBPP 8 eq{
/Decode[0 1]d}{/Decode[0 1 0 1 0 1 0 1]d}?}?/DataSource{PaintData}d E/ImageDict
~ d/PaintProc{` ImageDict image E}b & mx makepattern setpattern E fEOFill{O}{L}
? ;}b/mask_pbf{:/fEOFill ~ d 20 dict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/Height ~
d/Width ~ d/PatternType 1 d/PaintType 2 d/TilingType 1 d/BBox[0 0 Width Height]
d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d/PaintProc{` Width Height
T 1 1 dtransform abs ~ abs ~ 0 0 3 -1 $ 0 0 6 array astore{PaintData}imagemask
E}b & mx makepattern setpattern E fEOFill{O}{L}? ;}b
%%EndResource
end reinitialize
N 2317 2527 M 2313 2527 I 2313 3535 I 2317 3535 I C 
 L N 2907 2527 M 2903 2527 I 2903 3535 I 2907 3535 I C 
 L N 3497 2527 M 3493 2527 I 3493 3535 I 3497 3535 I C 
 L N 4087 2527 M 4083 2527 I 4083 3535 I 4087 3535 I C 
 L N 1725 2527 M 1725 2544 I 4675 2544 I 4675 2527 I C 
 L N 1725 2700 M 1725 2704 I 4675 2704 I 4675 2700 I C 
 L N 1725 3519 M 1725 3536 I 4675 3536 I 4675 3519 I C 
 L ; ; LH
(%%[Page: 1]%%) = 
%%PageTrailer

%%Page: 2 2
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (AP)[84  0]xS 
F2S53 Ji 
4393 1188 M (T)S 
/F0S53 F0 [83 0 0 -83 0 0 ] mFS
F0S53 Ji 
4443 1188 M ( is opaque )[21 23 32 21 42 46 42 46 46 37  0]xS 
F2S53 Ji 
4820 1188 M (AP_T)[50 50 50  0]xS 
F1S53 Ji 
1380 1349 M (It is a c.r.e. to pass a null )[27 24 20 24 32 21 37 21 37 20 24 20 37 21 21 23 42 21 41 37 33 32 21 37 21 41 42 23 23  0]xS 
F2S53 Ji 
2224 1349 M (T)S 
F1S53 Ji 
2274 1349 M ( to any )[21 23 42 21 37 41 42  0]xS 
F2S53 Ji 
2522 1349 M (AP)[50  0]xS 
F1S53 Ji 
2622 1349 M ( function.)[20 28 42 41 37 24 23 41 42  0]xS 
F2S53 Ji 
1380 1549 M (T AP_add\(T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50  0]xS 
4520 1549 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
1380 1649 M (T AP_addi\(T x, long int y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 1649 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1749 M (return the sum )[27 37 24 41 28 42 20 24 41 37 21 32 42 65  0]xS 
F2S53 Ji 
1982 1749 M (x)S 
F1S53 Ji 
2053 1749 M (+)S 
F2S53 Ji 
2121 1749 M (y)S 
F1S53 Ji 
2165 1749 M (.)S 
F2S53 Ji 
1380 1849 M (int AP_cmp\(T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50  0]xS 
1380 1949 M (int AP_cmpi\(T x, long int y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2049 M (return an int )[27 37 24 41 28 42 20 37 42 21 23 42 23  0]xS 

%%IncludeResource: font Symbol
F /F4 0 /2 F /Symbol mF 
/F4S53 F4 [83 0 0 -83 0 0 ] mFS
F4S53 Ji 
1908 2049 M (<)S 
F1S53 Ji 
1954 2049 M (0, )[42 21  0]xS 
F4S53 Ji 
2037 2049 M (=)S 
F1S53 Ji 
2083 2049 M (0, or )[42 21 21 41 28  0]xS 
F4S53 Ji 
2256 2049 M (>)S 
F1S53 Ji 
2302 2049 M (0 if )[41 21 23 28  0]xS 
F2S53 Ji 
2436 2049 M (x)S 
F4S53 Ji 
2486 2049 M (<)S 
F2S53 Ji 
2532 2049 M (y)S 
F1S53 Ji 
2576 2049 M (, )[21  0]xS 
F2S53 Ji 
2618 2049 M (x)S 
F4S53 Ji 
2668 2049 M (=)S 
F2S53 Ji 
2714 2049 M (y)S 
F1S53 Ji 
2758 2049 M (, or )[21 21 41 28  0]xS 
F2S53 Ji 
2890 2049 M (x)S 
F4S53 Ji 
2940 2049 M (>)S 
F2S53 Ji 
2986 2049 M (y)S 
F1S53 Ji 
3030 2049 M (.)S 
F2S53 Ji 
1380 2149 M (T AP_div\(T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50  0]xS 
4520 2149 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
1380 2249 M (T AP_divi\(T x, long int y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 2249 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2349 M (return the quotient )[27 37 24 41 28 42 20 24 41 37 21 42 41 42 23 23 37 42 23  0]xS 
F2S53 Ji 
2116 2349 M (x)S 
F4S53 Ji 
2166 2349 M (/)S 
F2S53 Ji 
2189 2349 M (y)S 
F1S53 Ji 
2239 2349 M (; see )[23 21 32 37 37  0]xS 
F2S53 Ji 
2410 2349 M (Arith_div)[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2855 2349 M (. It is a c.r.e. for )[20 21 28 23 21 23 32 21 37 21 37 21 23 21 37 21 21 27 42 28  0]xS 
F2S53 Ji 
3401 2349 M (y)S 
F4S53 Ji 
3451 2349 M (=)S 
F1S53 Ji 
3496 2349 M (0.)[42  0]xS 
F2S53 Ji 
1380 2449 M (void AP_fmt\(int code, va_list *app,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50  0]xS 
4520 2449 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
1580 2549 M (int put\(int c, void *cl\), void *cl,)[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50  0]xS 
1580 2649 M (unsigned char flags[], int width, int precision\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2749 M (a )[37  0]xS 
F2S53 Ji 
1536 2749 M (Fmt)[50 50  0]xS 
F1S53 Ji 
1686 2749 M ( conversion function: consumes a )[19 37 42 41 42 37 28 32 23 42 42 19 27 42 42 37 23 23 42 41 23 20 37 41 42 32 42 65 37 32 19 37
 0]xS 
F2S53 Ji 
2814 2749 M (T)S 
F1S53 Ji 
2864 2749 M ( and formats it like )[19 37 41 42 19 28 42 27 65 37 23 33 19 23 23 19 23 24 41 37  0]xS 
F2S53 Ji 
3506 2749 M (printf)[50 50 50 50 50  0]xS 
F1S53 Ji 
3810 2749 M (\222s )[23 32  0]xS 
F2S53 Ji 
3885 2749 M (%d)[50  0]xS 
F1S53 Ji 
3985 2749 M (. It is a c.r.e. for )[20 20 27 23 20 23 32 19 37 20 37 20 24 20 37 21 19 28 42 27  0]xS 
F2S53 Ji 
4521 2749 M (app)[50 50  0]xS 
F1S53 Ji 
4671 2749 M (, )[20  0]xS 
F2S53 Ji 
4711 2749 M (*app)[50 50 50  0]xS 
F1S53 Ji 
4911 2749 M (, or)[20 20 41  0]xS 
F2S53 Ji 
1480 2849 M (flags)[50 50 50 50  0]xS 
F1S53 Ji 
1730 2849 M ( to be null.)[20 24 41 21 42 37 21 41 42 23 23  0]xS 
F2S53 Ji 
1380 2949 M (void AP_free\(T *z\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3049 M (deallocates and clears )[41 37 37 24 23 41 37 37 23 37 33 21 37 41 42 21 37 23 37 37 28 32  0]xS 
F2S53 Ji 
2227 3049 M (*z)[50  0]xS 
F1S53 Ji 
2327 3049 M (. It is a c.r.e. for )[21 20 28 23 21 23 33 20 37 21 37 21 23 21 37 21 21 27 42 28  0]xS 
F2S53 Ji 
2873 3049 M (z)S 
F4S53 Ji 
2923 3049 M ( )S 
F1S53 Ji 
2944 3049 M (or )[42 28  0]xS 
F2S53 Ji 
3034 3049 M (*z)[50  0]xS 
F1S53 Ji 
3134 3049 M ( to be null.)[20 24 41 21 42 37 20 42 42 23 23  0]xS 
F2S53 Ji 
1380 3149 M (T AP_fromstr\(const char *str, int base,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50  0]xS 
4520 3149 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
1580 3249 M (char **end\))[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3349 M (interprets )[23 42 23 37 27 42 28 37 23 32  0]xS 
F2S53 Ji 
1818 3349 M (str)[50 50  0]xS 
F1S53 Ji 
1967 3349 M ( as an integer in )[23 37 33 23 37 41 23 24 41 23 37 42 37 28 23 23 42  0]xS 
F2S53 Ji 
2527 3349 M (base)[50 50 50  0]xS 
F1S53 Ji 
2727 3349 M ( and returns the resulting )[23 37 41 42 23 28 37 23 41 28 42 32 23 23 42 37 23 28 37 32 42 23 23 23 42 42  0]xS 
F2S53 Ji 
3587 3349 M (T)S 
F1S53 Ji 
3631 3349 M (. Ignores leading white space and accepts)[21 23 28 42 41 42 28 37 32 23 23 37 37 42 23 42 41 23 60 42 23 23 37 23 33 41 37 37 37 23 37 42
42 23 37 37 37 37 41 23  0]xS 
1480 3449 M (an optional sign followed by one or more digits in )[37 41 19 42 42 23 23 42 41 37 23 20 32 23 42 41 20 27 42 23 23 42 60 37 42 19 41 42 19 42 41 37
19 42 28 19 65 41 28 37 19 42 23 42 23 23 32 19 24 41  0]xS 
F2S53 Ji 
3151 3449 M (base)[50 50 50  0]xS 
F1S53 Ji 
3351 3449 M (. For 10)[21 19 46 42 28 19 42  0]xS 
F4S53 Ji 
3609 3449 M (<)S 
F2S53 Ji 
3655 3449 M (base)[50 50 50  0]xS 
F4S53 Ji 
3855 3449 M <A3>S 
F1S53 Ji 
3901 3449 M (36, lowercase or uppercase letters)[41 42 21 19 23 42 60 37 27 37 37 33 37 19 41 28 19 42 42 41 37 28 37 37 32 37 19 23 37 24 23 37
27  0]xS 
1480 3549 M (are interpreted as digits greater than 9. If )[37 27 37 23 24 41 23 37 28 42 27 37 24 37 41 23 37 33 23 41 23 42 23 23 33 23 41 28 37 37 23 37
28 23 23 42 37 41 23 42 21 23 27 28  0]xS 
F2S53 Ji 
2873 3549 M (end)[50 50  0]xS 
F4S53 Ji 
3023 3549 M <B9>S 
F1S53 Ji 
3069 3549 M (null, )[41 42 23 23 21  0]xS 
F2S53 Ji 
3242 3549 M (*end)[50 50 50  0]xS 
F1S53 Ji 
3442 3549 M (  points to the character in )[23 23 42 41 23 42 23 33 22 24 41 23 23 42 37 23 37 42 37 27 37 37 23 37 28 23 23 42  0]xS 
F2S53 Ji 
4343 3549 M (str)[50 50  0]xS 
F1S53 Ji 
4493 3549 M ( that terminated)[23 23 42 37 23 23 23 37 28 64 23 42 37 23 37  0]xS 
1480 3649 M (the scan. If )[23 42 37 20 32 37 37 42 20 20 28 28  0]xS 
F2S53 Ji 
1866 3649 M (str)[50 50  0]xS 
F1S53 Ji 
2016 3649 M ( does not specify an integer in )[20 41 42 37 32 20 42 42 23 20 32 42 37 37 23 28 41 20 37 42 20 23 42 23 37 42 37 27 20 24 41  0]xS 
F2S53 Ji 
3030 3649 M (base)[50 50 50  0]xS 
F1S53 Ji 
3230 3649 M (, )[21  0]xS 
F2S53 Ji 
3271 3649 M (AP_fromstr)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3771 3649 M ( returns null and sets )[20 27 37 24 41 28 42 32 20 42 41 23 24 20 37 41 42 20 32 37 23 33  0]xS 
F2S53 Ji 
4477 3649 M (*end)[50 50 50  0]xS 
F1S53 Ji 
4677 3649 M ( to )[20 23 42  0]xS 
F2S53 Ji 
4782 3649 M (str)[50 50  0]xS 
F1S53 Ji 
4928 3649 M (, if)[21 20 23  0]xS 
F2S53 Ji 
1480 3749 M (end)[50 50  0]xS 
F1S53 Ji 
1630 3749 M ( is nonnull. It is c.r.e. for )[21 23 32 21 42 41 42 41 42 23 23 21 21 28 23 21 23 32 21 37 21 23 21 37 21 21 27 42 28  0]xS 
F2S53 Ji 
2470 3749 M (str)[49 50  0]xS 
F4S53 Ji 
2620 3749 M (=)S 
F1S53 Ji 
2665 3749 M (null or for )[42 41 24 23 21 41 28 21 28 41 28  0]xS 
F2S53 Ji 
3024 3749 M (base)[50 50 50  0]xS 
F4S53 Ji 
3224 3749 M (<)S 
F1S53 Ji 
3270 3749 M (2 or )[42 21 41 28  0]xS 
F2S53 Ji 
3422 3749 M (base)[50 50 50  0]xS 
F4S53 Ji 
3622 3749 M (>)S 
F1S53 Ji 
3668 3749 M (36.)[41 42  0]xS 
; ; LH
(%%[Page: 2]%%) = 
%%PageTrailer

%%Page: 3 3
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F2S53 Ji 
1380 1166 M (T AP_lshift\(T x, int s\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 1166 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1266 M (returns )[27 37 24 41 28 42 32  0]xS 
F2S53 Ji 
1734 1266 M (x)S 
F1S53 Ji 
1784 1266 M ( shifted left by )[23 32 42 23 28 23 37 41 23 23 37 28 23 22 42 41  0]xS 
F2S53 Ji 
2294 1266 M (s)S 
F1S53 Ji 
2344 1266 M ( bits; vacated bits are filled with 0s, and the result has the same sign as )
[22 42 23 23 32 23 23 41 37 37 37 24 36 42 22 42 23 23 33 22 37 28 37 22 28 23 23 23 37 42 22 60
24 23 41 23 41 33 21 22 37 41 42 22 24 41 37 23 27 37 33 41 23 24 22 42 37 32 22 23 42 37 22 33
37 65 37 22 32 23 42 42 22 37 32  0]xS 
F2S53 Ji 
4739 1266 M (x)S 
F1S53 Ji 
4789 1266 M (. It is a)[21 22 28 23 22 23 33 22  0]xS 
1480 1366 M (c.r.e. for )[37 21 23 21 37 20 21 28 42 27  0]xS 
F2S53 Ji 
1778 1366 M (s)S 
F4S53 Ji 
1828 1366 M (<)S 
F1S53 Ji 
1874 1366 M (0.)[41  0]xS 
F2S53 Ji 
1380 1466 M (T AP_mod\(T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50  0]xS 
4520 1466 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
1380 1566 M (long AP_modi\(T x, long int y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 1566 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1666 M (return )[27 37 24 41 28 42  0]xS 
F2S53 Ji 
1700 1666 M (x)S 
F1S53 Ji 
1750 1666 M ( mod )[21 65 42 41  0]xS 
F2S53 Ji 
1939 1666 M (y)S 
F1S53 Ji 
1989 1666 M (; see )[23 21 33 37 37  0]xS 
F2S53 Ji 
2160 1666 M (Arith_mod)[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2610 1666 M (. It is a c.r.e. for )[21 21 27 24 20 24 32 21 37 21 37 20 24 20 37 21 21 28 41 28  0]xS 
F2S53 Ji 
3156 1666 M (y)S 
F4S53 Ji 
3206 1666 M (=)S 
F1S53 Ji 
3252 1666 M (0.)[41  0]xS 
F2S53 Ji 
1380 1766 M (T AP_mul\(T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50  0]xS 
4520 1766 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
1380 1866 M (T AP_muli\(T x, long int y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 1866 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1966 M (return the product )[27 37 24 41 28 42 20 24 41 37 21 42 27 42 42 41 37 24  0]xS 
F2S53 Ji 
2098 1966 M (x)S 
F4S53 Ji 
2154 1966 M <D7>S 
F2S53 Ji 
2175 1966 M (y)S 
F1S53 Ji 
2220 1966 M (.)S 
F2S53 Ji 
1380 2066 M (T AP_neg\(T x\))[50 50 50 50 50 50 50 50 50 49 50 50  0]xS 
4520 2066 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2166 M (returns )[27 37 24 41 28 42 32  0]xS 
F4S53 Ji 
1732 2166 M (-)S 
F2S53 Ji 
1778 2166 M (x)S 
F1S53 Ji 
1828 2166 M (.)S 
F2S53 Ji 
1380 2266 M (T AP_new\(long int n\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50  0]xS 
4520 2266 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2366 M (allocates and returns a new )[37 23 23 42 37 37 23 37 32 21 37 42 41 21 28 37 23 42 27 42 32 21 37 21 42 37 60  0]xS 
F2S53 Ji 
2403 2366 M (T)S 
F1S53 Ji 
2453 2366 M ( initialized to )[20 24 41 23 24 23 37 23 23 37 37 42 20 24 41  0]xS 
F2S53 Ji 
2913 2366 M (n)S 
F1S53 Ji 
2963 2366 M (.)S 
F2S53 Ji 
1380 2466 M (T AP_pow\(T x, T y, T p\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 2466 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2566 M (returns  mod )[27 37 24 41 28 42 32 117 20 65 42 41  0]xS 
F2S53 Ji 
2017 2566 M (p)S 
F1S53 Ji 
2067 2566 M (. If )[21 21 28 27  0]xS 
F2S53 Ji 
2185 2566 M (p)S 
F4S53 Ji 
2235 2566 M (=)S 
F1S53 Ji 
2281 2566 M (null, returns . It is a c.r.e for )[42 41 23 23 21 21 28 37 23 42 27 42 32 123 20 21 28 23 21 23 33 20 37 21 37 21 23 21 37 21 27 42
28  0]xS 
F2S53 Ji 
3331 2566 M (y)S 
F4S53 Ji 
3381 2566 M (<)S 
F1S53 Ji 
3427 2566 M (0 or for a nonnull )[42 21 41 28 21 28 41 28 21 37 21 41 42 42 41 42 23 23  0]xS 
F2S53 Ji 
4030 2566 M (p)S 
F4S53 Ji 
4080 2566 M (<)S 
F1S53 Ji 
4126 2566 M (2.)[41  0]xS 
F2S53 Ji 
1380 2666 M (T AP_rshift\(T x, int s\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 2666 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2766 M (returns )[27 37 24 41 28 42 32  0]xS 
F2S53 Ji 
1732 2766 M (x)S 
F1S53 Ji 
1782 2766 M ( shifted right by )[21 32 42 23 28 23 37 42 20 28 23 41 42 23 21 41 42  0]xS 
F2S53 Ji 
2330 2766 M (s)S 
F1S53 Ji 
2380 2766 M ( bits; vacated bits are filled with 0s, and the result has the same sign as )
[21 41 23 24 32 23 21 41 37 37 37 23 37 42 20 42 23 23 33 20 37 28 37 20 28 23 23 23 37 42 20 61
23 23 41 21 41 33 21 20 37 42 41 21 23 42 37 20 28 37 32 42 23 23 20 42 37 32 21 23 42 37 20 32
37 65 37 21 32 23 42 41 21 37 32  0]xS 
F2S53 Ji 
4745 2766 M (x)S 
F1S53 Ji 
4795 2766 M (. It is a)[21 21 27 24 20 23 33 20  0]xS 
1480 2866 M (c.r.e. for )[37 21 23 21 37 20 21 28 42 27  0]xS 
F2S53 Ji 
1778 2866 M (s)S 
F4S53 Ji 
1828 2866 M (<)S 
F1S53 Ji 
1874 2866 M (0.)[41  0]xS 
F2S53 Ji 
1380 2966 M (T AP_sub\(T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50  0]xS 
4520 2966 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
1380 3066 M (T AP_subi\(T x, long int y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 3066 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3166 M (return the difference )[27 37 24 41 28 42 20 24 41 37 21 42 23 26 28 37 28 37 41 37 37  0]xS 
F2S53 Ji 
2179 3166 M (x)S 
F4S53 Ji 
2250 3166 M (-)S 
F2S53 Ji 
2317 3166 M (y)S 
F1S53 Ji 
2361 3166 M (.)S 
F2S53 Ji 
1380 3266 M (long int AP_toint\(T x\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3366 M (returns a long with same sign as )[27 37 24 41 28 42 32 21 37 21 23 41 42 42 21 60 23 23 42 21 32 37 65 37 20 33 23 42 41 21 37 33
 0]xS 
F2S53 Ji 
2570 3366 M (x)S 
F1S53 Ji 
2620 3366 M ( and magnitude  mod )[21 37 42 41 21 65 37 42 41 23 24 41 42 37 145 21 65 41 42  0]xS 
F2S53 Ji 
3468 3366 M (LONG_MAX)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3868 3366 M (+1.)[47 41  0]xS 
: N 1380 1110 M 5020 1110 I 5020 3790 I 1380 3790 I C 
eoclip : N 1732 2459 M 1828 2459 I 1828 2603 I 1732 2603 I C 
eoclip 41652 VM?

%%BeginResource: font LucidaSans-Typewriter
%!PS-AdobeFont-1.1: LucidaSans-Typewriter 1.006
%%CreationDate: 1993 Dec 07 10:43:50
%%RevisionDate: 1998 Aug 11 09:45:12

% Bigelow & Holmes Inc. Pat. Des. 289,422
% Lucida is a registered trademark of Bigelow & Holmes Inc.

11 dict begin
/FontInfo 9 dict dup begin
/version (1.006) readonly def
/Notice (Copyright (c) 1991 Bigelow & Holmes and Y&Y, Inc. http://www.YandY.com All Rights Reserved.) readonly def
/FullName (Lucida Sans Typewriter) readonly def
/FamilyName (LucidaSansTypewriter) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /LucidaSans-Typewriter def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding StandardEncoding def
/FontBBox{-12 -205 618 928}readonly def
/UniqueID 5096708 def
currentdict end
currentfile eexec
8053514D28EC28DA1630165FAB262882D3FCA78881823C5537FE6C3DDA8EE5B8
97E651A592E4F556BEF9359FC62408332EBCEA130F7B8EC0669941AAFAE641FA
D7D88DD4ECF7A242DCFA717D34D4C60059FBA9A1623373EE8C93009FD5DA54B3
7B1B48962BA909E289A3264FA7BB8348760BB3C5AAB5C7AC22980AC562528D22
06EBF93AF39013E278B7FDFEA34364982F0B2F75172FD5B35A7FA624C18A804B
4946B513C2A11E8591385C3B6BAA330CA68E18374F5B62FAAD6A3E70C7A3A430
9985C300FA90436B49896D0FC0ABBA7F20AE89F4D98654B7326F59F636E07F17
2E91894D6F5EB000EF07F8699FAE50DEAF348C1D4EA3D16A5417C3562F5D189D
50EA31DD126D7ABB44160F883D12931CCE0807674719D06A1AC627F664C7B53C
3FCAF147A25D03500AD2D0714CDC5664278C291166EBFF0DF00FD1A95B779199
478B07CB4BC068FA37596D4EA6E716E411A61025E65DB37C1DB5B205A0CAE39C
7D37C0FEE78A9C092967C794AAC29EBBF4D040A306A9D4BFB0669471E87D9674
84E6D6634AA98A69DAC271048BEE589032DA0A8248D033ECC0E457DFF95FDDFD
34DCBCB7C2A81823615F4C091C7FA68C8E5099864A93AE1534006BE741F0A034
57C7BD110C273BE38E0DB6B6D4F7286EC64382F0D41BC83AE54B4E66552B0FE0
6552F6AD1EF0394F62F636AE64E768C7D475A062254BAB04CE01FE634BCBCFF0
B6B3DE2E8C23029A6F83F5907F7A9C6F2A7E6A6DB50129E7C7F7A001527160A4
62D394122EF1FA8A3558FAF422479BA81832DABB97EA445C74BA7921A84E3882
233BB0C055F532A25D77FC85C3BD4AE02163A5B6B4F03905AEC28E3013925193
A803A3EEB63B7D858222D6FCE0721E2AF5877E354434A07388DCDF19AF9199D7
D074837801C3EEC7DC81164BEBBD9FB5B4E40C2EB8B1F259EC1DB0DB0ECD677F
266C740788B4555ABFD2683DEF61981761E58F9047F2C34D9ACF156EC33EDB36
6CE7605D8F50F671C576E34435C1FDAFA7C7CE8E7291EB2815D11A767BC3528C
EA8F5CB7A5DE881F1CB050CEDAE7659CF178E5EB227FFEE68F05FAAD0754FAD8
14BBB181B06F7786B08BBA25EFE4EB84917AB695F21946533A70D47671678C8F
59059E431CD83EDB6B06FC1D4FEE43CC06FF89A82EA6A8C1CF7962A84B130B2C
27C862C22EB518AB3D5FB903C296E7B8D23F1C412F41B21609DEC2D334EFC6BE
2A83556062172B7D40490EAFFD546625E2887F9FA0722F8154EA8C28BC635091
3C5FC55A06CCA0315E9617FF9922F99E689941D69409C6B01C9FC197C719376D
3783BC35B996D439E755E862D180D930AEFFB5BB60242B38A0A866E44E1281C0
A84A49C60475CB5EFACC8A4C36BF112678869F92697E30E0922A3C79B8767D64
F112B537E5248D7E098E0D4CC7411825073CD30F0346E7105DF7E7EF8C5F3A7F
8DB0859A8AAF59B2E7DA81E71BFB5E7FCAED85278A2142CFD0DA1EC39D15CBC8
4F3D390DF05A1955953AABC33FE25C84A7CE52F738DE77E7DD4E3A14F9CB2F44
3A4FAC284BD50D9DCB2D3CAE0329E1F1511ACB6CEC174E9A08229A58C8E3701A
AFEB59DF368F3CCC0D6726098092EB246C5B8E294E71314D5D61D992615BDBEF
A2CA75C24B5533AD7588FAD32DAC93C6062750998D134C8CB2A2473052D5B9AE
32A898D7ADADC78C3407FBEEC3C0A2743BB0A185CEF3C2AD8F25819C130B7BA3
AC85F0D41E2070AA3A308250F31E55BD7DA1CD5E908CA522C62FBA6B3414FB1B
CAA25060BA156183BEFF0D76E2EE37AB8120AFF3C2B6E1ABC550764166346275
48EAB3CA08C07041134712E92D22B753B976A59E8D3FF52E00DE2FB8FAE192C3
82210FD9DCBE6920BE67022740FB5DDA67480BEA1102DC5F70BF8BB7BB807DFA
758655AA7DD895ACFC8A7960C54F180D32D2DA248FEA4C74D48856684F519B46
7DC950C06ADA305E35206EDE254851A51C4978D0BABA83094833C6D0594BB2CF
6CEE942D8ABA14ED5917DE8DB641AC659A5F7220BC5E821B18D346737672008A
935D5742BE83214D53F341A28D4229352AAA9637570D7643216ECE343ED2371F
7EA3FB529E5DB9407FDE0D0D3808E994986A66BD722E0D80BB926AE0829808BE
E2209380AD90BE150AAC561F41D6A821B48CC84EC6AC14F7EDCC75AF6CD41B91
8277A76C7CBF22EE2B4FEAF930DC4D5886C5A41FA2317A4C2D8A877FBD975F94
5DD01970411CE7926C7A8F3D9B0AE43133B7E41F5267B075C5D91DDA5C1E80C4
0E5C51E64CAE2E110B759EBAF99592CC41435C02C9C1CD97FB9AC6BC28D6C643
2B3DB333A63E7DFEDA1BE1810A8B91C8815102EB9E2F8DFCB57523520FD542B5
C72B68BD2C3C698F135173B7A8ADCEABFE4F6A4CDF014874FD4DF3C3C56C883D
FDEF1E25B45571F8C0078A809559DCD512175FB2C2005DBC9BC3C01A5C02F844
EA5462944D87A434B6F4117F64E650B2FBCD9B1D8F5D7B57A5105A3A1A580012
4267F1E5334EF118CD24FC8AE784AD44AF51EA48E2D7195F7AEF8624AD2414D4
B3AA5790ECA92F5BD3999D01D8E6326B51A9E8C9A94E5A800086705C5AF22C0F
4B06BF80E31BCEA91CD3B0A2B7AA4D3CA023A49D67975E89122BC79C74B56C6A
1661C005E497448D9BCB53DB1CC5925E394ACA6EAD2890CBE940F3FC81CC9559
EB0A7AE0FD99AE1197F0D73E3D69BEC35D58BC452D8CF7DD93834089E0C8B299
E95E290048EECD08BEB6E5FB66152E495B5F9FE4787DFABD537E41B7C19AB7A8
35D3CBBBC0BFAD0880F9A4C07043477F2BA46ED1949A85DC6CF394C7206CDCFC
863A00B375595BAFC12972F4D6DA5A5FE61FF4B2AC1EDB75E7E370C08860C794
7E6D536D8602E67B2B5EB7E28E428BDA5A347079480331ED0CD17935FF0746CE
1746FB3CFDBCB0906C8BFF996F1011B5E743E48C4600A846F9753A08E59F987D
CC73ECDD96BC2CBA1F7E7F12A48049F1C8CC33EB4BBFE377EB9D729630EF643F
6C34F918EEF90EF7AA595C166701E487711C717325D76FD799693F0170C76AA7
6509C3FD50B01C51F9F35993DCB94F7DC03E1CC8A1BDA6D46BCBDDF950454490
7E63F841C68CC12ACB03DCE5D8E384FDDD86B47CB69D0283B9C416B319779170
1EC31004FE3D2F45324348EB072C1A7ED130BBC7D9EDDE857423541DF1642C28
44F89113D24E942921012340F0CA0A4596E1AA10B5AED517E98F19B57B74A0D8
8A4DE0B6EF8BA4EFD5412A234618144F06846F10681BEAC4CF7AFF79B3ADA8C1
EF454D7B72145BDA68C3ED56E160A83EC9C836875F1E457EA627124C70857AEE
3DB990EA293FE43907D2C816D4500E59268A238270018ED5304065810C7C517E
86403D1D090E0C7E3D192F84A8F2CC8D9F22CA319E7842930DFA7B4EC0DDA03F
277A151A4384F4A9A33073009B4C8AFF220C16EA3E1ED06D8A404F70A4CA8B16
BC063FB4293F1B19C203EA267749333E571BC6E486A53EAA42F7C92B207B77E3
4DC1D0BB6ABAF5FD017A49F2005D9306828B91096E0DE77FDD77DE5F095ECDA8
E76006B0316C2A013CF404AC247DE4404BC9A664148EB536A3AFED6510F73AC1
FE2C100E92199303E5C8943B788A3B916ED83DAD00A0416F55805D8AC93E3FCF
83EF45E0C8A4F2C885FA88BD1EF96BD136495E525D475AC524EBD0ED692AA8D2
EDD7C56C508A41DFFB68376374F3F7E484662ADF1EFAE107E80173568E8D1E3F
2450AA889E75E82D8C51A761880EF90661199E22AE1139089224F29C458D8EA2
FD6216822DBB0B187EAD83273875E489BB70BFB46D4D233158BB32D1F1AF775C
8623C4BC2C0E87480C9CDD6C1EAC737371493AB27A25CB3ED03B23796EE195F1
DA60162C89D415740F9BBC4828FB653BB558D94F1DF804EC8B016990326152FF
C92643E03C3CB33DB795FDB245FBB207C6525F9DCFB98F18AA9AA43A7686F009
A62AC3EE5BE330070C60364636B5E1C8B4C395DC66929B119FC14DE9B04A8343
BDBB2A306C976611F5A2BE98B5D84C91FE26C255230552FC0D5BE5A2E46EE787
5AFDE937A222835714E7D177348E975D3F9099A89A4B9ACAD0453BAF28F3555E
20EED10277D04B49C73FA8EEDE1CAE30407BE8A13203F5A473DA00C2CEB5DD3E
190452E4D57E5C266491D772B82F9833FBCCBC2D64A536D7C535CA651162A277
E4BD69E58E684ED06A2755AD4BA874AF643B21F50E6677A4756AEC9A82B21738
CA7D1D1F5BDEFC02723E8C7F92D9707C0CE4FA1E1A317D882847525B255EA238
DAC1A5B6B9507C2B3AA801B240ECA9DBC61A3847E41E749B496AF2C55FC9F859
74EE453E94B64B917EE950DB96AF0F821187C71CE7B07E74CCF5F259B40448D5
89E283CBF97FD66C53EA4C0CFC05FC07816C9AE3ABF5D0E4A00F6E5BF819DC92
0209381137C13F9C0E5EC13907CCE91263964A47DB33E6916029F9D8FE43EF67
47848C510550C058424FE67E5CB0A6165869D4A203CD3BB02BBADC0E724185DE
4EBED077B0D6173E3CBCEF5504ACD134FFF557CEAD06AFAE161D3430306B2075
6509E62B0A293EF3BD3F6A38CE712BFA42C219ED87AA71E34C2827CE1F6D4F77
DB1A7799D3B4154516B08D34E77E13EED16FB0C45D921040F12553FA3ED5AC67
FA9294F0558DC9DA0CE75B5FA4D8F98F58F1ADC25C960F4793374EFC9750C4A6
E63DA80FFFA529DA888B4F8EB58871AE54DA702F8A59580AD53CB72A2A47A234
ED59A263906436CF1028B9E887440B6FD19599FFDD2B6BE8652B31F27BF8214E
937DC7DB0CDB3944EB617F8242FDC9E1ECC5C62C351B06166AF65FD659919FE0
666CE7EEFF05994D77A3C54C1F5529B045F4F6D88DAE128F2CE9FD8E7BCFC37C
0A49A2648F96F9F1C71D832BC5993CC4717662E27D58F3EB1DE8B776E7EF83FB
A1DD36EE30653F6F0759BB9DBC91639F522FEC34A32936C63FD32EAA87027BCF
A6A9CCE3B2016C8A599292CA5818D00B2D33AC298E267C0F7D3EF17FA86239BC
4061867222BB77B57F053C012CA6E4C7A5F828E06ABF8B0FD0E0FA34266D06C4
39DC3D16DF92BA008CE6773CB74F5D86AA5EFD8E058602B9A297A466888564EA
9862EE34BF6A9A0FB2C775D338C7EBBC29F57AA9909DC8F587301D1EEB898F8B
90911D820838CC40FAD7637840CCCD083F15602A1A530D2694527E2D7907B528
8BE021E8B6B8E356576D17B5F5D6BE3398B4DA79889A4C361F8F5A7FEFB29A15
6AC78CDF686762FB7F129B6F329B797E2F6BD67FE059AEDC3D4F5DB5C2EF7D50
A7BDE65D49C3CCBFB99328125118D135C4BD10EB4FB1EEECFBF18146267DA402
E9ADF094530BFF0D76D510C22F4DD15A7DF116D6E654A6A705DAD1643415D4C6
F074B6C49BFC8575A8E26388FE47519F5D34F19D36681AC9791D2D3C40E81FD4
BC6D6DB9FBBE3BAD15752E80D33793BF5F0D6B0D0643796CD4B0351BE0F7142B
5D9A8CDC2C04114C31C9657EA2E2C94F827942211C9ED90DE412DAB449F2566A
81DE45E4C765E5981E1000B15AFA2F6C224DA91CFAF6AC4637595AF34A76F104
457B012CA1ABFAF24C68E1D4CFF1C2B77D95449E801DC3D72F9D0F97E9CA2287
D2E6EAC873A6AB27CB75FEA6316125C65456950FAFB9B2802C38AC66B24881B4
73EE42E510092C3924C166117F4F7C28D585A82AA607F5288D1F4CFDAA6DA004
CCAA1B1E50102B6BFDDFBEA6FD59DED47F63975D6CEA9BFF5A7387DBB726B846
CE60E8001C3DE20238E8E275CE77E22E39FF2A0382F0222F55C054DC60B5421F
9E64FC79E5A5C495A46F8A0FFAEA735FE747FF5A4BDF502610C1719075E8B44F
D308DE99FEE6E65C24BDD462A3AF548ADB949B64BDD97E46AF0D7AA9D8A771E4
417837BCB6D457692B3381A9C74207A37B9E467BD7398D2EACA30CAE3CA2296C
E5D807C8FA6FD60DDA1A1AC4E0D8B910253185D0BF310B72B37521CED4C7E8E1
F362ED7D2D594119D0B0850DDC50DFD81D26F432A158D7E3ADCE588E97A89D45
A79B842E4BE76881D6EDCE4EA9BCA9EC03F9EA3603D6DE50DA24DB26AEA1BA09
2C93B4C961B215113E42B921A5285B695FDEAF583C306CA8C2B4B3EF15421881
D1EC4E5AF5C3B5597DE207CB37919D573839F25C5194CCBD1832ADCC813FDC63
E504EA684504A0E5435E214EF636609DAE7F65C17CD72DBADD428DE37989C11D
FBAE86587F04599BC97E78F14AAC3884A5DBAA834A9896E450085448972F631A
496D9EF0D0A51B6875D1F3BACCB11654D516F49519B2180F75F456574B0A3ED1
24AFD69D82BCC66D0E0B232C4432A45FD08F9EE1A23C8F45AC9CBAEB77481E5D
713E2FE52132AA1AFF45A1735609F24A071FE79B77FF82B96FCC001D347D043A
E306B51E789F53C0A4751D4F098CE9B49DBAFD3E875F4818557E72264C67F12F
6BB4EAA96A8F9B7E9EEE113FE11F82D3D30E525749165E60577642FA1C66D0AE
715568DD16DD5CB5E1400B3DF05DDBDBD0140BB9750EFFA32492E1A3249954CC
5A757F96BFA7BAD9750365C26C66675D0B5BEAE93CE44A957D3D8D58BF8AD0AD
86E0F1444821BBC34203FB73E002A6386A642E966692BA25E3C0E9426873F487
24C3231C1443ECECABE569FAD82A14DB200D2FC41AD914AD82FB017DD7FDF79C
EC974978844F75F6219DA34C3EC37076F6EECB441777B1D1D3567E8F22394DFC
ED36809739E6FD60259A56F4738EDBEBE3C13D81D4333DF267375B203FDA874A
1E5E6707CA34AAD20368E27D7BC952A22CA522649535785E4B5929B1409FA303
94D77E925917D58B8A7C673B600EA92A4AC5E679CA8B01FCC6745D2CF4802DA1
DE6EA1C7569F97368D15041877D08DA91229C6F2815EA307E763A40D78B8045C
EB53AF5396F6C592356E243876777DD9B7151008C2F459553B9F0683C6749224
EAA92F8A9B53D0CEBF776D5E6BF718A07B0EC538A497C2EC4915BD745B7FF1B5
E7C754975517D67F67FBC6FA96A379EE12364DB09760FDCAB69B0D9353589378
A3684E9AF65599FAE214B279F0F0EF6FFC1F793102430FA2556D9714E744A31F
7B7B83E479B6976621F5B08085CCB1C7E6FD4EEA0C03850C66DCD6A189FB4AED
42DF84F5FD7A34465F9791E146A8C658CBF7EC38242260E1D3DCE693B688C9AE
3E44AE3A91C426DF8500012AE1956C1C324005D65F6D437DF967A8B2FF887029
ABE6F96CD3F5D50362E9C8B55C850DFA7BA66475F51FCFC5B267725091D88C44
990173496DBB9E6D0AFC6FE4BB273973164D152ACBB3C7A59638678C5C894795
410DE530AB24999E403E39775CA202F39AEADD56D321665A78407A8169453553
954673EF35F07076AF7B1C3561ACE41719062FF5E867FDE068408BC0567C286A
94C0B2ED398A451C74DA9B275829AE53A4294B9B714F7579D5ED0FB87C6A9DAE
EE7F379BD9223E2E42F08ABA13E644ED5012CAC82119CD4F8CD59CB5D79BB513
3ECB76BF65F25EAE105DA6B1FF886AB0E0DACF989335A3D015200C8E58737C55
D013EC3F461DFACAD3CD6731A587B7840A761E14BB991E36B4CE2AD007A2FE89
05E84B8FB2FAA40D7A6E67435C9ED511F25008869DD5A62722BB767E13623960
E71CB139B55FD9063DF8B9F0FB983B5254BAE98EF17E3E559C8EF56519696C74
B19A1786E12648694814B221B3F95CF63DA0FA19A37177BE933F42009E4CEC41
496DF4E5CF64BA5A9413C272FEB50783866DA71281C16EB7A835667E1DBC01A1
AC2DC88D154D43AF0D5ADF50F09C029DCD706DA0872DC6C69A06519D18C24FE9
F388287F6C91B9B3124E5735123B3872869F8CD9EF5B28137828CFC305344484
37505B16CC35C92546AC9CC424E25F0BB5250062BB258509DEB60B16898792DA
508ACE4DFBDC525469CB361E99038BA1F095534964212C53C0E0DCFE733797D6
6D77FE4BDD3D6988149B58DC95021778366B4236AD9B39C1CCCB6C126242B18B
C7436036475734BD219550B0298903F960DC79EB17FDF7BAA5E5225A198ED97B
D2C07D9FD5BD580640B74962EF77F8C21BA40176994C72333BAECA85EE28E934
DC913B30E4E018A552A7D23179B0CD013690D62AC209EAA452EE287026A2EEE8
BD3E8EA32E15887855D7BF32D981EC8AD491C26A5AB9ABA48E7B5A02BB81AAED
23A948751C76BDFBB8FA8F2AC78FE3EB55851EEDB2429633BB5BC03E958FA6CC
7DD6D8FE7B6D885804FBC60DA7DB73DAD733BC09A646AA3F99875791BE7C81D9
10C52720F3A265095B093E3B754D1363480F66AB06081AE13DDC23EDCBF4CD20
325A17373761A6E65F482929659973C9FE825A8E86D0D06C6888D6D40DC5C1F6
C05296F9174B57BBFC15687A14752A51028BFAF5C89FD6855583F1016D89DB0E
C362334988363DBC74916A199CD4F6631C3E824C3EDB02BBC82AEE90B6F57357
E22BB10E1F9A420B7775301EB568C63445FA63C8D14AE32C43805F738B64A172
0A6BA24CF8E6248967C9BFFB2430FDA58E5C9BCB993D6DC45DCA56257EB853EF
DC6DD33E2AB383821F4EEF3024C5D67715264E910B6FAEEC71709E5DAE9230E3
E308DA15379C959982961944E8207FBA51A391BBD110826FFCAA6C2CFF21C845
C9529A6F88E0F6469DB344E89ED1A5A73E3345F0C5B3E168737F1ED5B8CAAEE9
A3776D33FABE7E2EB48B81F715D60ED02415E39877B9E6617E18DEEFB52EAF90
4A81B6BC6376A35EF232D4493C565B28F302DE3D87D03CA02C0D41B0B91A1C24
C1AC87303EF3F8567347DE405AC4ADC94ADF0F13B79E7754888890B6B20331B6
7C9DEE81384F211132B1853073B808EF52E05D7CC03D58AC240D40D58C77E983
058FD94D340EB1B42F7FF011E9064A5DDED6105464AA73C368E43DDD977293B0
E757C482D7EB50A11CDB5DE634F4F457E54A25870600060047E5C13230F46F9C
00777A3F293D5CF5AC895784FDB44E9C780F5F860C918F0C1C09E47E8A8C4FA8
970FBA4DC216E80FA71E863863EDF62754F9D2DC9EA2791D875663D462698241
6B6745D212B2EACD4C21EBA023706B113B4468FB8FE123366386B9A2BEE00242
37A9EC9C5CD4ED029A986083EA9523970259085CD2BF8065B8DC8EA1A9CCEAC0
51CD22681058F07C5EF321AE18D5161CDFEA91AE25F510CEE2AA7911BF577AFB
6779024586A5046BCC5952EAD366580604F557853FB4C989EE332ABF0B4B8577
D919487098643CA1671469AAA1B10CADB60436AAF5595F7244285B70FE49BF3A
56729F8154B34EF9945BC63A6F70A2E41259B315A32742AFA944CB7E1011ACCE
5684EA033D0896D584B0912E81B3FF3E68F457A8A908C179B07E3726EC8262D5
6443FC739A7C198C6DE037700A778F8D5BCFA0F2A1636837FD2C65CFFA1071F4
B6D7F9AE094F7AE8C17AC9F910523A389F7F08199FB04D534902954128116344
2688A58A6ACAD1CDFDD9C31D1F4DA630ED514A08B9C1B1E1C8DEB199C6AEEE3F
501B1A5537D3E7BFEA9355E6E232A0CC5F40529E880C9A1FF90B1B5BB2F1F96F
9F3340C101EE269CA55A1D2C86BACDD3B2C06AC1380BD89A2AA7F4E4C8B09DCC
FFFB7B4B6D130053E869BC2BD8FAC9C227EEFD14A13A55A6AEBE33282F7DA834
BE875EE58627560A8A303FD91BA2506ED7A26C42A2BB36BD6926338833940A03
5E6FB0D5CA9EFBB5DED3962A6BFC3395CE8380C3A08F98DD6564DE3517A01691
450C8D3859AF41955EDCF159E3F8EB117985B74B2986AA97EA1EDDB51A4A9DDC
48938B0CD1B651871B052CDDED69013313E33F4C5E9E1732383EDDAC769BA16F
FDBA2F68628C159317552D1DEA73BB5C4E1F67CE3E34FE91B10D927F2B2B697C
EE7629CFA32D48FDCF444B0F466F9E71DF13FE83B1A1547D4AB15266CC461A9E
9F872734839184A8EBFB41DBEFF38A039DDBA1450C1ACA83BCAC1126C4255366
F2425263A87B4EB1E8BE6DAB361189B9918913CBBA863144E04573EB27862888
3C0129316373486BD859F22347D62DCA668F1B7EA5A4EA6E9F1F0D0B6B2731E0
005CD425B83FF43F255E406586FBD067042F7EB68EA9AB22F11A29030FDDC4E8
10F9E8180480359E8AB7F5BB0541636A888E1F49D5AC3EE3FA6C1EEF964AB04D
671AE16D80C4FC07B43EA7006803647BEBA7768AFA167837A3099EDAED57C184
EF5CA2D91E6ABD42543D4B2C1B2A9CF72D5A7728CF11D594576B29207D60F923
A64ABCEB4AB9F88ED1A6A8A3846A96DE22AB8A65CEFA4B1817D4436C5E8875DC
5DE288AA5F31EBB722CDC3DFE5329F626837866F197571A8ECB39B90484651B1
64FC7D783DCE06024E5EA110E2E3E2FDDCB2B746DC3D3115BA48AD762857B892
B86497146C40EC833096C5E2FD49E0C8F65675DC577BA905AE28B2EE2EE6DA3C
663D4563F1FC08FF47660C6D1A1FE7212934B9456B1FF69BCC97ADB5565A4A89
BEC69336439CD6BA2FF915FE1CCE36A7AF1A22EEF05378070518066F18A4886C
2FBBD6F34BDFC50B38CEC824B5978C645ED75915F39A0CEC1D660B7966B6C767
EFEF708E4558CBA7AF3F5885CCEA91BCDDB04F00E940CA0785BBCF6C77002077
6546D090CFE20EADDB922897291B54D99B0DDCC68B024E3EC757BF01551EBD19
481514A9C9818972243FB0B7C46C4CDEE567DDE22A10D9DD033CC9C3D16CCDE7
28E0888804F4B536191160AB825E0AC5837C3B2AD6D6F742C7BD88372F92A5B2
35A396A496C4DE1D9129885D42A22F8A736A3847A961B63ECDFE9A428D6D74B0
72953F2074624D7CE30FA5CD0B13951F6A978D172E38EB0C65D36FA19A2D22F0
427307C43231999A650B8262EEC34767E3627FD0A702C528777E903D8BEE5086
D2C63911338EB050D21E829BE6C05E394B0861A2D3AE748743A846B028EE2DA7
5F2E218EAFCA48FF8690871951FC148F987F04A4CA62D39DF26D703AB569537A
7C9F557CA3045BC48D38E2BF00794D32958E8D0E9789E5C5FFD8E52C706869F2
FF33FBF1A31E16BBECB57E24EFCFB65DB4DE1CC042FC5A8D6FA07D6835534979
8633D1DD8AD82B08F13074B85A1BE34A580083327FE0E32980E12C784BEFA8BE
809AB41AEDFF91D05DACD236B06DF95C2E09163311AEBD43650FA894210BF966
E250A45D5465CC95DE165AD6CC5D9E932B86166D45B7ABF0F30961BC545E0B88
AEFEBE263E64DBE40B960D1A5BC0649E9CA4F84FBB8EA32A0786A6D4EF22740E
8FD12231D7516DE764AFDC511C1E4B6C16926C317DCC661529F8BE47C87AD5C8
06DEE0E5D50900A7AA525D3D1D48A8A6F259377442451110A2C4FA7B26F04ED7
4BD669B1A2B0E86851B26AA939720CD912A316EF07672E2AA76033E5F1FE5568
4D2745994C8991DA4FCBEF13007C5CC9E022E7B3FE5C53CF95A72AB50E0E5259
F8234D1F19F12C13BA384081A7982BFE0F22513C88FC9AF47FD8CD794D493BF4
D24FB228FBF60EFF33041D013BD61C7D2B2DAD3D55763A23442DC9DD5CBA0100
4F3CB6F36AC618CBD52BED1661A8D1F0DACEAEFAD12783F0BF36BBACFFDD0753
767383A60EF542A04E5FEF534977D0E40D72072BEFD0DA3B6F0D0CCC5F756BBD
050FBC145E61DAC877CBB8C2CA50D63F999FD85617B3C9CDBB39D091E5B9DB95
DE824C504289C1F8DBDACC6574FEF371554BCDA30248CF325FDD660DFD24D03B
641CB9678EBB2E5EBC5F735DBDD289312DA6EFC2A8B2486C0022FC22617C951B
C850E6BEF63C6BADB55431EB6F7038036B6FFD5433C91AB535A22B68E7E126F2
6BB6F10B3F9069237B473706DE46C5FDAEECFAF7E12DE0CAC80DC87EEE64B0C7
8B66BFDE8473CF1B26D9501B849C45FAC3FD47F662F99683928E13D9CC3A8903
529E88E2B6DC5D1F5841E335709FCE0DB027174E9103BDBE8E13FCABD3927DB1
E08264DBC438FEE4246A1FCC515294CF5786424666829B41800D96E5CEACA0A8
75FB4239258B509BDC2639F254BC215AF527304E1A29D2FF79EE51DE40109866
D31F8314EA87DF32898A426C20B55B964C350FA094AD59C7E44C605E5786AD6B
8C80980779A75F93D7EAA53FBBD3DC69A4D1C4488614DAFAC2385D0620EBF70A
973707D5DA6809846D92B7E98ECC9B262911D995DBAD11B8288273FC1C820D2F
6FD61DC3656AA97463F26749856FA620A53E313EF054A71AA325063940C126FD
62666101A61A944F17DA836CE2EA152E68A391A499303975006A4471B90B1CCF
C3F3C5E1C28F4CA3780A0811AE1A12272F2848350C9D85625739D96E6912760B
3439119C3195120C3A01F5D18558A337B4A3436A892F8D05E7941A62C61C809C
C2CBB49C63F0D7C298E5AC579B6034ECCACE9D5DD425B0D5B8BF96465BD7CEC5
C9CA132B263FE51663F898FD74762E77E3B65A2109E5E195CBDAE52CF3316728
6F1C3EAD88FA0A3AAC166749A56C3BA4936FEE0906A030C2E7CA185D40433B13
49E8AA7AE068307FF91263BFB2F973BDC66208FD877630CEEA7D15D44724C975
A24A6D30E9B77472DFD178F68617002595ADE6922C8870FA0B3119D6C92E912D
1D7678D98C81AFCF5D2A900936EF996914B2C08B982CE7A3AA1B6897BD00BDC0
8AF8A13EDB6A38C606F380EF1DCE2B0B631BCA6B8606EE9B9F8A73DA49476277
E4DC42CA8D1F1807FD49F7A84D3699B790097100B9902AF9405C576C281CAFDE
850F1D76D27FD692B2FE374EA58B0F9EC14C0346075E15BEED894B290A160CF5
A230C34FBF2A2EA3A04E99F9DDC38EF3D4E25F9668DB0FE9433651A13B3FD121
B3BB3A4EA24C903DD3BCB404C392F237E800D74C65F683C504B30B11BF1A8C0A
5454F33028DA4B948ED171C142FD21651B8DEBF8FD1ED93844C8BE8CEF4767DF
7C5500A9E5B9C1731F0709EEAEE1FF17133CF21CB5E6C006F030BB8E7FA08A07
C59CCB1C10949CE1F37633268F5B37430BD67FCEEF7B06D81A3F51727DDFD510
EEC4ADD2B8626C39486FAB19BCB6C3ADEEA86B7F6BE6BDE6B28502BF2137B48C
DA83C370BC1D9CE6D45F5C23F3DD94D8F1529F7AEE167A6AC29DF58223B011A9
C3660B748DE4EAFCF71FF7F1F6224E2F26CD8ABF5E8E9E03FABFDAB564D9D231
837428715CE329B8B54FEF593AF6E9022505AC3CF39DEA8B38430C6454BD354D
7A47445316362F138AA5653182681E4528A999A8339AB163D47F4656643915F3
29173D3153D9C6BDA833EAA7A821A848D3A0DD386724C27941624B16868A8596
31C1C00FD27F44DE4BA4E2926CFA5B70BE7110C83F60F53820B254011FCFADBE
FE088956A21F8C9AE4B956858F4D380BA2A8A623AAC31F4EFA3649026F3F5DC0
F03FF7E181A6C95B916BD35A2A881C73314E2097B8A4410E105356DD2256403B
F2E37D694DC436D2C5A279DEDC522EC499C3E2DA36B51574336812015E293F2B
58F9F1A5F18CD0B3095D90DCD99FCE9FF1D1FA31B69B2F84EC3BD147E10AEB5B
2E92CCA252EB3BBB0EF103565F9B9215402B796244B27D4D3C63689BA27C2867
184C167CC861D24D147D13178B1F45DD003514604FFD2542A422B0474F30C8A8
682D669F87B250130A944AB119DA426227B627F27B9394336FEEB83E77C175DA
EE020E45AADF89772F8C814631DF23FA5EDFB4E833DC18FCA4523035012733FD
5143293B24F0F4FDE15EB067DB5FE151BE75EFED8592883DE4705F664126112E
4D590A5E463D4FFA804370AF926361F886B5371FF33DD27C0867E3121BF10FAE
F18EC10E28DE405C4F82DE24A338582FA6756D5F7AAF0789C7D6CA5EAAA7823A
1DA9E703F03D80B86F79720994E4A5C5EB4F6C49A8AE7E92FAE2B4DF1A831621
9B2D0576B74063A6344F9C20A46DEED1E22D2C14EB166EC3B2BD1E7F8BB70F0B
1E0DB06348B26969BE6AC8BB3FE679170F393146BE27F6F87E66A737379B3F99
CB653166E8298CA0651B3D3EB102B804A51CDA70BD807AA3616F568F8781C52D
8D34E4528EBF1B49B33C611D01CD11A10924A1719D7BAA0D52503613BE98B5B6
56EAD29F33A97DB1244379B2DCB0E251CD48B344BE9ECCDC1557A2709D672448
995552801FB2B3DBE70D55A2C1F4C01662002223FC6ED53FC9B5853D788EE12D
732B730FD44E1041D6907CF0BE49FFA9A1CE0CF15DCE285BF4F7A17248F4D643
D01072A86BD7BDE4B6FE7C6EB3BD59195BFAA8EB91FD363C36C81CAAE8F4C01C
4FF1E83DD9EAD3A2DA45CBA053AC9B6F46ABD424BB0AE8AAA5F016824A352910
4145E35FDF745165D9527986677E9FDAEA488B4F4F29E164E47F26F3CD822B29
CA42385033FF85C7FB91BCA4728E7549B40310F9442DEDD59A436DF16D154111
7ACC90FFED91D6CC8A8F8AF6A27723B3F9F8623514D2C9B6AEE6FCA676BD17F2
45A59345FC42C7AD935C869338C330F6D99EC638443102F1BB0E2BC56A7CD563
16580DBDC11C183458F1FA9D4566CD180243662B9070C32C1253E2F1E2A539E6
9DBAF78B26B13973840A5157DFA09A30309A22C8D70B77A2FF04AAD92E1AF961
EBE10997F2B6F0395D31FC3BC945984209B392DFA166FA1AE1EFC84544F24642
992A672CA7E88C7709DAEA3505FA44EC769EC314187368F20E069354D49EC072
3501C693ED7CAF0E2F40F885E2A5884DF01A3E4D2BBF1DDDEE08B626629AEA11
D6B9424E59340CCA4A7A94CE3AC54F784BB9850E6F9E923BC4DFC6C19A5FF9E4
9496DFF274194FDBCA0667CB2085F7828566B59A674311F0923F1801E4FF3E0E
8C70DD3F2532B915BA67D294D20AE95CA229BF139B40B80A2AB3D0C5CAF007BB
D7BEECDFB50773ABB6529D377EE5F5B402EE220C88753380EBD64F258311C4C0
98F496653CA9DCE3740F77482357026BCE6450C680082EEF565C7D5986F6CE4E
CE3079F2691F665FA17C32ADD508ABBDA17F397A57E757CC13ED39754E5A3E5C
0E6E256012727598AA1B43A01FDB0BCB637451A1E4BBE7DE5CDC8B99DE92668B
780F227D2258F6D1EB6950BB9B4ECD4F97DD73AC7157F6D4828221DABFC80039
D6188219DB0DAE65E40045575C3E8B312861EC5565957076966857A3A2FF017B
54608DCBCE6B81D7A31259EBFC7E6570DBDE37F44D09289A38C5B7E5E2801782
FA3379DF1159A4A70EFC9F4604EEC63B767F9F539DEE25E3D1A6152162F14E09
E030A949C42ED699B3293C75B8F12989CE79E149AD0D1CC55C213A4559BC1DE1
9F7021F573E9F4ACC9669C6ACD5E1A7F4761F7A0F8F2DF423801D5EF01866A8A
8B13ABCDDC201D36FE0D0A0B107B9DABBB7D6F38469111494A72749E1A8216C1
E3755FD06825863C724F3329DC3DACF0CB29847BAC0155877CF90D9BEB870DC1
4804930BE0E98F03059ACE80D4C0ECC8874EB9F00103D6B0E7D45930B169178B
01A2DC989AA98014AF003EDF43B05E3EFAAC5C62F6504D9C20CD4065D056D854
C3A0CEF8B52255FF70883F069D7052D4D4D104F91E50D59077BA46951E23C079
AF98F563F698BDCA9210D381216FDEF9D69C8BE1A0D86298C78F12517A6CDF7F
1C8B71794ED2B912AAF7255CBD296C4884C55C4AF3827241ED1C61E3B2551D25
8DD2F54ECD493CD80F0DC0D9BF0B7F6653D1F120FAE84965A4C0A95D90721C50
7B4DB9B0BC46801BBC4EDB1935796D8B33BF91212C731CECC67F076273C76800
CF209033A4A69F8580C014C348555C22E7D12A205E162D90C11CA6721DBA63B9
A7D34B4D51D1C7EF515BEDC646C178E35403047AECBAB9036622B754EDB47284
60BBC55E77D34B0DAD123AFFD39D2EE00D5D19A23C954E695B6317559451CC03
2D925C1C36A2F1D998CA4A52B2D2AC98DF90970D07F2758C15C427751E75F330
1C1DA2AFA70970E92697B453878D490D5CA679C2F1878A4EA7AA50EB6E196D1C
51BDFCC1D289F1A68BDFA0F6ADD504BF64D116E89DBA31D03363F5CC5AF3A863
8E401406C52DCDFA8CFA21D7B601C085855FFCDAE7CA2E1B4DE0D39EC2131188
B3454B197121558159452F93DB1A47C6F14AC1B1A796CA0116871CACF56ECE73
46AF8D09BA0656CE8D63BF56E25E8DE326C949C912430B8E2B032E8809E3B06D
87DB4EFCA5BE2CA321C0FB8ACC4BD495EDC2932C7419506273385D2B5BD8C4BF
4981F41EC9CAB171524D1692AC59AEC715EEADF084FD53329E84FCF1A0EDB8D9
0B948B95A15E328DF637B2756B8C95C8AE55AEE13E151C3451B73E9C7F16567C
38EE18FCF21ECBE01A9DD0FAAC8CFE8AD021790BF30DB6CBB0F89CD7DCC0687E
2CE0115272AC22FDEF378C7A73EA7562BBA3D6A6D17F52F357512B4E78EF8CB4
74FBBCC8881017B095CDAC409B5AA899565C233C0270370D796F13A4CE2DEA45
3E292C56C65C8A0D05AD223314F81F8554E941393B53F2944BAE9C918D4620CA
29B05B0D492C9960E8CC91228BA0198EAE974B1F1F8B1C5A684EEF2FFADC4E88
A874865BED2C430D333AB5FB5C05FA3A3F304FAD5FE07544B4F59E1DE7C46553
5778D8C4643FE86FEA716DF949046AC7D0B30BE6166CF35A14A3F39B5F9E41E9
67DDA1009BC4A9D675A74FA282A12E80066CCDFB39DB9B6703F1C4999460C027
333B5B30826A268F0911FD481AB68397DC1C135DFAADBB6435FE09151B91830F
2AB3F8830D0BB0D9D0F6851CC7C4AB26482EF6E26140FAF87E36C751DEEE5EBC
F9FADB0DF668AC04F5D7C1041E01C4CDE9F163EFC8C17B03F8FFF122F6C3D223
8269B2CAE1070FA49923416F3C5437FBCAD5CAEF5F61B9298034092C296D2A46
3E5C9B3B41966ADF5AE10B82329CF748E1E71BE1D48390A4628859847A0BA67F
5AE4171E5CAB647427B6A159F6C69DC9FEB1A32A407CB102DF516EA0BC01CF15
AD8A93487355F8825190EB75CD610A9E60FD67673AC535202CB93484CC1A556E
63ED7D93BFB424560F4A9593053E0E105557E7CC73DD4AF1FE43DFC4677DFC26
97795EA834E736C9D6C51CFB64264A16E45CBD84B5A013A8B60FBE3BDB886CE4
FC8A118827CA7149C1E86D47734CE9414F36543ACA24010E2DEDD12BDF91D5B7
87AE026EE987048327351B3C9737A6C1E24FE72917A8692230D8CF772152208B
6ED16CFDED672F51602C5AD7A4F9363C7C17E1FAEEFED9657BE4AC8B679138F9
277EFC64C73C4626580A36C8D4EDBD60286EA2555FCFAAD323FEBFCEE6FC62AB
839B93F8974EA5ADE04802EAB324F43A1F6F26254B9E6857970CE277E6D087DA
DC42F9398887EF6F4E6D4E32ADF22F5794823C7BA7C8F1ABC8714F606A05A5EA
2CC22B0598B7F2A524B7D3ED99978313A154247B56A468E4C38396A02B7924A5
C74A40A07A957B88C9255E04BC875C2BFC7C560281A9AFA1FF76E2E78A1F1E20
DE50291FB28C60637F3A00DF7CC78253E738B3DBA9F9FB09B32D135F41A2123D
2F03AB6CA9BFBC8894DF69932D7CA38FDBCEDF8E0D49D38D02326DE53B522884
EA67B33CF7720D291BEE551C65D72A415E337EEC821F01674A19CE22FBADB4A4
008E88465A62270A52E11D416558B3B1D6EA21D87041A281C9738966AA689EE2
BAA26DF833ADB61B80F9D1C6FF196CBBA55C8C759EF18F3B762AA79F689EBA94
083F5E3CF228E9421F1A8D32FF65AA2AFB258A336915F5A0DE5427F40AB6CEFE
711AB60FCDF67E1C0E1510610C60935808AA26F7D5421888F40D022736565B08
CE635507AB949D18BE5A4732F4C8633F28FF364002C720058830808474A556C7
947FA9A58C1CBB314CE2B2103091A0DC845F588A270D758AA072A57E9EA32715
F1B363C40C40476DD41E29964AF5EF91B30352DE4BEFD0533D09F25B6AE3DF32
7E7804CE589B4CE479868994A8A7DA119E918DB39B3C82E8A619F585FED8D54A
86FD96736E3D2C9C992734A1A0F6E6D36E1BE17F2F2554511947F164ABEA81B8
CC505A567514C8F0C83CDB8DFDABB8A6D67555ECC860A6C8A6A1A9E44FC58B19
98C636A2825CDB342831C306BE41DC1BDB67247220F6FD83588E80D432339090
22F74C4DC5A80521EFA2D2284426764DC3B1338A89284A670A8198DC60085FD4
DDF92CCAB6E87B6995DC3AB5CED124D331981B78C74EC4F2F28AD46F23FC1F4A
0721EAEEB79B986390C7E7CDADEE38CDA41ECD276FCC61195B490E2D9969DDDA
8CF43A0A3099E568FA23996B5B56E97A2BCFDDB16FE12CA5B74F3F5A6EBCE6C2
F7F5A98FAA4C806F3D38642F6A72AF341ECD71A75013F40D39FE1B25C2E91714
91A336649FCDE87BCDDBEEFD8A34B3405509CD6F6155F75D32E23952A8B1FA9B
10C54AB8C5F61E7122789485DFA00091A2528503DDACE0D74CC9411509AE0DBE
7D37F4E5AD0C35B4CBB32FBA7D896114CA35B7EFD8B2D8D98E5948A9BB945807
FFC2669838619D23F32818D5994E9A2D30366F39E835C3ACD64933848689671A
81120161C508E8DF3B5F643BC43A30D8FEC4E76EBF705251736DE2622DD59676
3DC88B8EE1B3F6E510C2D61646DB98CCED6DEF633F12CB264CE41FD5B771C5AD
5E6C6550F4F256CD3B0AAD93C09D2BD08E99F2799F290230613E8CA21C5C9205
B6D015BD93CEF7DDC73CCB68432BFEF01315333AF1FD797B1A0C8482F0304F54
1D46E82105412E9973DAE26430A605471270079EA232670CC70FFC3A3CA20F90
CEFCB9B806FF8A8A3C1FC5BC50736965D147C61EF962A414010057994681B5F2
FC55D675D143834846B9E496EC4DCE20B5E57EB8943AAC5227210ED15E685211
372D4EA8A34583976029975717AA4D74736C2A26555871DDB7DDB5B962D9C047
9A34BEC5A8C3E13F5CEA53F43027EBB0BFAC1F6433EE1B6B0F862832A8BDA87E
3D6B88AB7D2FB370BD6EC49F7421E38D2294F0546D4C284AD2B30C1672877D65
D0B405BF4159E5FFA1258A494BE526694362777888A784948FB501B15CBAE5D3
725537237221DD0385280F62B489DEED96904872AA36854AAC52B1A214986FB2
5E940A09E95781BD0B222220B716E49BDDA5BB1F874979CBA7E74F022D9360FC
615AFF42B86E02A3E8EFE8980044C7D2D24DE9AA939EA3B91CB96D14727D0596
0058A0E26492A48945706F08A6FD8E9FDB664A3C59ED5504924D2B7B2353B659
305E9572AE987328B233EF0F36C51EBB03DD39364462440572B11E397E7FD72C
8C3C5F20D3797C69EF1A950E4598DB4813E5FAF720207B18CD2E1A5948FB5F2F
A15CB776C25EA4C802077C8CD0C108498C88DB73048118AB3DE3FB82C9F2D60F
816CB9A88A504C07DEE1FFFF1F9B5CEDB559BF6A9F3DFB8F11CE2A26D773BFED
23C1D11FD9A1AC92207CED70AE17D818A04F6C160079742DA287155A1B0BE6E0
6547E0020132F85DC4F2A4B361389E32D81A16D4182D1EBA49250E42EFDC4901
E6C0EF152223BD97DE5D9F5589431D725AEB63CB753E2538C6D6840AF73FC87B
02059B497DA556F39FE34E82C9162126D24E5DAD64EE4A2002210EBA6C29C71E
EE86599C3948E57B2B7114D043AB6246919BA509C74D118BED5E142511B2361C
859E3806B39EBE9DF5DC77DC1D28B979234DB09138678D4C306C1EFB74371662
A4CCF73F96573C421943620D0B761424691727A6DC22139F7EDA822CB43D4170
F3C9B79867D853C71295E97F7A11731AA9D31C106067816159C839F1B9128457
3338C42934EB950EF399AA4312D9D1051127B4DC11B13F394599AD1A5865C356
533082E9F9E4BBCF8B051E68F82B346F4A46BF59C80A94125884EEDF247C11FD
1B32AA5A8858B961FB40451B871F399D7F26F6AB4EE986E915558BAC7F8AA177
C1E8C0F64B2122B9D2AD9A741F9A66DFE63DEA7CCEB984D55BAD7460B69F48E0
E6EC60C179B37C8A50EC6C2F5A6A47F31D16EEF4F756B9334AB738AD6371ADA9
6AB2956D5B60E7700D50B808626998262AF4E7CBD80F7B459A4AA93F504D9692
A4FE584EBD361141F4486B0796B8996118FBFA4AAEB16BCC8209879600E341BF
E3DA020FB0FF4DB467E2FDC23409C6168E78719F15FB2C9B91D2F153AF8363BA
0E80C3B0E74F9B962E859CB6A71FBAFB371498AF4F0F1933BA7AE636F8F695B6
5FD609BC9014523523EBB5D5BB5A7FEE84D530810EFFCAC7EF0B4168737F1F6B
C0A74E2ECC69BB134B3C4CACECEA011D32F49D20CDE77E0F101B955C389F9079
83E77CFEF7EFBBAA5E412A1C51912643EA2A6B305361E80A46B17A1BE78C91E0
7D211F047298191562C38466B01AC6C0C265771E24D2939D246608F3FAAC2CBA
E63513C02E1FD9287EEF11FBA81BD87905C751E4AD29208DCA5EA449A0FBE523
77105CE637AAA4D374111CD316B14E4601AC8CC3CC7ECC6931840CC2018BE50E
2146B448470C2DB16F9579B63C3A79A8EA63F9DEDE24A5606C48F70CB3EDD983
F754571DD7A4C15B844879B083616C5B1587F6832688FC84B4A1813AA91346E0
98ECE513054F26B209D5143DFF661B104751E0E415407261A249795DDB8770D5
08ACB5FADB5494418A5EC245E11EED2CE938A45650FE195A736D607CDC4CC5E2
4C9EEA3FBB6960164FEFA61D7452FB2D8F63100982B54BE660156065327A015E
5EDA5083D5C75714A4FA094F2D2048308C44E3826925C08BC083EFAB7AF86F7C
32872801095F7E7612E8F697169332AE796E50DF2763E45827554EC25AD0CA2C
E114B069972FC0D90C24F7742F539CDE2DE094FE41F055ECEF8DC018847013B4
7A790BB9DD9BD0D70319B06E03076196A1EEEB89F6A244316651A875032C3AFD
99A4B0EF154D87A479194A7C2C1AEE982A248C89E91208F6D298046025BAE1C5
CE2EB0958F413102797946639345A3BE6C1FE769EE7DA9D02D30D444DF222EFD
D4659AB0563BAAEE1DA60EB2F00E4A5158408D85211CCA9C9F0542B38B8C102E
D430B36B9C16FD18058787F174F6A2FE2BD61C158FB70C52E155C236221FE3DE
31003B45059E9EF647BE255B72ADC8610EAAE8AE94A3EBE195C9DA4A779776E6
53ADCDBE41411446C7A6B32FA9ED3774A1F33125C14202C1A2FB0B9CAC0EC7E7
FC901562A8F375C71BB11B2A4CFEF1CC53047C146A49C6DFA12D2964741CB4C9
E7E9457E655C9311E0E0714AE0E1FEE0F9F05D0DC9A7E157829FEC3173AF3328
502152EBBA6AA205E65569C5A638E2859874FADA8790DE47CD88F9A137654638
BD6FB671A0D392D39C6F5CBEDBB3AAA944A869AD68ED229C5783A4B84E96758D
7D393233CD62287A8E84EE0D474D54BC5AA86653787A669EC82B424ACC559186
AF1B48E9DC6117E779D167C46D1C89F5D862A57BDBA65FCC9C5D72161149F26E
FC6F0C5F461FFD78A8B5DC9BC1FDF9010B2EEB8409A348B90B6D50E5859E6729
8CE787DC595EC9DBB8BA21A3387DF77031138C4F6B70898E2F27F4C425FDDF76
27CA6089A1F9F35041F6CB07F79D3F45159DBB865C236089C7392EEAB628C4F3
D687420F8115F3F2564DD2C5DFBF43C4A4C36DA2C5A0C3E4933B7A9D8049DDD2
5758B3578709D0CD68DA9EEA9DAEB502293D9EE7A7176A13E8434961CB8A3A9B
3F4BA3BBF2FCE7FE935922BD388220BD2C63254DB39F1FCB859C793954FC59E5
B38496F586F699E57BFE8B3149C04F160831B1474F7C30B5B6D99AEB257C22C7
12C2F73193E96147B007513591AEA12440E5ADDDB0A94510967663904A36877F
5DCE1CBB15AD718CE5DFC60083C9CDB40B0821F7E33CBB2C8E816C1AFB9AFF36
42FB28F23B68ECC30CC4073F8E482CF4B85AAD4326DCB38EC364BD617EE84038
031C3AF46E7E7CB2F356A09746CD6BB7DB0118E12BE70EDF576FA378A5BBBE47
C40565A897F857E1FACEFE89D292360F4F6D88292625F9977855ADD422D23C0B
5A1D60AFC0599014BAEE4085C9239302CE035759DCFAD1CB887B6498074B4541
D2ABA4F3AEEB4671A6C417208EDB5F711F513191DADD54E712C5FBADF0D9B5BC
1AE59AB1213D9DD35740B89992AAE75F6709C4288069CBD000B9A030CEB1DF74
61D555273238367A0FD3C76759E17D99CCD3415FD9D39344ECFD32771072F78E
5C82EA592AB59F5CAFE3C1B04A2AA530DE45DDCA7A23C8C3168996B4DAF7CBF6
F87A064C1163038A5B5D8F7A93D870222C80B39EA23FC066095D06432884A5FA
EE52B1DF86F34A0A1F74CBFC85F9CC36EEAE9CA41CBA8E82AD4DC2B6AEB6F367
3F1C67A1395C514E101B8A1499CBCA4657EA16FC1A4A078CF1183A6607D74A6D
7DBE7A34B0AC6B884F0461A711F4904787924999BCE11C1511220591038886AE
C60078D1B440D52A6B7E6A347A28695F36789DB0BB59958D3F939DA1285692D1
6EA467E5D55F0F557B8D2CB1E35EC05195E01E80D1398573809716F5A8AAD451
FCDBF55FF47AF805FCCFE759F21E138B4D870D3ED07A692A850A92DD1B02F7B4
F23E17C9D5FDB57BEE2082EBC2BB7E97E8551461108A981B1A04A7A5D80062C7
68B09BAF0D8EE8888F09F9031143660ACC2E93139FBE4E8CAF4AEBA782B5CEEF
B074680E2AC4E0A1B80E4B3E06D092E8C05A4B38199FE92D80A402748B9AD032
FBA809F411831EB2C5E50755F1397991BAFF1380D511B1D1714DA44B895EBDE9
231BD8FB288B0CC3056E9E749E89DB63B9CF3FF6394B99DBCD68DFE4B2ADBC00
09F542F39A3425786E79F15C7F890C8E4C1CFCAB9E22D5383FD21B32AA9919D2
9AA9226A594780FA16E9E467AD511D5DA336A1CCF6A437ACC086D4AF1C90C646
32226FD5563D8AC057D2C68AD2E602F5560FE59B3FC45840237B9C45BEAF05B6
0B86155582BD78DCCB72492B0B2E11C61DFD7A46584657842292DEB761FD6CD8
46777785824BF68BBE20BDB8668853B0333D16211E49DC6C6971D073817D055E
8A0A120CB4ABBCBE4F1CE42F39CEAB4EAE1EA7A2EEBBA4347B6AFB922A711514
3A3748CB30D70AF8036B91FE8C64A4F36311E2FE8E9FD7F4C6B1E8A67574877D
33A7EFD257C1E67078652617499EAEE572E4D5FC74B649D0617BE018955F092A
7CC5993C8D83C78D20E232A4C7117F7BF0CBF374E268AC1887EFF3B1EE5DAC4C
256F55050B88F0BB400D2B5E85F100FC259B51FAB8F36F7B8A3888B55DD33987
FD7153AF2126F7FCB7420AA99E9E4A92D06FCE0340BEE6956F29A3A210F5A8E1
16A6EDEE6737B885D6318A06F437686DB9F94FF1176E6873B129DD2283A69CAB
53E1646C647B5234DA545122CF8D7EAEBB05A1DDBEDCE3FC166AF5D8EAEFAC38
E08025FA7AEFFAFC5A410CA7C3BBF090AFF05CCF5FF2BD1403B1421EB2D7AA7A
84B856A0D5E7E3C0D730E3D21B5703A2B704F45BBE11053286F4E62CFCB9F1D4
A79F37D2F8B2DA5D8FC7E0E6E699D1D909889C2517C47DF608B1393B52ECEFE3
CD9745AA4035C286571737BF92BCA3E412B03016AF3CD209E7881FEA03E9CCDC
46BEEEA54CA97963F601FA38B9E7DC43CA474F9764EEFF07692CA7AAB3692AB0
DD04397869E24B0E7E1F5498E5594C535243B5B8E70F03444F7BB9BE25C87170
67186BBDED07BA39046C5EE036D5282D850A6C1FBDCF88AF5205C7573E0C3DEA
10A9572A02E5BABBF38C2BDF1CF8586FDDFBAE1EA80ED3E0B147C15D0AF26A13
FD5730E4785968FC98C101A1C60AEF63834F2837E112BE5A808D7D169B4B705C
8749D79C0BAFBA7037F76202E261E4322722E3A77F48D9D231693F08C4A9C77B
816A7E1D747925765855DC0F2C2E01702932372FABDA92C9746512F6D0628EE8
52D9037383ACFF94C4E1B063DE87DBA414F8EB1C02DE0715D4D91FDC1F1C5FA5
BE1E170D68DE70F32799773030863752337B2FD582C608F80916BC3C87CDACE3
29B9689750C6297C3C5E5ACE82B0DC0143C2F6A6DD16E1AE226D624BD1877121
55DF3287C328721A04ACC308CBEE53DD3CDE725C89BD24084EBD554504BC8097
3E70EABE8D365C9433201E94DE98601DE986AFA2CA17D2952028B151E779E1F5
9CD97D55C2BDEA18AD46838814A038DC0431EFB5BD176DAE05F79919C1226B87
05320E2F1C54F73742EE7F71131D73DD7E1FC3DE572E57D3D6F0DB1848252345
2EBECFBD726F8CE6B8014742E3C48E120ED5F3AB09EE964ED14211F4F1E737CF
7BFCDB1F219538AC3F0C9D73E562B6A191779D99CEEF2485C0E5C6B83B77D1E9
7833690BE52346FCDCC100232BEDBEF7029B4155AB8BAA1C1940F2BE190C9822
C788B6CB5D9A3F40C1275F15293AA4C493CB4B199964513160A78065480D9762
844BC1FB2D228B1CCCC385D6B4F154C18E4ADEB03A9BCF28FB9CE1AAE9C14077
8DDE6826323D4517B366890D314539C66AC463900BF8FBBFF54761DDE7A4BD87
BBE9AC94818449BF59280660F39DAF500CC394BE81A931FBE324884DC7B92CD5
BC6639049847DC2D7CCDC4E0FC9CD619E8FAFA0B4177360564F21FBAAF038D13
39AB83506814B1473A735C2C1AAC14C1FBDBBEA0F10C7D90B8CC6A2834D88F19
9A058CF44DD42F735869800B88558124B10D1B0BF40BB0A00669F7CF949B890C
644C14ECCAB9D46DB3685CD314926ACD4207ADD003CFBD65FDD17222682B37F6
DCDD3EB44008AF64AC214D4DFC69F04EC81462500F2561778B460AB3288C0E1F
0FDAD67372037FE01AEF51D97B8EDBB7225511A8B6F1188D05974B9DCCE6CD7E
88433F8594F9564D6B5461354FA30DE3E6AA160F44ED5F2B4393B001C0411BF6
A10775B72F0CB5DB938B51913AC3B06782570C4045108AC1B74D630DFB3124CF
F7C76B6D5682B93FAC8B3B09A3E3D2BFAACF5A4FD8BF04EEE59C25661200CE27
A8849E73728812506A40C69342111988B7F840E0981E95BEE0C42C8425D57851
C4033997794F2C3185DCCAA74A8D13E4C1D07EE84F5E4E4F2DDABCBD76265FFE
F2EA482C0526FDA5D7F49334ABA547DA955CC7B1B1C1939AC95D851B89B1A031
B469F97C41C85F90C31FB9CF3E1A4AE975C5944706A999289448512CAD48042D
F4D31B57111DD3905257F013E2139C4B1B10E87BC47CCAD2463B2FC6018D9288
46D1A203EE7C197A14AA9159F669D7A98D46D77F86CB02213BAC64CC496B6289
61CA7F8C4B8205D2684CCD45B47F2801778F191BF40DD54E3C646260A4E93673
58FB292EAB9A3D7C48519093D6AE2EF69A16D2D9153C8E4E2B962E12BB31644D
B73AC33500E0B11AAB0C39EBD09ABCDE5B691DF9F58F0FAC2DD9159A1B18389F
E79D1BE8E198D0487B952C42ECAEF513B252CED2697A64AFD7511BC868D8337F
482B7D0E5D9B65325446AD277A29084212A4C6AE6686DC7ACAA1389060E67AF9
BD88F523F716CD4B71210EC2DFA7EC5DD389EADCFE0A8AD64F559E98919D2B19
9D6A998E83E553129C1B54542A07C3150DAE1AA5D0362A2B9364A8E6C8EE18C7
F4EBCB7C1BD53E6A3685EBB3DC0D48EECBE1E0F03AECBA105F9F22DD7C755A80
3E9168EDB846B9583B3FA62DFC796E54981891608D3A2CB715D4A9A2193BE4C1
5F5728F746EC4DD977CC84A3C6A1A24EFA47058A42D8F744D5675E79D7E881C7
AE1EB301A6179D5404A184DA1BEC756F9233B39D2F8C4230BEDB9985A1324D20
D692BC36AC56019529A17CBF1575CCA6D0A7B3169684D8857A75C23F443F0CB9
0543F1655BF180DEDC4087F1C4B7D0B8D23101B883A7CD416F3C7FB972F51875
922AC247B692BCA3394040B0C3EC13285574C613C9F61C6C594DB5987DDEF705
6F807BE5A72CED7E01102B6306AD9E119546EF7D32467B8317D250228574A0E0
271E349262E81E30C70DF259A71075388B99A0D62ED55098AC68924D0879F285
CA7584722F213DF060C1A8CCE60195A77DB7548695ADAA5D1EA723C26ECE22D7
741E3CCA532D1EE3ECBC3339132A625313559AD0314761A372FDFA6DE79E9B47
D15B8EC5D8EF8BCB6CFA803B0209B0E15D0A4F48B4E77F4AFE71D9410499F900
26E48603DD1908241C548E3F774848CFFD83544009E94AB6514D9CACD0125D62
0E1A9C4CE6E61A19EB40585532D8138A4B4CC1CEA84CE8D80C2A4657D7E5EAF4
9CB56D3F1F40ACD4A24E7B418260B7A453869EC3B176E98567B0F0445DBFADB8
4E643A40C9927EE999DFF86B2DD27DB54E2274B2011290C295FCA2073BCC94EE
2501982000D7441C63CCB3F6A6D1391EA851384018E43BA68108B9530C923C66
8A9C98FFFC084B617D8A16CA4227C59BC7ED7FFA134D5E245CF6A7ED7072B653
EB63C4D1B42FDB2BEABDA0F78C6569D43F2CA0FF086F0CCB27CF235164A51F5E
735EFD387B4DCAFE8E8991CD002D9919FC2E41CFD1A2F790380B53DE5C265FA1
60F76DB98BCA2BB655BD34EEAA486388FC92B90819C6824AAD32EDD67A3A874C
AA8F178DF0879CBB7CD26F09C8B078E201BFB98697060529D826A6A9A5B551AD
CF6BF86156257B6AB2123C2F10B5C4522B64C14F45E439BB5C59ED8153AB8D96
08284ACA926B8E4F8222F70272CA0160A335B7604A09BF257C1A7824962AF6B4
E200090A037EC111CD6D9D19A64862A0533609C44379D424888A61E41616FE7D
51643749BFFFFE24A0DB848DF5939B4E5721BCADE73072BF5CE0968E4BB57F73
8C89E346103F54E39120061B0C8646EC96CDE04171371DA277F7452623D69380
5263271072BC33777F1864CE421F3F6504FD48D4E3ACC551FCD7B5F94D283F8B
EBF24B0EE93B1369EB257C403327A906831C3413781078DDBFA38E838BEBC401
23CCFC3AA62A19BB9EE4529B962B4A14C87D70825E12F8A8A0E07612AB8E81CC
BDF36D615C73E845B39F09414C65ED14113A69792BECC0571917F7A1B5EFC961
6DA291FBF68C0F767EAE24DFA0ED667796BA7BB283275E75332F1C9CAB7025CC
915213D283D7E0B50377C3EC8920CF6862A1943E7CD17C3E4A015579443948FA
D85BEF36CB0FB5E742555F9DD50233B158CF7816E6EA3ABBFBB452439BC15304
245C7A3EF19F5B46F3C8F99299ABC64ECFE1084C6C47EB97719E0429273156CE
5F7B085E67C237F0C00981079AC285D51C9E653E0EA28F238A0BE598177C08C7
08D141C953C5C18694494094F84B3F2CB428CB61306880CE2E8E38E5E21873AC
911C284EFDA5956E7F056E3F66F5EF90FE28525FBBB942AF1EEE5A54FA217555
C6C5ED11DDF9142987EEC27C87C1B63B5223D2D0DA4D3466060D60F126EDB29C
A826426C961BB629761774905819E1AC47EF06F894B25F22604D18192D8552AB
D36BABAAC7751EC35158429217E7F02E1F86BC4E0AA59175CA6F197797DA3A8E
D5F245591E2CB663484559C6D9B568EC12770A66BBF82B97F9D193F839926EA5
E6FA6F19483C05DEB994D805F2FE83A9290693A8FC4975B5830C46E213976C54
5A46EBF45F9B6D7C56F475962E965E37A2D9601D3F4BB21D842551491BE87C73
3BF8D5C0E0D4F3BBD7BE1E9D07BBD27C688F592615E89E9C88A654CF71039ABE
CA6EE1D8A27B48585FD84EBE48AB9A6D7E83D669A9663059FABBBFC9187141F5
3718027BB34DA705C31550774A9A64A6ACEA299791BA0D9A31BC189DA635212B
E50354E841B28FAFDD8255AF83219F9ABBF9F9CA98A951D0715CD294BFD24916
639A4CDEAB75D3AB540E979E242D052901E6BFEE1BD6FEF0980201D80CCAD6FD
B49960D59D9B5EF43C2E8F4B17A2551C00F711E63D2D4AF23BF9044893EAC02F
9181BD85CEB6F34D4201B9965FEE177F4E1BA994A57E41F5405F549D1CAE9B5B
54E037D752A6090FD4E9674B755E6566A505F4481DC032A128FFF3BBE30AC57C
28C6C5962DFE4C865A673575528B3CF5AC487937176C1C2E91B931EDEAAF9BD9
4A9DE63F01BA8605BDC2BC326BA9FCBC665CCAA07BEB31316BC0FEC8A252E8FF
028B4D28C76A099392169A546789AD648344B32267A5E9D1240DF202E8DB74F4
91FDEAB024069C9C23BA6344138E4EF830DDBE57767689E3D8868F65DD2A451B
C1EE611DA980A41FAB250C281C1FCC94C205A347795C2200DD43FECB328F2EE0
4B876FD520C3F524CEDA17C1CBD407184E9C33FA3C5C438963EAB838E60D74E8
6DCA0B2BBF3C3752B0C7D2CB61433B13AB5B17DF88FA20461A909C68F835DB03
037BCA5506D21C058B374C159CC839ADD5183B12E823DE65D2E58E11082C5663
BAA694B741906EFE31A03B001BBC38AC5779CF7D7AFE008682FDD01FD73A5B78
2CD6CE7472F86AEB85792AAC2E0D43ADFC813C532EA31D6FFE84829703B59C7A
7B5CBB252357250F6544E67227EE9933C4D11291917F3ABE9D5547A5AE337A03
BDF8C9EA1E23AF11E9CCD2FF4543EE56D2EF27AAF2809EA47F569B14DC30447C
DE7163B09627F727DA5ADE6F7D90F2BEFF124D0FA208F210EA338CF1896AD099
533932E76A687301F71435057F68608853DB120B6C5302B15E25E9067B4C6422
E04B1E8634B0188AC9B499133B85BCE658FAB1716B78E1FA9FE4B8D03A066434
99E93D2A4CA0DB97473F59E773DFE3F2886BF20C52ABAC24FBEB158EC82B0E43
5BE4285EE4CC078AE531C9459ADE18801116535B9CACCB69186D07615EB784E0
48F5370DBBA52F05730448897C0ED7633741B789DBF1930281DFDD6F5D14BF2C
4787B1E031993C0EE6F7B146C7004E53881057C0C608E0C95C69A76FE5EB227F
FEA30E12A6B2B84565B2093F3B6ADF1943B201A324E16B9D431B0812DC2C4E03
8BA9133D2ABA95602BA4C878BA056C206E2E4694182EB44AA893F1F5E3A9BA4A
5370E03F96AE151F7375A478482F440D1A34998CC9522F1921530568AC17FC31
CFABE940D42949C7987222DD2DB542954600299C4A8F0C17BD6950304FC34F2B
428EAF9762AFE35CF75B8CBA0A7CECA8700B6BFEB2F7F14433BC6FD8F0DA100F
0D4266FC0C05F4A0E7CB12F2075AE3A5725EB22E6423A97618F1A5FA957042B1
D4F97DCB059D8E63F5555C5ED8BBDA150D37108B4CEC646A9EE26101789D681E
B88C9F25588D9D730CD9095DA1AB9EB46E1ABF0DE7E3D66B32FF4E31FFDF8993
92CDCACC5A806A3E90EAB0F8A71F0AF6278B8081A8E61E11021CAD1144AE2F6E
93BF842E1193979A6E27AEB88C3D5DDE1D325EEE5B7C94C0BA60764C1D573F05
B688616796234EF451E8D9D3611CFF7B488A9BBE3DD94A9E56C9EF47EE1CA64F
85C1698F0CB154950598531B70ABC3A6BAABF40D21893C4B05E192C25CD1B966
F256EBB847768F4A78DBF263AD7CE527716527E85061BF3BD16A48B9E5F69E94
027D300BE945D4A57087D3A1386B171D0A948D561EB805679BBB2C57B5C9DC2D
E0A0AF21595D55EAD0556866F0CFCA6DB7A45A78EBB07E4BD6E1A64C3BB41A72
E046112792A050EE4F6DBCCED3FDC8D740E4740CD49C127BDB1D8AAA2134434A
08759D47C95D9CBB8A6CF51934D43F4CE218CD409D5D3D82720E9B255F2D15AB
2E05AEC0D1079F15F29D9053115A7F61F22EB0CDE384ABE1CD92F3909C5E1DC7
A6F8D9F9614E2E0277FD649FE6258937754F68B4528253E94681066387F51805
D878FC928A0AD267B9B39EFA85A5BE3736DE9E408598B9F5BDE5422F3AC65E81
D12CDC8B10714E5BAAA34ECC825B967CADE04E3B3E9BA50198357A9DB851F8CA
5D91F0EA110D47C6C8FC38989C3B142A8749AF3AA35A86E2A12BA36691243077
6EDB46FE8BCE063B3278172BB32ED570EE5B3A28E4AB55FEA28A8E2555F50DE9
C2AD8C1274881AF9B8F887E43D1F9AB283D70C02B86A5B45BF06520C624DBE0A
058C88B4B0E16CE1B2486E6E12027C67A06D931CA19E0067480A236414CA38B1
E08D76FDA1602B5E9ED1CBBC3336E848FD598D152FC1F31599E46CE5706E3F4B
86C6833A48FAF8F6B0EDA7AEB7187F3A76560FD1CF34EB9DDB1565BB1EA43CFB
A46DE4227C166A73FFAF2F7B671128AE5EBDFCD4A19699B761AFF237AFFC0342
2F48725BEC4FFD9447B6F9E0E9BAEB25B839433BCA91918402791E0506804679
53ABF292D915F371E6456AEB1B448EB512A9F5959092740EF48FB72345365C98
1C8749C39AD8BD125CE9DD42DC2E8E6A05D6D799395347B713798F4F211F30A2
B6F380F28D3E941EF4E4A08D5B2263E024C75BBB31DFB3D123DAB35B393894B9
7579B52C3975AA02E4D4D1BF7BABB0BC24C2E6073ECB98063CE8934F5393A224
061C3E70B4EE1905E24599C8F01E244D4C1C12967FB9D07D3414DA0B1BABABDF
1678940CCFAD525C3806D13053F7DD1A7E315A0861A29EDAD9F476C25196EC1A
1923D94CA8A5F2BFD9DB49DF5CFBD64F5326B332CCCA9B4B393E530119CF0F28
E7E15F6F5934C8FBCAB81C11B71E87A018CDFF3B3EA3B3E0DC08E2537E0C27A6
7AFE0F6B0DF82ECC1822419DFC681827E96FA9DFF6BFCDC216A79236DF7FDAB2
9F2DDB0B99A2A02D82E5C6AD86708846F5A4BCEA2F0BC50F9BB1131D8FEF7E66
13A1235793A75E7EE45695C3B29170586A7B03B911B15C367B4F919A3AC4F6A7
2C9F4C051D457066211A10B9DE84E9170954A8DCE046566BFFEC726435F2011E
4DB1DC5F7749B46A1DBBD383A40ED3E92C4B66A3D0ED927BF5F25AAB5DD35596
100447182AEA71E20A824BD68A3D9953D9C3EF448AF568015DD8882ABAAFC49B
70C07998E3E03F59146E54347773D7921242DA752B53B7B5E0FD1062480658E9
00DECC2DB9F89FB63B976EC32896E9A87053D9293C4AB92E54D23F37DFD6F595
2CAAE43648C0F91E3A31B603E32C95F798DB07304405874F65F537CCB027CB08
6D9CC29337F5BC475297CAB515EC70F416732B8B70EE02A252DC1F9A243D1563
2CF712DDB6C0AF23F2DFC21425204FC624D8AD67798D90428DD8907AFE98F7CD
7018DCFB33D321ECD534619B9CFFE96543D9E50430414C600004963B4CE1382F
7D0331181E1EA0DB24E98432B55CC633C9E2FA7A4805412DE200C3FE85620B43
7EDF66490546C09AC8CB20C6BC96083F5FC14DFFAD1FD2B09EDD10CDD6B65DB5
945F482D46A6118A62FDB55C6E88121839BAC4B54C134FA36B86BA6EFA4E7EA4
50193BA454AB5D68C9CE525A28729D2556515F2159596849910D8374B7BD36AD
9359E74EECA4B021A197F83AF47E46D4B1FE3B342202D127D297A5353AFD3B75
91BE0374A07B41FDB13C8BE34E2F751411FFA01BB0428BA079E40BE8F0EAAA12
74648A5681D0495E9B13038DEFD9831D5C8F4354C4ACF2AAEECC52223ABE49A0
68676177F7BA8F87B883570C0C5C78A6275E5D78B84711D78F748E55219C8DDC
695F2ABED7C059FCEF344916B374589DE1DFE570630E998103A8015733DC9DC4
27C83CD88F582005AB974A9CBB527B4E51F5D888E06399A60B7FC810B454B928
771AEFD63186478A31E021F9766FFF1D0A305FFDE2E9F875C96914D204EA62A6
00D15DA4B2CB56B6A2445CF5BDB8D238C0CC600ADBDCE8BF681F0F039CA5A93A
9924F89A79EB5FD2CFDAEAA199E524AD3D3B965FBA823A5CC6FB81E442348FB9
BBC3A77FE52C0C8B66617A04F6644CDC07C00317A39EC53AE312F6F49B8AD6DB
1A343A4684D96AD59B0897B2336B51A29433CA109C5143F21DA46E72A73D8ED2
14A2411E860A1A06C2A412B1AA17C2960D1A09D5BA8B6E4043E700E35F4DBA6B
A43AFF1326A7B4559A75D55C6B244EAB3DDB0624593333B90B021AC8D47839EA
9B97C9CDF9E6F107992ADF64D0AC82AE88829D2E7328C11448B5389B16C154B3
D225597D6711CA8247E84ECC611E4DCD26F5AED19EE84033AE1365E7FA69F4ED
4FCB3CAC824083B2156E66950F106818FDF18ABAB3CF6BDDDB0156122D0DA3EA
2AACB6E9670A8A600BE5915677E8F06A6FA2181D78B9080AC96ABB68A187044A
FBD9C2C232C3358BB98CD98D8508483F1A409E92AAB3E48F85109343D41ACF17
36EF5216359800526EE682C2F5627A79710D7BE5C57180B211C606CBC088C0C9
25882E11153C6B7BB6DB360013F016421E4AF8F023274D8E8A15E95AC3D9D992
DED60F20F8C2D30E0DB254EFBA6733EEF0FA968020C8F6CA97789B3A6B537E7E
F3B86F34905ED070077EE223BE67A6C0AFC03D9C1F1DAB6754EA07449852F6BB
58F81BADD1D1656084F663A06B05C76E7AF3C5B4D5F0D4007E32A1B5682AB13A
9F476CAF042F30588AFD9F4A5A1938B8C16BB2AA15189BBFBD9278BDE136AACC
38090977E967D03375955E2FC8FC7227284F2CADCFBC0C329706E931C8B2E579
DE810BFDF3A2712E7608F22C9868C385DF1787E62E7572CD2FAA809302E419F8
740B4B77B3E237D52F16F95D2CF260CF7BA78C0D4FCE84134A3633105B4D4F28
15AC74B33855A4388D766E3DFFF06494A253616117EE387B2770D60B3B09C70F
69EB2C4B71E7F40F280A999BDA8BA6A21DF2B5A42C3D44AC3ADED6C1CC42FC5B
CF5FDB9FE7F28325E3AC0F131A13F765017C45A0E145FFCA5302E156F154173C
B612C88D4240DDDA9A6C64A703465BDD85B518FD298EC4DE92CB6F8C04743C35
6A07967B9AE4AD7F3498BC9A7E43C7E7FA104364F48E66A6FAD88A570355FFEB
7177DD84A875A4A3DAF30AA09570493DC916CADB6A023D4983932F5725261426
BF7C6E5170D82ADE6C0CD9A15243C6E5A4D500EB58CFC8420015301993AA9E4B
15ABEA711828C171C36A1693970D0F2D4A24C313F8CF0285ED90E3986BCE8876
FEF735AE6AE940AD346966613169D1234CEA5166E4CDA10DBC4A8AC57F6CAB91
B5245BF8B71E747CAC365C939634BCC1D36CF3408196A354E833E7036751E69F
7F0AEEE1AB3BB4F3199DD63F8E7ACCAE534AC92DEC3A90B2E7C02C67350E6C22
1D973AADF3F1759C9DF37A63D4A704FBF97FCE39F16F14B6DE54BDFF454032F5
E249360A33D7833A824A0F1FC8D50AC4A62F51C80FAA411933A6CAC60DAE6AF9
35658B340B2449DDE69CE2CB0CE6B641000F379882C044263CE9BA2AB4865778
E050DB37F7C5594B0E5DB58CC975E10F09AC50D6CD08F7EE86703EC4A013D78B
C832E674A9CF31B0A44F427393AC99A5E17F395B9B6EF09101A7F518F1E4930C
CF6C4FD69DD50B6AC3CF0A782C1BFBEBFD74344634D181C0E9951A840140D8FC
B2A28791CE40FDC480AE09D67672B7F290D964D3A235F60E1EBFF04BE5BF394F
82D96275F36BA3B3AF79218171115BF377B8C984F8541871D82FF3E78BF68AD6
407D65AD555960A9DE3AD6B27E0EA666F5D717F5D01CDD3DD5375702323ED2B0
F76A2C500C0C2A05115AAC3866F5BF49459DF194FC954062B494138DBED45AC9
4396D45938AAD2C6309666BC2E8C1ADDABE05F29290AC0DC48BE33A46E2939E5
47B45806A98C626893ADE854491B15B23A28C5D2AFCE5B845064EEB60A66487B
AF3B4F2BA2E22EA00DB1A95470DB9C3E6D73B94072B8DF6B80CD0DBB73D73B7B
98B6932D51232570DF58A8F76738BEFF29F7183340137D20B4676B3B2DDD9739
41802E7B8528EC65F5EEEB59208E8F12501F5ED7F9A91D18958D3551BF6527D8
DFF1474A2D8B18A8E0DF0A4361546D83D0FB33BB3E52526680809D031689F914
F84DC4D5AABA3D11004B277D6131363F2F6D6A18D3BBC06406F6BA6A8E68B51D
C2142B38E8A54DA4E95283891B007CF0AC92B11440407A9BD5BD7FFFE0C64663
C1D5AFA29C6FFAF2453F68E341E5CA0925FB5B660C314775494048FA97B91E48
CEA87C20F7CA9865B0E3590BF250A9C5A965EC8E2D0DA45E5D8BDC47759FC9AC
4F6EEE6867B2B5C2177728D8281AA1B574606EAD660E657656B4C41C36C14995
43222400525E68FA4472871486EB174618406494BA6F8663245633908CEE5F52
5EE6911AC9E8B74986D6F00CC16FA012E7E9247BFDEA19AC0D84609A651B112F
9FC9BA1FC551A188DC8589CBD966340082373FB1F8A649835634F6D0BFA38C47
4DE3BEE3CE9095677F27ECD470BB57AE535629827A5ECA536F307D8D0E6BC018
D299E5115E0222BF07DB550156B2FDCEE3335FE4D3B27959654B1232D60B50F7
95D120125827C1A7CA376A32A69A24A2563ADC34892A6403580AAFCB25193BE6
0B2BEB8BF37359E16881EC6E2F2E47703EB692BAF009A4A4C3A654A9E0BC38E3
11C763FBB885CBDD1F87E1ACA42166065FDF043B66DB33A8A665746AEF91C2BB
A589672DB499F4B9CD6C62DE53E9A17C9C062CA7985B5807CFF8FC0245F824D5
158E934DC4F482D9334D1F368B4B3A7663059C819F0112A85F3B0EDD009B303B
CBE50DC8BA8F10ED2821639D22665202C31E9784C46C2E7DFC5E616034F056B2
0470E18C060ED064EB8E2C4569995E2DC39507C17E5469AFF8A7B4A4EA1B6E01
B7A4ED3EF59F3966DC6C228AECAB7A871646C86AA8B3B7B2915F1B72F7ACD069
E8730292F98DD417F7A2C76370E8E18074097393133928B1968D5347BFE5F9DF
9E914CD4C4A2884004FB988BB825B55E4C1E15BEA6BA602AE211CA40304EFC75
45CD2B00B9279E1410546F004A05EB485E21170886163A9734E930932E9DE160
26DB724FF7792E2831F0113ED5DDFD902AAB5DBC04D67BABC0D62AB8518FDFD9
B1C6F577A10434E8B4785352B876B231E1EAC7A21A356E147F5D0DB5BB071167
01947413EFECDB64AD00E8F69D13CDA1C13B1DDF4FE2C278E5FEB3737A620231
5F6485261825C294400DDAA21EB5E57ED0612C1C832C6C0D6E48E6CB137C4BB4
3927F793A4934E442B6025FDE56213F994CBF0FD112E25EB046B8B5C2569F5A4
32B72BF710ED5B9882BDF13A1C59B73DEBBB5359FB4D387EDC75DEF8D42D9055
14B82A3580B1F32C48353ABEFBB6F12D7EC904C70018766452F0D2648B250F63
DF6087026CE3DE74E4843B3173B27C8D52A535E29CB65FD6098D56D4FFB67F12
12C0925E20ECB6D6824BA0D4A620DB01DAD743F460E53D576ED09BA482A5CE87
01FADD3987B449501669539C2A7609EA576045C6230A0CD075D46F75888DB8BD
29796ADFA34BD271A4252BB3B1DDA826C7CD588A6D38BDC4A64D59076F618851
16C307AF7DD2C0F6AF2E069904EC22EB9E3D7924C88DDF2BAFB73EB58BA809DE
EB4503C99380E2FDE0BB1B6C9CF0EFFC2C82A5C02BE1043F02C74BB6579472F1
8C58483DCCE2B606DD5050B2A069C92475531B0039346FAB79890A7B62121AE8
AA72881354FCB1E602AE3F6B3D97A3DA2A0B862D1A531B31DBF87DE1694B3766
4D9ED8C13BE2FFCD4C8C8F28D712957304E1D9DD00EF9D8FEE88982CA725E289
93C4CB8271D0D3D354B6FFD412D8056E6B4F271330A50C2C0A1399A6248B6B5D
FFD4BF2A6417C8A2645D29BC248B9344FD5238D4EAC46A0A7530DE815E13EC72
C8D83BE1DC1EEAA999332754C5FAAE1E45DCCDEACB27F012C5DEB81D0FB9D8A6
90F06857DE3353512B276F4783ECB856B8F65AB2B4E1B310B4DCBBF1E30206FA
0560E1AC6E591D65AD77EFCF84BC82B8D60D010B09836320B4575807336E97E8
BAFB033694A29F180010C02890E4D0C4AD8D830FA449422EB7B574E879A3198D
CA8664410965650F5D5DEC73D6381B83B02A20E7B6BF5477FABE9CDCF2DDBD07
777EABC8FF82B78EFA3E43B7E70385E2000ACCA74A9F8B4E2D068408A0D97EF7
50F45753E4062C97B34BBDD9FC1B0D80592D27591ED5ADBFBB316F1DDD131A3C
DDAE731A8FA7AC540977DE1FCE56983C36693F074E37891334A980D9F05E38C8
6E21694B3E98CD542005E3D69B37EA2A99B12A6DA03D7C9D533A252442161541
A429E84047ADCF4428996ACB1B02E33C3A09786415ACA3378DBC4D529251EAD2
D98D05EDD0DA3FB44FB4748E06C77CDE03216427DBEBBFBE30099E8D19FCE2AF
997B47BEF98881B4B832C78771E0DF38430352C844D0AD0E56F3E125FB432278
1770824B04AE3C94A3B9E36AE0C91AE47962A53AAC0281158FEDFD23141B3792
BFE9D7A5E903575B97653F9FB191FDBD9C7300A51DF5335F6DDB391CFBCCAA76
5BB4F42AE344BC3EBE52F7ADC434C8AD260333FFBEFB1C51124023EEC68B02AC
158A754AE4DB3F7EC054A615C2147E598F7D2BE7CBDB927FBE229F32D036494B
8A1BCA5082A15B54244F2249DB4CE65946D0819398C24C3DFEAA1F91DA782DA7
FAC8C8AF76E8D56DDAAC2BC0375B01874417A89D39F18D9B150D9BDBD8D8CCEA
8D7C1F3AEFF5711BC58CB008C0027B36AC2C72B207515CD4AB206E5F57A69969
6A1832106E398859690EA5ABF9B556029EED1A3C1254DD970AA1FB6D0865815D
569A2DF51004898DE6B714B6722F248C2F8F705EF3C6D1FF598188112BBAEEA5
4B656B11D3F99424F717F6776E8BF36597FF3BA20EA8587A47614CCBF0E3BDE8
335EB8BEA572436749FB9AFC8495BBC64802C2286DA5CD7630AE1F4665243233
73F0C6E892CF35550863E5A6302A018F0D996452727DE6D2BED0C7DA12EDED9A
2A381967FC56B6AE873F44D4E6597E251CE967E0BB207193F7E537F418F59111
9A56B074B0AF8B8E951D94D0790FB6EE8D5851F1D866944BCF58F7DAF52DB8DE
513CBC0B5BD37D47399361B64B2D2F4E300D2E883431CB96721B1C2C63E92416
4DE6FCAF4423B5A325ADC0E861FD59F93676CD78A74422390C617D15848B8151
ABD5581E440B65879902C94F5FECC34FC1B1A41F0A15A1B16BFBB4DFC74AF24E
6996EA8F7E280ABFD987244C054B4049AF6280DD87464BBC4E2891AB13FCDAA0
069EB2E8AF0539ECF5D62E99EE10F446522C269973C5BB0B9078599DC9D9E1B1
17119DA6CB489733C006E8EB1C7F679F37041E127157B3A719CBF2DE674BEB03
FA01CDFB4F6FA4FD16CAC5974A6DD79202EF6D348317297B3C1334D0B735E487
8CE5CF4B755A632E53E4032E929108EA3961015F1FBFA8DDD15ACFEC7B217344
0E606AFD0AA42BEDAE429C7A56385F97AD79A5B0C84097A342CDE89CC7DBAF84
9587D50DC89BF9778BDC99D11C521CF7632231F71FF85A0414477922B13843C8
1375CD2401DD80433955048B02C95E3049FB5B799E957538EA39136EC7AE5B6C
EB4699F8170B73B5916642DA18AEE8A28F4F1828EBE248D3747BAB7A7638E9F4
D7AC7B4C83978AA59BF8917B8119EBB65D330CD18BDC2C8776308D50232B0226
D630C2CFB30A650D81ADD1B376FCF1789B90D5A4718C7B766D80905F523F5B88
F018C76DE494C465BA5B525C9B19967EF94240F24E2BF9370E0314C0A0ED3A0D
6051B0DFE4790EB6E9782736E731FC63806D002EA31342D2EBDA8A4021A36459
23C6EEC6299708348C981EDCDEF347DD300966EEBB1AC13DD85FA515079CB441
AAEAC081E389B15F945F34C75B1BBD813B92C19B1ED65EC0761472B52CBF518E
490FF1546695752880749B36E94D1030C5E94036830E9D1251E09B5263117D5B
51CEF6EBA67EEF8FD50718E591352327C0F46C088302B71E5A7833B19BD4B9E4
1D6377E7F4EF6D48A53F5D80C714156410478FED237834DA6C89E418CF6CAC74
B4AA309A1C9EE729997AF5E4131E6A7DC28D49259649D14D5F9B48BDF7F3A141
ECBF7464B69C6EA251435A529223631756B1F4F23826470096C030AD021F2421
97ED80E8888011A5B4DCD4E86AD04F1F4668E4A1F7C6EF0081A8D83CF188EBFA
41339ECA703450521DAC9676EEB183
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark


%%EndResource

Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Encoding0 5.0 0
/ANSIEncoding[/grave/acute/circumflex/tilde/macron/breve/dotaccent/dieresis
/ring/cedilla/hungarumlaut/ogonek/caron/dotlessi 18 bullets StandardEncoding 32
95 getinterval aload !/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase
/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron 2 bullets/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
{ISOLatin1Encoding}stopped{96 bullets}{160 96 getinterval aload !}?]d
ANSIEncoding @ 39/quotesingle put 96/grave put/ANSIEncodingOld ANSIEncoding 256
array copy d ANSIEncodingOld @[138 153 154 169 172 174 177 178 179 181 185 188
189 190 208 215 221 222 240 247 253 254]{/bullet put @}forall 166/bar put 176
/ring put EncodeDict/0 ANSIEncoding put EncodeDict/ANSIEncodingOld
ANSIEncodingOld put
%%EndResource
end reinitialize
F /F5 0 /0 T /LucidaSans-Typewriter mF 
/F5S53 F5 [83 0 0 -83 0 0 ] mFS
F5S53 Ji 
1740 2566 M (x)S 
/F5S42 F5 [66 0 0 -66 0 0 ] mFS
F5S42 Ji 
1794 2524 M (y)S 
; ; : N 1380 1110 M 5020 1110 I 5020 3790 I 1380 3790 I C 
eoclip : N 2704 2459 M 2806 2459 I 2806 2603 I 2704 2603 I C 
eoclip F5S53 Ji 
2713 2566 M (x)S 
F5S42 Ji 
2766 2524 M (y)S 
; ; : N 3154 3295 M 3278 3295 I 3278 3403 I 3154 3403 I C 
eoclip F5S53 Ji 
3191 3366 M (x)S 
N 3169 3378 M 3169 3380 I 3173 3380 I 3173 3378 I C 
 L N 3169 3303 M 3169 3301 I 3173 3301 I 3173 3303 I C 
 L N 3169 3378 M 3173 3378 I 3173 3303 I 3169 3303 I C 
 L N 3247 3378 M 3247 3380 I 3251 3380 I 3251 3378 I C 
 L N 3247 3303 M 3247 3301 I 3251 3301 I 3251 3303 I C 
 L N 3247 3378 M 3251 3378 I 3251 3303 I 3247 3303 I C 
 L ; ; ; LH
(%%[Page: 3]%%) = 
%%PageTrailer

%%Page: 4 4
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F2S53 Ji 
1380 1166 M (char *AP_tostr\(char *str, int size,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50  0]xS 
4520 1166 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
1580 1266 M (int base, T x\))[50 50 50 50 50 50 50 50 50 50 49 50 50  0]xS 
F1S53 Ji 
1480 1366 M (fills )[27 24 23 23 32  0]xS 
F2S53 Ji 
1641 1366 M (str[0)[50 50 50 50  0]xS 
F1S53 Ji 
1891 1366 M (..)[20  0]xS 
F2S53 Ji 
1932 1366 M (size-1])[50 50 50 50 50 50  0]xS 
F1S53 Ji 
2282 1366 M ( with the character representation of )[31 61 23 23 42 31 23 42 37 31 37 42 37 27 37 37 23 37 28 32 27 37 42 28 37 32 37 42 23 37 23 23
42 41 32 41 28  0]xS 
F2S53 Ji 
3567 1366 M (x)S 
F1S53 Ji 
3617 1366 M ( in )[32 23 42  0]xS 
F2S53 Ji 
3744 1366 M (base)[50 50 50  0]xS 
F1S53 Ji 
3944 1366 M ( and returns )[31 37 42 41 32 28 37 23 41 28 42 32  0]xS 
F2S53 Ji 
4390 1366 M (str)[50 50  0]xS 
F1S53 Ji 
4535 1366 M (. If )[21 31 28 27  0]xS 
F2S53 Ji 
4674 1366 M (str)[50 50  0]xS 
F4S53 Ji 
4824 1366 M (=)S 
F1S53 Ji 
4870 1366 M (null,)[42 42 23 23  0]xS 
F2S53 Ji 
1480 1466 M (AP_tostr)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1880 1466 M ( allocates it. Uppercase letters are used for digits that exceed 9 when )
[20 37 23 23 42 37 37 23 37 32 20 23 24 20 20 61 41 42 37 28 37 37 32 37 20 23 37 23 24 36 28 33
20 37 27 37 21 41 33 37 41 20 28 42 27 21 41 23 42 23 23 33 20 23 42 37 23 20 37 41 37 37 37 42
20 42 20 60 42 37 41  0]xS 
F2S53 Ji 
4170 1466 M (base)[50 50 50  0]xS 
F4S53 Ji 
4370 1466 M (>)S 
F1S53 Ji 
4415 1466 M (10. It is c.r.e. for a)[42 41 21 20 28 23 20 23 33 20 37 21 23 21 37 21 20 27 42 28 20  0]xS 
1480 1566 M (nonnull )[41 42 42 41 42 23 23  0]xS 
F2S53 Ji 
1755 1566 M (str)[50 50  0]xS 
F1S53 Ji 
1905 1566 M ( to be too small or for )[21 23 42 20 42 37 21 23 42 41 21 33 64 37 24 23 21 41 28 21 27 42 28  0]xS 
F2S53 Ji 
2648 1566 M (base)[50 50 50  0]xS 
F4S53 Ji 
2848 1566 M (<)S 
F1S53 Ji 
2893 1566 M (2 or )[42 21 41 28  0]xS 
F2S53 Ji 
3046 1566 M (base)[50 50 50  0]xS 
F4S53 Ji 
3246 1566 M (>)S 
F1S53 Ji 
3292 1566 M (36.)[41 42  0]xS 
; ; LH
(%%[Page: 4]%%) = 
%%PageTrailer

%%Page: 5 5
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (Arena)[84 50 51 65  0]xS 
F2S53 Ji 
4243 1188 M (T)S 
F0S53 Ji 
4293 1188 M ( is opaque )[21 23 32 21 42 46 42 46 46 37  0]xS 
F2S53 Ji 
4670 1188 M (Arena_T)[50 50 50 50 50 50  0]xS 
F1S53 Ji 
1380 1349 M (It is a c.r.e. to pass )[27 24 20 24 32 21 37 21 37 20 24 20 37 21 21 23 42 21 41 37 33 32  0]xS 
F2S53 Ji 
2016 1349 M (nbytes)[50 50 50 50 50  0]xS 
F4S53 Ji 
2316 1349 M <A3>S 
F1S53 Ji 
2362 1349 M (0 or a null )[41 21 42 27 21 37 21 42 41 23 24  0]xS 
F2S53 Ji 
2723 1349 M (T)S 
F1S53 Ji 
2773 1349 M ( to any )[21 23 42 21 37 41 42  0]xS 
F2S53 Ji 
3020 1349 M (Arena)[50 50 50 50  0]xS 
F1S53 Ji 
3270 1349 M ( function.)[21 27 42 42 37 23 23 42 41  0]xS 
F2S53 Ji 
1380 1549 M (void *Arena_alloc\(T arena, int nbytes,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50  0]xS 
4420 1549 M (Arena_Failed)[50 50 50 50 50 50 50 50 50 50 50  0]xS 
1580 1649 M (const char *file, int line\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1749 M (allocates )[37 23 23 42 37 37 23 37 32  0]xS 
F2S53 Ji 
1799 1749 M (nbytes)[50 50 50 50 50  0]xS 
F1S53 Ji 
2099 1749 M ( bytes in )[27 42 42 23 37 32 28 23 41  0]xS 
F2S53 Ji 
2422 1749 M (arena)[50 50 50 50  0]xS 
F1S53 Ji 
2672 1749 M ( and returns a pointer to the first byte. The bytes are uninitialized. If)
[27 37 42 42 27 28 37 23 42 28 41 33 27 37 28 41 42 23 42 23 37 28 27 24 41 28 23 42 37 27 28 23
28 32 23 28 42 41 23 37 21 28 51 41 37 28 41 42 23 37 33 27 37 28 37 28 41 42 23 42 23 23 23 37
23 23 37 37 42 21 27 28  0]xS 
F2S53 Ji 
1480 1849 M (Arena_alloc)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2030 1849 M ( raises )[28 28 37 23 32 37 33  0]xS 
F2S53 Ji 
2274 1849 M (Arena_Failed)[50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2874 1849 M (, )[21  0]xS 
F2S53 Ji 
2922 1849 M (file)[50 50 50  0]xS 
F1S53 Ji 
3122 1849 M ( and )[27 37 42 42  0]xS 
F2S53 Ji 
3297 1849 M (line)[50 50 50  0]xS 
F1S53 Ji 
3497 1849 M ( are reported as the offending source coordi-)[27 37 28 37 28 27 37 42 42 27 24 37 41 28 37 32 27 24 41 37 28 41 27 27 37 42 42 23 41 42 28 32
42 41 28 37 37 27 37 42 42 27 42 23  0]xS 
1480 1949 M (nate.)[41 37 24 37  0]xS 
F2S53 Ji 
1380 2049 M (void *Arena_calloc\(T arena, int count,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50  0]xS 
4420 2049 M (Arena_Failed)[50 50 50 50 50 50 50 50 50 50 50  0]xS 
1580 2149 M ( int nbytes, const char *file, int line\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2249 M (allocates space in )[37 23 23 42 37 37 23 37 32 20 33 41 37 37 37 20 23 42  0]xS 
F2S53 Ji 
2081 2249 M (arena)[50 50 50 50  0]xS 
F1S53 Ji 
2331 2249 M ( for an array of )[20 28 42 27 20 37 42 20 37 28 28 37 41 20 42 28  0]xS 
F2S53 Ji 
2848 2249 M (count)[50 50 50 50  0]xS 
F1S53 Ji 
3098 2249 M ( elements, each occupying )[20 37 23 37 65 37 41 23 33 21 20 37 37 37 41 20 42 37 37 42 41 42 23 42 41  0]xS 
F2S53 Ji 
3995 2249 M (nbytes)[50 50 50 50 50  0]xS 
F1S53 Ji 
4294 2249 M (, and returns a pointer)[21 20 37 42 41 20 28 37 23 42 28 41 33 20 37 20 42 41 23 42 23 37  0]xS 
1480 2349 M (to the first element. It is a c.r.e. for )[23 42 24 23 42 37 24 27 24 27 33 23 24 37 23 37 65 37 42 23 21 24 28 23 24 23 33 24 37 24 37 21
23 21 37 20 25 27 42 28  0]xS 
F2S53 Ji 
2683 2349 M (count)[50 50 50 50  0]xS 
F4S53 Ji 
2933 2349 M <A3>S 
F1S53 Ji 
2979 2349 M (0. The elements are uninitialized. If )[41 21 24 51 42 37 24 37 23 37 65 37 42 23 32 24 37 28 37 24 42 41 24 41 23 24 23 37 23 23 37 37
42 20 25 27 28  0]xS 
F2S53 Ji 
4207 2349 M (Arena_calloc)[50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4806 2349 M ( raises)[24 28 37 23 33 36  0]xS 
F2S53 Ji 
1480 2449 M (Arena_Failed)[50 50 50 50 50 50 50 50 50 50 49  0]xS 
F1S53 Ji 
2080 2449 M (, )[21  0]xS 
F2S53 Ji 
2121 2449 M (file)[50 50 50  0]xS 
F1S53 Ji 
2321 2449 M ( and )[21 37 41 42  0]xS 
F2S53 Ji 
2483 2449 M (line)[50 50 50  0]xS 
F1S53 Ji 
2683 2449 M ( are reported as the offending source coordinate.)[21 37 27 37 21 28 37 42 41 28 23 37 42 21 36 33 21 23 42 36 21 42 26 28 37 42 41 23 42 42 20 33
42 41 28 37 37 21 37 41 42 28 41 23 42 37 23 37  0]xS 
F2S53 Ji 
1380 2549 M (void Arena_dispose\(T *ap\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2649 M (deallocates )[41 37 37 24 23 41 37 37 23 37 33  0]xS 
F3S53 Ji 
1871 2649 M (all)[42 23  0]xS 
F1S53 Ji 
1959 2649 M ( the space in )[22 23 42 36 22 32 42 37 37 37 21 24 41  0]xS 
F2S53 Ji 
2397 2649 M (*ap)[50 50  0]xS 
F1S53 Ji 
2547 2649 M (, deallocates the arena itself, and clears )[20 22 42 37 36 24 23 41 37 37 24 37 32 21 24 41 37 22 37 27 37 42 37 21 24 23 32 37 23 28 21 21
37 42 42 21 37 23 37 37 28 32  0]xS 
F2S53 Ji 
3872 2649 M (*ap)[50 50  0]xS 
F1S53 Ji 
4022 2649 M (. It is a c.r.e. for )[21 21 28 23 21 23 33 21 37 22 37 21 23 21 37 20 22 28 41 28  0]xS 
F2S53 Ji 
4572 2649 M (ap)[50  0]xS 
F1S53 Ji 
4672 2649 M ( or )[22 42 27  0]xS 
F2S53 Ji 
4784 2649 M (*ap)[50 50  0]xS 
F1S53 Ji 
4934 2649 M ( to)[21 23  0]xS 
1480 2749 M (be null.)[41 37 21 42 41 24 23  0]xS 
F2S53 Ji 
1380 2849 M (void Arena_free\(T arena\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2949 M (deallocates )[41 37 37 24 23 41 37 37 23 37 33  0]xS 
F3S53 Ji 
1871 2949 M (all)[41 23  0]xS 
F1S53 Ji 
1959 2949 M ( the space in )[20 24 41 37 21 32 42 37 37 37 21 23 42  0]xS 
F2S53 Ji 
2394 2949 M (arena)[50 50 50 50  0]xS 
F1S53 Ji 
2644 2949 M ( \227 all the space allocated since the last call to )[21 83 21 37 23 24 20 24 41 37 21 32 42 37 37 37 21 37 23 23 42 37 37 23 37 41 21 33 23 42 36 37
21 23 42 37 21 23 37 32 24 20 37 37 24 23 21 23 41  0]xS 
F2S53 Ji 
4200 2949 M (Arena_free)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4700 2949 M (.)S 
F2S53 Ji 
1380 3049 M (T Arena_new\(void\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50  0]xS 
4270 3049 M (Arena_NewFailed)[50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3149 M (allocates, initializes, and returns a new arena.)[37 23 23 42 37 37 23 37 32 21 21 23 42 23 23 23 37 23 23 37 37 33 21 20 37 42 42 20 28 37 23 42
28 41 33 21 37 20 42 37 60 21 37 28 37 41 37  0]xS 
; ; LH
(%%[Page: 5]%%) = 
%%PageTrailer

%%Page: 6 6
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (Arith)[84 52 32 39  0]xS 
F2S53 Ji 
1380 1399 M (int Arith_ceiling\(int x, int y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1499 M (returns the least integer not less than the real quotient of )
[27 37 24 41 28 42 32 21 23 42 37 20 24 37 37 32 23 21 23 42 23 37 42 37 27 21 42 41 24 20 24 37
32 32 21 23 42 37 42 20 24 41 37 21 28 37 37 23 21 41 42 42 23 23 37 42 23 21 41 28  0]xS 
F2S53 Ji 
3370 1499 M (x)S 
F4S53 Ji 
3420 1499 M (/)S 
F2S53 Ji 
3443 1499 M (y)S 
F1S53 Ji 
3488 1499 M (. It is an u.r.e. for )[21 21 28 23 21 23 32 21 37 42 21 41 21 23 21 37 21 21 27 42 28  0]xS 
F2S53 Ji 
4080 1499 M (y)S 
F4S53 Ji 
4130 1499 M (=)S 
F1S53 Ji 
4175 1499 M (0.)[42  0]xS 
F2S53 Ji 
1380 1599 M (int Arith_div\(int x, int y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1699 M (returns )[27 37 24 41 28 42 32  0]xS 
F2S53 Ji 
1741 1699 M (x)S 
F4S53 Ji 
1791 1699 M (/)S 
F2S53 Ji 
1814 1699 M (y)S 
F1S53 Ji 
1858 1699 M (, the maximum integer that does not exceed the real number )[21 29 24 41 37 30 64 37 42 23 65 42 64 30 23 42 23 37 42 37 27 30 23 41 37 24 29 42 41 37 33 29
42 41 24 29 37 42 37 37 37 41 30 23 42 36 30 28 37 37 23 29 42 42 64 42 37 28  0]xS 
F2S53 Ji 
3970 1699 M (z)S 
F1S53 Ji 
4020 1699 M ( such that )[30 32 42 37 41 30 23 41 37 24  0]xS 
F2S53 Ji 
4386 1699 M (z)S 
F4S53 Ji 
4436 1699 M <D7>S 
F2S53 Ji 
4457 1699 M (y)S 
F4S53 Ji 
4528 1699 M (=)S 
F2S53 Ji 
4594 1699 M (x)S 
F1S53 Ji 
4644 1699 M (. Truncates)[21 29 48 28 42 41 37 37 24 37  0]xS 
1480 1799 M (towards )[23 42 60 37 27 42 32  0]xS 
F4S53 Ji 
1764 1799 M <2DA5>[46  0]xS 
F1S53 Ji 
1870 1799 M (; e.g., )[24 20 37 21 42 21 20  0]xS 
F2S53 Ji 
2075 1799 M (Arith_div\()[50 50 50 50 50 50 50 50 50  0]xS 
F4S53 Ji 
2575 1799 M (-)S 
F1S53 Ji 
2621 1799 M (13, 5)[41 42 21 21  0]xS 
F2S53 Ji 
2788 1799 M (\))S 
F1S53 Ji 
2837 1799 M ( returns )[21 28 37 23 42 27 42 32  0]xS 
F4S53 Ji 
3110 1799 M (-)S 
F1S53 Ji 
3156 1799 M (3. It is an u.r.e. for )[42 20 21 28 23 21 23 33 20 37 42 21 41 21 23 21 37 21 21 28 41 28  0]xS 
F2S53 Ji 
3790 1799 M (y)S 
F4S53 Ji 
3840 1799 M (=)S 
F1S53 Ji 
3886 1799 M (0.)[41  0]xS 
F2S53 Ji 
1380 1899 M (int Arith_floor\(int x, int y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1999 M (returns the greatest integer not exceeding the real quotient of )
[27 37 24 41 28 42 32 21 23 42 37 20 42 28 37 37 23 37 32 24 20 23 42 23 37 42 37 28 20 42 42 23
21 37 41 37 37 37 42 23 42 41 21 23 42 37 21 28 37 37 23 20 42 42 41 24 23 37 41 24 20 42 28  0]xS 
F2S53 Ji 
3525 1999 M (x)S 
F4S53 Ji 
3575 1999 M (/)S 
F2S53 Ji 
3598 1999 M (y)S 
F1S53 Ji 
3642 1999 M (. It is an u.r.e. for )[21 21 28 23 21 23 32 21 37 42 20 42 21 23 21 37 21 20 28 42 28  0]xS 
F2S53 Ji 
4235 1999 M (y)S 
F4S53 Ji 
4285 1999 M (=)S 
F1S53 Ji 
4330 1999 M (0.)[42  0]xS 
F2S53 Ji 
1380 2099 M (int Arith_max\(int x, int y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2199 M (returns max\()[27 37 24 41 28 42 32 21 65 37 41  0]xS 
F2S53 Ji 
1903 2199 M (x)S 
F1S53 Ji 
1953 2199 M (, )[21  0]xS 
F2S53 Ji 
1995 2199 M (y)S 
F1S53 Ji 
2045 2199 M (\).)[27  0]xS 
F2S53 Ji 
1380 2299 M (int Arith_min\(int x, int y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2399 M (returns min\()[27 37 24 41 28 42 32 21 65 23 41  0]xS 
F2S53 Ji 
1889 2399 M (x)S 
F1S53 Ji 
1939 2399 M (, )[21  0]xS 
F2S53 Ji 
1981 2399 M (y)S 
F1S53 Ji 
2031 2399 M (\).)[28  0]xS 
F2S53 Ji 
1380 2499 M (int Arith_mod\(int x, int y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2599 M (returns )[27 37 24 41 28 42 32  0]xS 
F2S53 Ji 
1732 2599 M (x)S 
F4S53 Ji 
1803 2599 M (-)S 
F2S53 Ji 
1869 2599 M (y)S 
F4S53 Ji 
1919 2599 M <D7>S 
F2S53 Ji 
1940 2599 M (Arith_div\(x)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2490 2599 M (, )[21  0]xS 
F2S53 Ji 
2532 2599 M (y\))[50  0]xS 
F1S53 Ji 
2632 2599 M (; e.g., )[23 21 37 21 42 21 20  0]xS 
F2S53 Ji 
2837 2599 M (Arith_mod\()[50 50 50 50 50 50 50 50 50  0]xS 
F4S53 Ji 
3337 2599 M (-)S 
F1S53 Ji 
3383 2599 M (13, 5)[41 42 21 21  0]xS 
F2S53 Ji 
3549 2599 M (\))S 
F1S53 Ji 
3599 2599 M ( returns 2. It is an u.r.e. for )[21 28 37 23 42 27 42 32 21 42 21 20 28 23 21 23 33 21 37 41 21 42 21 23 20 37 21 21 28 41 28  0]xS 
F2S53 Ji 
4506 2599 M (y)S 
F4S53 Ji 
4556 2599 M (=)S 
F1S53 Ji 
4602 2599 M (0.)[41  0]xS 
; ; LH
(%%[Page: 6]%%) = 
%%PageTrailer

%%Page: 7 7
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (Array)[84 52 51 59  0]xS 
F2S53 Ji 
4243 1188 M (T)S 
F0S53 Ji 
4293 1188 M ( is opaque )[21 23 32 21 42 46 42 46 46 37  0]xS 
F2S53 Ji 
4670 1188 M (Array_T)[50 50 50 50 50 50  0]xS 
F1S53 Ji 
1380 1349 M (Array indices run from 0 to )[60 28 27 37 42 23 23 41 42 23 37 37 33 22 28 42 41 23 28 27 42 65 23 41 23 23 42  0]xS 
F3S53 Ji 
2325 1349 M (N)S 
F4S53 Ji 
2381 1349 M (-)S 
F1S53 Ji 
2427 1349 M (1, where )[41 21 23 60 41 37 28 37  0]xS 
F3S53 Ji 
2738 1349 M (N)S 
F1S53 Ji 
2794 1349 M ( is the length of the array. The empty array has no elements. It is a)
[23 23 33 22 23 42 37 23 23 37 41 42 23 42 23 41 28 23 23 41 37 23 37 28 27 37 37 21 22 51 42 37
22 37 65 42 23 42 22 37 28 28 37 41 23 42 37 32 23 41 42 23 37 23 37 65 36 42 23 33 21 22 28 23
23 23 32 23  0]xS 
1380 1449 M (c.r.e. to pass a null )[37 21 23 21 37 20 21 23 42 21 41 37 33 32 21 37 21 41 42 23 23  0]xS 
F2S53 Ji 
2018 1449 M (T)S 
F1S53 Ji 
2068 1449 M ( to any )[21 23 42 21 37 41 42  0]xS 
F2S53 Ji 
2316 1449 M (Array)[50 50 50 50  0]xS 
F1S53 Ji 
2566 1449 M ( function.)[20 28 42 42 36 24 23 41 42  0]xS 
F2S53 Ji 
1380 1649 M (T Array_copy\(T array, int length\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
 0]xS 
4520 1649 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1749 M (creates and returns a new array that holds the initial )[37 27 37 37 24 37 32 23 37 42 41 23 28 37 23 42 27 42 32 23 37 23 42 37 60 23 37 28 27 37 42 23
23 42 37 23 23 41 42 23 42 32 23 23 42 37 23 23 42 23 23 23 37 23  0]xS 
F2S53 Ji 
3240 1749 M (length)[50 50 50 50 50  0]xS 
F1S53 Ji 
3540 1749 M ( elements from )[23 37 23 37 65 37 42 23 32 23 28 28 41 65  0]xS 
F2S53 Ji 
4067 1749 M (array)[50 50 50 50  0]xS 
F1S53 Ji 
4312 1749 M (. If )[21 23 28 28  0]xS 
F2S53 Ji 
4434 1749 M (length)[49 50 50 50 50  0]xS 
F1S53 Ji 
4734 1749 M ( exceeds)[23 37 42 37 37 37 41  0]xS 
1480 1849 M (the length of )[23 42 37 20 24 36 42 42 23 42 20 42 28  0]xS 
F2S53 Ji 
1922 1849 M (array)[50 50 50 50  0]xS 
F1S53 Ji 
2166 1849 M (, the excess elements are cleared.)[21 21 23 42 37 20 37 42 37 37 32 33 21 37 23 37 64 37 42 23 33 20 37 28 37 21 37 23 37 37 28 37
41  0]xS 
F2S53 Ji 
1380 1949 M (void Array_free\(T *array\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2049 M (deallocates and clears *)[41 37 37 24 23 41 37 37 23 37 33 21 37 41 42 21 37 23 37 37 28 32 21  0]xS 
F2S53 Ji 
2269 2049 M (array)[50 50 50 50  0]xS 
F1S53 Ji 
2513 2049 M (. It is a c.r.e. for )[21 21 27 23 21 23 33 21 37 20 37 21 23 21 37 21 21 28 41 28  0]xS 
F2S53 Ji 
3059 2049 M (array)[50 50 50 50  0]xS 
F1S53 Ji 
3309 2049 M ( or *)[20 42 28 21  0]xS 
F2S53 Ji 
3462 2049 M (array)[50 50 50 50  0]xS 
F1S53 Ji 
3711 2049 M ( to be null.)[21 23 42 21 41 37 21 42 41 24 23  0]xS 
F2S53 Ji 
1380 2149 M (void *Array_get\(T array, int i\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2249 M (returns a pointer to the )[27 37 24 41 28 42 32 31 37 32 41 42 23 42 23 37 28 31 23 42 31 23 42 37  0]xS 
F2S53 Ji 
2307 2249 M (i)S 
F1S53 Ji 
2357 2249 M (th element in )[23 42 31 37 23 37 65 37 41 24 31 23 42  0]xS 
F2S53 Ji 
2844 2249 M (array)[50 50 50 50  0]xS 
F1S53 Ji 
3089 2249 M (. It is a c.r.e. for )[21 32 27 23 32 23 32 32 36 32 37 21 23 21 37 20 32 27 42 28  0]xS 
F2S53 Ji 
3697 2249 M (i)S 
F4S53 Ji 
3747 2249 M (<)S 
F1S53 Ji 
3793 2249 M (0 or )[41 32 41 28  0]xS 
F2S53 Ji 
3966 2249 M (i)S 
F4S53 Ji 
4016 2249 M <B3>S 
F3S53 Ji 
4062 2249 M (N)S 
F1S53 Ji 
4118 2249 M (, where )[20 32 60 41 37 28 37  0]xS 
F3S53 Ji 
4405 2249 M (N)S 
F1S53 Ji 
4460 2249 M ( is the length of)[31 23 33 31 23 42 37 31 23 37 42 41 24 41 32 41  0]xS 
F2S53 Ji 
1480 2349 M (array)[50 50 50 50  0]xS 
F1S53 Ji 
1724 2349 M (.)S 
F2S53 Ji 
1380 2449 M (int Array_length\(T array\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2549 M (returns the number of elements in )[27 37 24 41 28 42 32 21 23 42 37 20 42 42 65 41 37 28 21 41 28 21 37 23 37 65 37 42 23 32 21 23
42  0]xS 
F2S53 Ji 
2623 2549 M (array)[49 50 50 50  0]xS 
F1S53 Ji 
2867 2549 M (.)S 
F2S53 Ji 
1380 2649 M (T Array_new\(int length, int size\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
 0]xS 
4520 2649 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2749 M (allocates, initializes, and returns a new array of )[37 23 23 42 37 37 23 37 32 21 23 24 41 23 23 24 37 23 23 37 37 32 21 23 37 42 42 23 28 37 23 42
27 42 32 24 37 23 42 37 60 23 37 28 28 37 41 24 41 28  0]xS 
F2S53 Ji 
3091 2749 M (length)[50 50 50 50 50  0]xS 
F1S53 Ji 
3391 2749 M ( elements each of )[24 37 23 37 64 37 42 23 33 23 37 37 37 42 23 42 27  0]xS 
F2S53 Ji 
4003 2749 M (size)[50 50 50  0]xS 
F1S53 Ji 
4203 2749 M ( bytes. The elements are)[23 42 41 23 37 33 21 23 51 41 37 24 37 23 37 65 37 41 23 33 23 37 28  0]xS 
1480 2849 M (cleared. It is a c.r.e. for )[37 23 37 37 28 37 41 21 21 28 23 21 23 32 21 37 21 37 21 23 21 37 20 21 28 42 27  0]xS 
F2S53 Ji 
2266 2849 M (length)[50 50 50 50 50  0]xS 
F4S53 Ji 
2566 2849 M (<)S 
F1S53 Ji 
2612 2849 M (0 or )[41 21 42 28  0]xS 
F2S53 Ji 
2765 2849 M (size)[50 50 50  0]xS 
F4S53 Ji 
2964 2849 M <A3>S 
F1S53 Ji 
3010 2849 M (0.)[42  0]xS 
F2S53 Ji 
1380 2949 M (void *Array_put\(T array, int i, void *elem\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3049 M (copies )[37 41 42 23 37 33  0]xS 
F2S53 Ji 
1715 3049 M (Array_size\(array\))[50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2565 3049 M ( bytes from )[22 42 41 23 37 33 22 28 28 41 65  0]xS 
F2S53 Ji 
2970 3049 M (elem)[50 50 50  0]xS 
F1S53 Ji 
3170 3049 M ( into the )[22 23 42 23 42 22 23 42 37  0]xS 
F2S53 Ji 
3469 3049 M (i)S 
F1S53 Ji 
3519 3049 M (th element in )[23 42 23 37 23 37 65 36 42 23 23 23 42  0]xS 
F2S53 Ji 
3979 3049 M (array)[50 50 50 50  0]xS 
F1S53 Ji 
4229 3049 M ( and returns )[22 37 42 42 22 28 37 23 42 27 42 32  0]xS 
F2S53 Ji 
4648 3049 M (elem)[50 50 50  0]xS 
F1S53 Ji 
4848 3049 M (. It is)[21 22 28 23 22 23  0]xS 
1480 3149 M (a c.r.e. for )[37 21 37 20 24 20 37 21 21 28 41 28  0]xS 
F2S53 Ji 
1836 3149 M (elem)[50 50 50  0]xS 
F4S53 Ji 
2036 3149 M (=)S 
F1S53 Ji 
2082 3149 M (null or for )[41 42 23 23 21 42 27 21 28 42 27  0]xS 
F2S53 Ji 
2440 3149 M (i)S 
F4S53 Ji 
2490 3149 M (<)S 
F1S53 Ji 
2536 3149 M (0 or )[41 21 42 28  0]xS 
F2S53 Ji 
2689 3149 M (i)S 
F4S53 Ji 
2739 3149 M <B3>S 
F3S53 Ji 
2784 3149 M (N)S 
F1S53 Ji 
2840 3149 M (, where )[21 20 61 41 37 28 37  0]xS 
F3S53 Ji 
3106 3149 M (N)S 
F1S53 Ji 
3161 3149 M ( is the length of )[21 23 33 20 24 41 37 21 23 37 42 41 24 41 21 42 27  0]xS 
F2S53 Ji 
3700 3149 M (array)[50 50 50 50  0]xS 
F1S53 Ji 
3945 3149 M (.)S 
F2S53 Ji 
1380 3249 M (void Array_resize\(T array, int length\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50  0]xS 
4520 3249 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3349 M (changes the number of elements in )[37 41 37 42 42 37 32 20 23 42 37 20 42 41 65 42 37 28 20 41 28 20 37 23 37 65 37 42 23 32 20 24
41  0]xS 
F2S53 Ji 
2655 3349 M (array)[50 50 50 50  0]xS 
F1S53 Ji 
2905 3349 M ( to )[20 23 42  0]xS 
F2S53 Ji 
3010 3349 M (length)[50 50 50 50 50  0]xS 
F1S53 Ji 
3310 3349 M (. If )[21 20 28 27  0]xS 
F2S53 Ji 
3427 3349 M (length)[50 50 50 49 50  0]xS 
F1S53 Ji 
3727 3349 M ( exceeds the original length, the excess)[21 37 41 37 37 37 42 32 20 23 42 37 20 42 28 23 41 24 41 37 23 20 24 37 41 42 23 42 20 21 23 41
37 21 36 42 37 37 32  0]xS 
1480 3449 M (elements are cleared. It is a c.r.e. for )[37 23 37 65 37 41 23 33 21 37 27 37 21 37 23 37 37 28 37 42 20 21 28 23 21 23 33 20 37 21 37 21
23 21 37 21 21 27 42 28  0]xS 
F2S53 Ji 
2706 3449 M (length)[50 50 49 50 50  0]xS 
F4S53 Ji 
3006 3449 M (<)S 
F1S53 Ji 
3051 3449 M (0.)[42  0]xS 
F2S53 Ji 
1380 3549 M (int Array_size\(T array\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3649 M (returns the size in bytes of the elements in )[27 37 24 41 28 42 32 21 23 42 37 20 33 23 37 37 21 23 42 20 42 42 23 37 32 21 42 27 21 23 42 37
21 37 23 37 65 37 41 24 32 21 23 42  0]xS 
F2S53 Ji 
2903 3649 M (array)[50 50 50 50  0]xS 
F1S53 Ji 
3147 3649 M (.)S 
; ; LH
(%%[Page: 7]%%) = 
%%PageTrailer

%%Page: 8 8
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (ArrayRep)[84 52 51 59 58 84 52  0]xS 
F2S53 Ji 
4523 1188 M (T)S 
F0S53 Ji 
4573 1188 M ( is )[21 23 32  0]xS 
F2S53 Ji 
4670 1188 M (Array_T)[50 50 50 50 50 50  0]xS 
1380 1399 M (typedef struct T {)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50  0]xS 
1680 1499 M (int length; int size; char *array; } *T;)[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1380 1699 M (It is an )[27 24 20 24 32 21 37 41  0]xS 
1627 1699 M (u.r.e.)[42 21 23 21 37  0]xS 
1792 1699 M ( to change the fields in a )[20 24 41 21 37 42 37 41 42 37 21 23 41 37 21 28 23 37 23 42 32 21 23 42 21 37  0]xS 
F2S53 Ji 
2627 1699 M (T)S 
F1S53 Ji 
2671 1699 M (.)S 
F2S53 Ji 
1380 1899 M (void ArrayRep_init\(T array, int length,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50  0]xS 
1580 1999 M (int size, void *ary\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2099 M (initializes the fields in )[23 42 23 23 23 37 23 23 37 37 33 22 24 41 37 23 28 23 37 23 42 32 23 23 41  0]xS 
F2S53 Ji 
2246 2099 M (array)[50 50 50 50  0]xS 
F1S53 Ji 
2496 2099 M ( to the values of )[23 23 42 22 23 42 37 23 41 37 23 42 37 32 23 42 28  0]xS 
F2S53 Ji 
3058 2099 M (length)[50 50 50 50 50  0]xS 
F1S53 Ji 
3358 2099 M (, )[21  0]xS 
F2S53 Ji 
3402 2099 M (size)[50 50 50  0]xS 
F1S53 Ji 
3602 2099 M (, and )[20 23 37 42 41  0]xS 
F2S53 Ji 
3788 2099 M (ary)[50 50  0]xS 
F1S53 Ji 
3933 2099 M (. It is a c.r.e. for )[20 23 28 23 23 23 32 23 37 23 37 20 24 20 37 21 23 28 41 28  0]xS 
F2S53 Ji 
4490 2099 M (length)[50 50 50 50 50  0]xS 
F4S53 Ji 
4790 2099 M <B9>S 
F1S53 Ji 
4835 2099 M (0 and)[42 23 37 41  0]xS 
F2S53 Ji 
1480 2199 M (ary)[50 50  0]xS 
F4S53 Ji 
1630 2199 M (=)S 
F1S53 Ji 
1676 2199 M (null, )[42 42 23 23 21  0]xS 
F2S53 Ji 
1847 2199 M (length)[50 50 50 50 50  0]xS 
F4S53 Ji 
2147 2199 M (=)S 
F1S53 Ji 
2192 2199 M (0 and )[42 21 37 41 42  0]xS 
F2S53 Ji 
2396 2199 M (ary)[50 50  0]xS 
F4S53 Ji 
2546 2199 M <B9>S 
F1S53 Ji 
2592 2199 M (null, or )[42 42 23 23 21 21 41 28  0]xS 
F2S53 Ji 
2853 2199 M (size)[50 50 50  0]xS 
F4S53 Ji 
3053 2199 M <A3>S 
F1S53 Ji 
3099 2199 M (0. It is an )[41 21 21 28 23 21 23 32 21 37 42  0]xS 
3430 2199 M (u.r.e.)[42 21 23 21 37  0]xS 
3594 2199 M ( to initialize a )[20 24 41 21 23 42 23 23 23 37 23 24 37 37 20 37  0]xS 
F2S53 Ji 
4070 2199 M (T)S 
F1S53 Ji 
4120 2199 M ( by other means.)[21 42 41 21 42 23 42 37 27 21 65 37 37 41 33  0]xS 
; ; LH
(%%[Page: 8]%%) = 
%%PageTrailer

%%Page: 9 9
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (Assert)[84 45 46 51 52  0]xS 
F2S53 Ji 
1380 1399 M (assert\(e\))[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1499 M (raises )[27 37 24 32 37 32  0]xS 
F2S53 Ji 
1699 1499 M (Assert_Failed)[50 50 50 50 50 50 50 49 50 50 50 50  0]xS 
F1S53 Ji 
2349 1499 M ( if )[30 23 28  0]xS 
F2S53 Ji 
2458 1499 M (e)S 
F1S53 Ji 
2508 1499 M ( is 0. Syntactically, )[29 23 33 29 42 20 30 46 42 41 23 37 37 24 23 37 37 23 23 36 21  0]xS 
F2S53 Ji 
3193 1499 M (assert\(e\))[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3643 1499 M ( is an expression. If )[29 23 33 29 37 42 29 37 42 41 28 37 32 33 23 42 41 21 29 28 28  0]xS 
F2S53 Ji 
4356 1499 M (NDEBUG)[50 50 50 50 50  0]xS 
F1S53 Ji 
4656 1499 M ( is defined)[29 23 33 29 42 37 27 24 41 37  0]xS 
1480 1599 M (when )[60 42 37 41  0]xS 
F2S53 Ji 
1681 1599 M (assert.h)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2081 1599 M ( is included, assertions are disabled.)[21 23 32 21 23 42 37 23 42 41 37 42 21 20 37 33 32 37 28 23 23 42 42 32 21 37 28 37 20 42 23 33
37 41 23 37 42  0]xS 
; ; LH
(%%[Page: 9]%%) = 
%%PageTrailer

%%Page: 10 10
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (Atom)[84 39 58  0]xS 
F1S53 Ji 
1380 1349 M (It is a c.r.e. to pass a null )[27 24 20 24 32 21 37 21 37 20 24 20 37 21 21 23 42 21 41 37 33 32 21 37 21 41 42 23 23  0]xS 
F2S53 Ji 
2224 1349 M (str)[50 50  0]xS 
F1S53 Ji 
2374 1349 M ( to any )[21 23 42 21 37 41 42  0]xS 
F2S53 Ji 
2622 1349 M (Atom)[50 50 50  0]xS 
F1S53 Ji 
2822 1349 M ( function. It is an u.r.e. to modify an atom.)[20 28 42 41 37 24 23 41 42 21 21 27 23 21 23 33 21 37 41 21 42 21 23 21 37 20 21 23 42 21 65 41
42 23 28 41 21 37 42 21 37 23 42 64  0]xS 
F2S53 Ji 
1380 1549 M (int Atom_length\(const char *str\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1649 M (returns the length of the atom )[27 37 24 41 28 42 32 21 23 42 37 20 24 37 41 42 23 42 21 41 28 21 23 42 37 20 37 23 42 65  0]xS 
F2S53 Ji 
2484 1649 M (str)[50 50  0]xS 
F1S53 Ji 
2629 1649 M (. It is a c.r.e. for )[21 21 27 24 20 24 32 21 37 21 37 20 24 20 37 21 21 28 41 28  0]xS 
F2S53 Ji 
3175 1649 M (str)[50 50  0]xS 
F1S53 Ji 
3325 1649 M ( not to be an atom.)[21 41 42 23 21 23 42 21 41 37 21 37 42 21 36 24 41 65  0]xS 
F2S53 Ji 
1380 1749 M (char *Atom_new\(const char *str, int len\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50  0]xS 
4520 1749 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1849 M (returns the atom for )[27 37 24 41 28 42 32 21 23 42 37 20 37 24 41 65 21 28 41 28  0]xS 
F2S53 Ji 
2160 1849 M (str[0)[50 50 50 50  0]xS 
F1S53 Ji 
2410 1849 M (..)[21  0]xS 
F2S53 Ji 
2452 1849 M (len-1])[50 50 50 50 50  0]xS 
F1S53 Ji 
2751 1849 M (, creating one if necessary. It is a c.r.e. for )[21 21 37 28 37 37 23 23 41 42 21 42 41 37 21 23 28 21 41 37 37 37 33 32 37 28 36 21 21 27 24 20
24 32 21 37 21 37 20 24 20 37 21 21 28 41 28  0]xS 
F2S53 Ji 
4159 1849 M (len)[50 50  0]xS 
F4S53 Ji 
4309 1849 M (<)S 
F1S53 Ji 
4355 1849 M (0.)[41  0]xS 
F2S53 Ji 
1380 1949 M (char *Atom_string\(const char *str\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50  0]xS 
4520 1949 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2049 M (returns )[27 37 24 41 28 42 32  0]xS 
F2S53 Ji 
1732 2049 M (Atom_new\(str,)[50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2382 2049 M ( )S 
F2S53 Ji 
2403 2049 M (strlen\(str\)\))[50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3002 2049 M (.)S 
F2S53 Ji 
1380 2149 M (char *Atom_int\(long n\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 2149 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2249 M (returns the atom for the decimal string representation of )[27 37 24 41 28 42 32 21 23 42 37 20 37 24 41 65 21 28 41 28 21 23 42 37 20 42 37 37 23 65 37 23
21 32 24 27 23 42 42 21 27 37 42 28 37 32 37 42 23 37 23 23 42 41 21 42 28  0]xS 
F2S53 Ji 
3361 2249 M (n)S 
F1S53 Ji 
3411 2249 M (.)S 
; ; LH
(%%[Page: 10]%%) = 
%%PageTrailer

%%Page: 11 11
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (Bit)[78 32  0]xS 
F2S53 Ji 
4343 1188 M (T)S 
F0S53 Ji 
4393 1188 M ( is opaque )[21 23 32 21 42 46 42 46 46 37  0]xS 
F2S53 Ji 
4770 1188 M (Bit_T)[50 50 50 50  0]xS 
F1S53 Ji 
1380 1349 M (The bits in a bit vector are numbered 0 to )[51 41 37 22 41 24 23 32 22 23 41 22 37 22 41 23 23 22 42 37 37 23 41 28 22 37 27 37 22 42 41 65
42 37 27 37 42 21 42 22 23 41  0]xS 
F3S53 Ji 
2784 1349 M (N)S 
F4S53 Ji 
2840 1349 M (-)S 
F1S53 Ji 
2885 1349 M (1 where )[42 21 61 41 37 28 37  0]xS 
F3S53 Ji 
3174 1349 M (N)S 
F1S53 Ji 
3229 1349 M ( is the length of the vector. It is a c.r.e to pass a null )[21 24 32 22 23 41 37 22 23 37 42 41 23 42 22 41 28 22 23 41 37 22 41 37 37 24 41 23 21 22 27 24
21 23 33 21 37 22 37 21 23 21 37 21 23 42 21 42 37 32 33 21 37 22 41 42 23 23  0]xS 
F2S53 Ji 
4970 1349 M (T)S 
F1S53 Ji 
1380 1449 M (to any )[23 42 20 37 42 42  0]xS 
F2S53 Ji 
1607 1449 M (Bit)[50 50  0]xS 
F1S53 Ji 
1757 1449 M ( function, except for )[21 28 42 41 37 23 24 41 42 21 20 37 42 37 37 42 23 21 27 42 28  0]xS 
F2S53 Ji 
2453 1449 M (Bit_union)[50 50 50 50 49 50 50 50  0]xS 
F1S53 Ji 
2903 1449 M (, )[21  0]xS 
F2S53 Ji 
2944 1449 M (Bit_inter)[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3391 1449 M (, )[21  0]xS 
F2S53 Ji 
3432 1449 M (Bit_minus)[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3882 1449 M (, and )[21 21 37 41 42  0]xS 
F2S53 Ji 
4065 1449 M (Bit_diff.)[50 50 50 50 50 49 50 50  0]xS 
1380 1649 M (void Bit_clear\(T set, int lo, int hi\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50  0]xS 
F1S53 Ji 
1480 1749 M (clears bits )[37 23 37 37 28 32 19 42 23 23 32  0]xS 
F2S53 Ji 
1833 1749 M (lo)[50  0]xS 
F1S53 Ji 
1933 1749 M (..)[21  0]xS 
F2S53 Ji 
1974 1749 M (hi)[50  0]xS 
F1S53 Ji 
2074 1749 M ( in )[19 23 42  0]xS 
F2S53 Ji 
2177 1749 M (set)[50 50  0]xS 
F1S53 Ji 
2327 1749 M (. It is a c.r.e. for )[21 19 27 23 20 23 32 19 37 19 37 21 23 21 37 21 19 27 42 28  0]xS 
F2S53 Ji 
2862 1749 M (lo)[50  0]xS 
F4S53 Ji 
2962 1749 M (>)S 
F2S53 Ji 
3008 1749 M (hi)[50  0]xS 
F1S53 Ji 
3108 1749 M (, or for )[20 19 42 28 19 28 41 28  0]xS 
F2S53 Ji 
3352 1749 M (lo)[50  0]xS 
F4S53 Ji 
3452 1749 M (<)S 
F1S53 Ji 
3498 1749 M (0 or )[41 19 42 28  0]xS 
F2S53 Ji 
3647 1749 M (lo)[50  0]xS 
F4S53 Ji 
3747 1749 M <B3>S 
F3S53 Ji 
3793 1749 M (N)S 
F1S53 Ji 
3848 1749 M ( where )[19 60 42 37 27 37  0]xS 
F3S53 Ji 
4090 1749 M (N)S 
F1S53 Ji 
4145 1749 M ( is the length of )[19 23 33 19 23 41 37 19 24 37 41 42 23 42 19 41 28  0]xS 
F2S53 Ji 
4675 1749 M (set)[50 50  0]xS 
F1S53 Ji 
4825 1749 M (; like-)[23 19 23 24 41 37  0]xS 
1480 1849 M (wise for )[60 23 32 37 21 28 42 27  0]xS 
F2S53 Ji 
1771 1849 M (hi)[50  0]xS 
F1S53 Ji 
1871 1849 M (.)S 
F2S53 Ji 
1380 1949 M (int Bit_count\(T set\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2049 M (returns the number of 1s in )[27 37 24 41 28 42 32 21 23 42 37 20 42 42 65 41 37 28 21 41 28 21 42 32 21 23 42  0]xS 
F2S53 Ji 
2401 2049 M (set)[50 50  0]xS 
F1S53 Ji 
2551 2049 M (.)S 
F2S53 Ji 
1380 2149 M (T Bit_diff\(T s, T t\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50  0]xS 
4520 2149 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2249 M (returns the symmetric difference )[27 37 24 41 28 42 32 27 23 42 37 27 33 41 65 65 37 23 28 23 37 27 42 23 26 28 37 28 37 41 37 37
 0]xS 
F2S53 Ji 
2610 2249 M (s)S 
F4S53 Ji 
2680 2249 M (/)S 
F2S53 Ji 
2724 2249 M (t)S 
F1S53 Ji 
2774 2249 M (: the exclusive OR of )[23 28 23 41 37 28 37 41 37 23 42 32 24 41 37 27 61 55 27 42 28  0]xS 
F2S53 Ji 
3535 2249 M (s)S 
F1S53 Ji 
3585 2249 M ( and )[27 37 42 41  0]xS 
F2S53 Ji 
3760 2249 M (t)S 
F1S53 Ji 
3810 2249 M (. If )[20 28 27 28  0]xS 
F2S53 Ji 
3941 2249 M (s)S 
F4S53 Ji 
3991 2249 M (=)S 
F1S53 Ji 
4036 2249 M (null or )[42 41 24 23 27 42 27  0]xS 
F2S53 Ji 
4290 2249 M (t)S 
F4S53 Ji 
4340 2249 M (=)S 
F1S53 Ji 
4385 2249 M (null, it denotes the)[42 42 23 23 21 27 23 23 27 42 37 42 41 24 36 33 27 23 42  0]xS 
1480 2349 M (empty set. It is a c.r.e. for )[37 65 41 23 42 21 32 37 23 21 21 28 23 21 23 32 21 37 21 37 21 23 21 37 20 21 28 42 27  0]xS 
F2S53 Ji 
2347 2349 M (s)S 
F1S53 Ji 
2397 2349 M (=null and )[47 42 41 24 23 21 37 41 42  0]xS 
F2S53 Ji 
2736 2349 M (t)S 
F1S53 Ji 
2786 2349 M (=null, or for )[47 41 42 23 23 21 21 42 27 21 28 41 28  0]xS 
F2S53 Ji 
3212 2349 M (s)S 
F1S53 Ji 
3262 2349 M ( and )[21 37 41 42  0]xS 
F2S53 Ji 
3424 2349 M (t)S 
F1S53 Ji 
3474 2349 M ( to have different lengths.)[21 23 42 20 42 37 42 37 20 42 23 26 28 37 28 37 42 23 21 23 37 41 42 23 42 32  0]xS 
F2S53 Ji 
1380 2449 M (int Bit_eq\(T s, T t\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2549 M (returns 1 if )[27 37 24 41 28 42 32 21 42 20 24 27  0]xS 
F2S53 Ji 
1866 2549 M (s)S 
F4S53 Ji 
1937 2549 M (=)S 
F2S53 Ji 
2004 2549 M (t)S 
F1S53 Ji 
2054 2549 M ( and 0 otherwise. It is a c.r.e. for  )[21 37 42 41 21 42 21 41 24 41 37 28 60 23 33 37 20 21 28 23 21 23 33 20 37 21 37 21 23 21 37 21
21 27 42 28 20  0]xS 
F2S53 Ji 
3168 2549 M (s)S 
F1S53 Ji 
3218 2549 M ( and )[21 37 42 41  0]xS 
F2S53 Ji 
3380 2549 M (t)S 
F1S53 Ji 
3430 2549 M ( to have different lengths.)[21 23 42 21 41 37 42 37 21 41 24 26 27 37 28 37 42 23 21 23 37 42 41 23 42 32  0]xS 
F2S53 Ji 
1380 2649 M (void Bit_free\(T *set\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2749 M (deallocates and clears )[41 37 37 24 23 41 37 37 23 37 33 21 37 41 42 21 37 23 37 37 28 32  0]xS 
F2S53 Ji 
2227 2749 M (*set)[50 50 50  0]xS 
F1S53 Ji 
2427 2749 M (. It is a c.r.e. for )[21 20 28 23 21 23 33 20 37 21 37 21 23 21 37 21 21 27 42 28  0]xS 
F2S53 Ji 
2973 2749 M (set)[50 50  0]xS 
F1S53 Ji 
3123 2749 M ( or )[20 42 28  0]xS 
F2S53 Ji 
3234 2749 M (*set)[50 49 50  0]xS 
F1S53 Ji 
3434 2749 M ( to be null.)[21 23 42 21 42 37 20 42 42 23 23  0]xS 
F2S53 Ji 
1380 2849 M (int Bit_get\(T set, int n\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2949 M (returns bit )[27 37 24 41 28 42 32 21 42 23 23  0]xS 
F2S53 Ji 
1841 2949 M (n)S 
F1S53 Ji 
1891 2949 M (. It is a c.r.e. for )[20 21 28 23 21 23 33 20 37 21 37 21 23 21 37 21 21 27 42 28  0]xS 
F2S53 Ji 
2437 2949 M (n)S 
F4S53 Ji 
2487 2949 M (<)S 
F1S53 Ji 
2532 2949 M (0 or )[42 21 41 28  0]xS 
F2S53 Ji 
2685 2949 M (n)S 
F4S53 Ji 
2735 2949 M <B3>S 
F3S53 Ji 
2781 2949 M (N)S 
F1S53 Ji 
2836 2949 M ( where )[21 60 42 37 27 37  0]xS 
F3S53 Ji 
3081 2949 M (N)S 
F1S53 Ji 
3137 2949 M ( is the length of )[21 23 32 21 23 42 37 21 23 37 41 42 23 42 21 41 28  0]xS 
F2S53 Ji 
3676 2949 M (set)[50 50  0]xS 
F1S53 Ji 
3826 2949 M (.)S 
F2S53 Ji 
1380 3049 M (T Bit_inter\(T s, T t\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 3049 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3149 M (returns )[27 37 24 41 28 42 32  0]xS 
F2S53 Ji 
1732 3149 M (s)S 
F4S53 Ji 
1803 3149 M <C7>S 
F2S53 Ji 
1888 3149 M (t)S 
F1S53 Ji 
1938 3149 M (: the logical )[24 20 24 41 37 21 23 42 41 24 37 37 23  0]xS 
2352 3149 M (AND)[60 60  0]xS 
2532 3149 M ( of )[21 41 28  0]xS 
F2S53 Ji 
2643 3149 M (s)S 
F1S53 Ji 
2693 3149 M ( and )[21 37 41 42  0]xS 
F2S53 Ji 
2855 3149 M (t)S 
F1S53 Ji 
2905 3149 M (. See )[21 21 46 37 37  0]xS 
F2S53 Ji 
3088 3149 M (Bit_diff)[50 50 50 50 49 50 50  0]xS 
F1S53 Ji 
3488 3149 M ( for c.r.e.)[21 28 42 27 21 37 21 23 21 37  0]xS 
F2S53 Ji 
1380 3249 M (int Bit_length\(T set\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3349 M (returns the length of )[27 37 24 41 28 42 32 21 23 42 37 20 24 37 41 42 23 42 21 41 28  0]xS 
F2S53 Ji 
2174 3349 M (set)[50 50  0]xS 
F1S53 Ji 
2324 3349 M (.)S 
F2S53 Ji 
1380 3449 M (int Bit_leq\(T s, T t\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3549 M (returns 1 if )[27 37 24 41 28 42 32 21 42 20 24 27  0]xS 
F2S53 Ji 
1866 3549 M (s)S 
F4S53 Ji 
1937 3549 M <CD>S 
F2S53 Ji 
2017 3549 M (t)S 
F1S53 Ji 
2067 3549 M ( and 0 otherwise. See )[21 37 41 42 21 42 20 42 23 42 37 28 60 23 32 37 21 21 46 37 37  0]xS 
F2S53 Ji 
2798 3549 M (Bit_eq)[50 50 50 50 50  0]xS 
F1S53 Ji 
3098 3549 M ( for c.r.e.)[21 27 42 28 21 37 20 24 20 37  0]xS 
F2S53 Ji 
1380 3649 M (int Bit_lt\(T s, T t\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3749 M (returns 1 if )[27 37 24 41 28 42 32 21 42 20 24 27  0]xS 
F2S53 Ji 
1866 3749 M (s)S 
F4S53 Ji 
1937 3749 M <CC>S 
F2S53 Ji 
2017 3749 M (t)S 
F1S53 Ji 
2067 3749 M ( and 0 otherwise. See )[21 37 41 42 21 42 20 42 23 42 37 28 60 23 32 37 21 21 46 37 37  0]xS 
F2S53 Ji 
2798 3749 M (Bit_eq)[50 50 50 50 50  0]xS 
F1S53 Ji 
3098 3749 M ( for c.r.e.)[21 27 42 28 21 37 20 24 20 37  0]xS 
; ; LH
(%%[Page: 11]%%) = 
%%PageTrailer

%%Page: 12 12
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F2S53 Ji 
1380 1166 M (void Bit_map\(T set,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50  0]xS 
1580 1266 M (void apply\(int n, int bit, void *cl\), void *cl\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1366 M (calls )[37 37 23 23 32  0]xS 
F2S53 Ji 
1656 1366 M (apply\(n)[50 50 50 50 50 50  0]xS 
F1S53 Ji 
2006 1366 M (, )[21  0]xS 
F2S53 Ji 
2050 1366 M (bit)[50 50  0]xS 
F1S53 Ji 
2200 1366 M (, )[21  0]xS 
F2S53 Ji 
2245 1366 M (cl\))[50 50  0]xS 
F1S53 Ji 
2395 1366 M ( for each bit in )[24 28 41 28 24 37 37 37 41 24 42 23 23 23 24 41  0]xS 
F2S53 Ji 
2915 1366 M (set)[50 50  0]xS 
F1S53 Ji 
3065 1366 M ( from 0 to )[23 28 28 42 64 24 42 23 23 42  0]xS 
F3S53 Ji 
3428 1366 M (N)S 
F4S53 Ji 
3483 1366 M (-)S 
F1S53 Ji 
3529 1366 M (1, where )[41 21 24 60 42 37 27 37  0]xS 
F3S53 Ji 
3842 1366 M (N)S 
F1S53 Ji 
3898 1366 M ( is the length of )[24 23 33 23 23 42 37 24 23 37 41 42 23 42 23 42 28  0]xS 
F2S53 Ji 
4450 1366 M (set)[50 50  0]xS 
F1S53 Ji 
4600 1366 M (. Changes to)[21 24 55 42 37 41 42 37 33 23 23  0]xS 
F2S53 Ji 
1480 1466 M (set)[50 50  0]xS 
F1S53 Ji 
1630 1466 M ( by )[21 41 42  0]xS 
F2S53 Ji 
1755 1466 M (apply)[50 50 50 50  0]xS 
F1S53 Ji 
2005 1466 M ( affect subsequent values of )[21 37 27 27 37 37 23 21 33 41 42 32 37 42 42 37 41 23 21 42 37 23 42 37 32 21 41 28  0]xS 
F2S53 Ji 
2949 1466 M (bit)[50 50  0]xS 
F1S53 Ji 
3099 1466 M (.)S 
F2S53 Ji 
1380 1566 M (T Bit_minus\(T s, T t\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 1566 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1666 M (returns )[27 37 24 41 28 42 32  0]xS 
F2S53 Ji 
1732 1666 M (s)S 
F4S53 Ji 
1803 1666 M (-)S 
F2S53 Ji 
1869 1666 M (t)S 
F1S53 Ji 
1919 1666 M (: the logical )[23 21 23 42 37 21 23 42 41 23 37 37 24  0]xS 
2333 1666 M (AND)[60 61  0]xS 
2514 1666 M ( of )[21 41 28  0]xS 
F2S53 Ji 
2625 1666 M (s)S 
F1S53 Ji 
2675 1666 M ( and ~)[21 37 41 42 21  0]xS 
F2S53 Ji 
2882 1666 M (t)S 
F1S53 Ji 
2932 1666 M (. See )[21 20 47 37 37  0]xS 
F2S53 Ji 
3115 1666 M (Bit_diff)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3514 1666 M ( for c.r.e.)[21 28 41 28 21 37 21 23 21 37  0]xS 
F2S53 Ji 
1380 1766 M (T Bit_new\(int length\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 1766 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1866 M (creates and returns a new bit vector of )[37 27 37 37 24 37 32 21 37 41 42 21 28 37 23 41 28 42 32 21 37 21 41 37 61 20 42 23 23 21 42 37
37 23 42 27 21 42 28  0]xS 
F2S53 Ji 
2771 1866 M (length)[50 50 50 50 50  0]xS 
F1S53 Ji 
3070 1866 M ( 0s. It is a c.r.e. for )[21 42 32 21 21 27 24 20 24 32 21 37 21 37 20 24 20 37 21 21 28 41 28  0]xS 
F2S53 Ji 
3711 1866 M (length)[50 50 50 50 50  0]xS 
F4S53 Ji 
4011 1866 M (<)S 
F1S53 Ji 
4057 1866 M (0.)[41  0]xS 
F2S53 Ji 
1380 1966 M (void Bit_not\(T set, int lo, int hi\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50  0]xS 
F1S53 Ji 
1480 2066 M (complements bits )[37 41 65 42 23 37 65 37 41 24 32 21 41 24 23 32  0]xS 
F2S53 Ji 
2086 2066 M (lo)[50  0]xS 
F1S53 Ji 
2186 2066 M (..)[21  0]xS 
F2S53 Ji 
2228 2066 M (hi)[50  0]xS 
F1S53 Ji 
2328 2066 M ( in )[21 23 42  0]xS 
F2S53 Ji 
2434 2066 M (set)[50 50  0]xS 
F1S53 Ji 
2584 2066 M (. See )[21 21 46 37 37  0]xS 
F2S53 Ji 
2767 2066 M (Bit_clear)[50 50 50 50 49 50 50 50  0]xS 
F1S53 Ji 
3217 2066 M ( for c.r.e.)[21 28 42 27 21 37 21 23 21 37  0]xS 
F2S53 Ji 
1380 2166 M (int Bit_put\(T set, int n, int bit\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50  0]xS 
F1S53 Ji 
1480 2266 M (sets bit )[32 37 23 33 19 42 23 23  0]xS 
F2S53 Ji 
1731 2266 M (n)S 
F1S53 Ji 
1781 2266 M ( to )[19 23 42  0]xS 
F2S53 Ji 
1884 2266 M (bit)[50 50  0]xS 
F1S53 Ji 
2034 2266 M ( and returns the previous value of bit )[19 37 42 42 19 28 37 23 41 28 42 32 19 24 41 37 19 42 28 37 41 24 41 42 32 20 41 37 23 42 37 19
42 28 19 41 24 23  0]xS 
F2S53 Ji 
3266 2266 M (n)S 
F1S53 Ji 
3316 2266 M (. It is c.r.e. for )[21 19 28 23 19 23 33 19 37 21 23 21 37 20 20 27 42 28  0]xS 
F2S53 Ji 
3796 2266 M (bit)[50 50  0]xS 
F4S53 Ji 
3946 2266 M (<)S 
F1S53 Ji 
3992 2266 M (0 or )[41 20 41 28  0]xS 
F2S53 Ji 
4141 2266 M (bit)[50 50  0]xS 
F4S53 Ji 
4291 2266 M (>)S 
F1S53 Ji 
4337 2266 M (1, or for )[41 21 20 41 28 19 28 42 27  0]xS 
F2S53 Ji 
4624 2266 M (n)S 
F4S53 Ji 
4674 2266 M (<)S 
F1S53 Ji 
4719 2266 M (0 or )[42 19 42 27  0]xS 
F2S53 Ji 
4869 2266 M (n)S 
F4S53 Ji 
4919 2266 M <B3>S 
F3S53 Ji 
4965 2266 M (N)S 
F1S53 Ji 
1480 2366 M (where )[60 42 37 27 37  0]xS 
F3S53 Ji 
1704 2366 M (N)S 
F1S53 Ji 
1760 2366 M ( is the length of )[20 24 32 21 23 42 37 20 24 37 41 42 23 42 20 42 28  0]xS 
F2S53 Ji 
2299 2366 M (set)[50 50  0]xS 
F1S53 Ji 
2449 2366 M (.)S 
F2S53 Ji 
1380 2466 M (void Bit_set\(T set, int lo, int hi\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50  0]xS 
F1S53 Ji 
1480 2566 M (sets bits )[32 37 23 33 21 41 23 23 33  0]xS 
F2S53 Ji 
1767 2566 M (lo)[50  0]xS 
F1S53 Ji 
1867 2566 M (..)[20  0]xS 
F2S53 Ji 
1908 2566 M (hi)[50  0]xS 
F1S53 Ji 
2008 2566 M ( in )[21 23 42  0]xS 
F2S53 Ji 
2115 2566 M (set)[50 50  0]xS 
F1S53 Ji 
2265 2566 M (. See )[20 21 47 37 37  0]xS 
F2S53 Ji 
2448 2566 M (Bit_clear)[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2897 2566 M ( for c.r.e.)[21 28 41 28 21 37 21 23 21 37  0]xS 
F2S53 Ji 
1380 2666 M (T Bit_union\(T s, T t\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 2666 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2766 M (returns )[27 37 24 41 28 42 32  0]xS 
F2S53 Ji 
1732 2766 M (s)S 
F4S53 Ji 
1803 2766 M <C8>S 
F2S53 Ji 
1888 2766 M (t)S 
F1S53 Ji 
1938 2766 M (: the inclusive OR of )[24 20 24 41 37 21 23 42 37 23 42 32 23 42 37 21 60 55 21 42 28  0]xS 
F2S53 Ji 
2652 2766 M (s)S 
F1S53 Ji 
2702 2766 M ( and )[21 37 42 41  0]xS 
F2S53 Ji 
2864 2766 M (t)S 
F1S53 Ji 
2914 2766 M (. See )[21 21 46 37 37  0]xS 
F2S53 Ji 
3097 2766 M (Bit_diff)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3497 2766 M ( for c.r.e.)[21 27 42 28 20 37 21 23 21 37  0]xS 
; ; LH
(%%[Page: 12]%%) = 
%%PageTrailer

%%Page: 13 13
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (Chan)[84 65 58  0]xS 
F2S53 Ji 
4293 1188 M (T)S 
F0S53 Ji 
4343 1188 M ( is opaque )[21 23 32 21 42 46 42 46 46 37  0]xS 
F2S53 Ji 
4720 1188 M (Chan_T)[50 50 50 50 50  0]xS 
F1S53 Ji 
1380 1349 M (It is a c.r.e. to pass a null )[27 24 47 23 32 47 37 47 37 21 23 21 37 20 47 23 42 47 42 37 32 32 47 37 47 42 41 23 24  0]xS 
F2S53 Ji 
2433 1349 M (T)S 
F1S53 Ji 
2483 1349 M ( to any )[47 23 42 47 37 42 41  0]xS 
F2S53 Ji 
2808 1349 M (Chan)[50 50 50  0]xS 
F1S53 Ji 
3008 1349 M ( function, or to call any )[47 28 41 42 37 23 23 42 41 21 47 42 28 46 24 41 47 37 37 23 23 47 37 42 41  0]xS 
F2S53 Ji 
3963 1349 M (Chan)[50 50 50  0]xS 
F1S53 Ji 
4162 1349 M ( function before calling)[47 28 41 42 37 23 23 42 42 47 41 37 28 42 27 37 47 37 37 23 23 24 41  0]xS 
F2S53 Ji 
1380 1449 M (Thread_init)[50 50 50 50 50 50 50 50 50 49  0]xS 
F1S53 Ji 
1930 1449 M (.)S 
F2S53 Ji 
1380 1649 M (T Chan_new\(void\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50  0]xS 
4520 1649 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1749 M (create, initialize, and return a new channel.)[37 27 37 37 24 37 20 21 23 42 23 23 23 37 24 23 37 37 21 20 37 42 42 20 28 37 23 42 28 41 21 37
21 42 37 60 21 37 41 37 42 41 37 24  0]xS 
F2S53 Ji 
1380 1849 M (int Chan_receive\(T c, void *ptr, int size\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50  0]xS 
4320 1849 M (Thread_Alerted)[50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1949 M (waits for a corresponding )[60 37 23 23 33 19 28 42 28 19 37 20 37 42 28 27 37 33 41 42 42 41 24 41 42  0]xS 
F2S53 Ji 
2346 1949 M (Chan_send)[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2796 1949 M (, then copies up to )[20 20 23 42 37 42 20 37 41 42 23 37 32 20 42 42 19 24 41  0]xS 
F2S53 Ji 
3420 1949 M (size)[50 50 50  0]xS 
F1S53 Ji 
3620 1949 M ( bytes from the sender to )[20 42 41 23 37 33 20 27 28 42 65 19 24 41 37 20 33 37 41 42 37 28 19 24 41  0]xS 
F2S53 Ji 
4461 1949 M (ptr)[50 50  0]xS 
F1S53 Ji 
4608 1949 M (, and returns)[21 19 37 42 42 20 27 37 23 42 28 41  0]xS 
1480 2049 M (the number copied. It is a c.r.e. for )[23 42 37 20 42 42 64 42 37 28 21 37 41 42 23 37 42 21 20 28 23 21 23 33 20 37 21 37 21 23 21 37
21 21 27 42 28  0]xS 
F2S53 Ji 
2646 2049 M (ptr)[50 50  0]xS 
F4S53 Ji 
2796 2049 M (=)S 
F1S53 Ji 
2841 2049 M (null or )[42 42 23 23 21 41 28  0]xS 
F2S53 Ji 
3082 2049 M (size)[50 50 50  0]xS 
F4S53 Ji 
3282 2049 M (<)S 
F1S53 Ji 
3328 2049 M (0.)[42  0]xS 
F2S53 Ji 
1380 2149 M (int Chan_send\(T c, const void *ptr, int size)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50  0]xS 
4320 2149 M (Thread_Alerted)[50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2249 M (waits for a corresponding )[60 37 23 23 33 23 27 42 28 23 37 23 37 41 28 28 37 32 42 42 41 42 23 42 41  0]xS 
F2S53 Ji 
2359 2249 M (Chan_receive)[50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2958 2249 M (, then copies up to )[21 23 23 42 37 41 23 37 42 42 23 37 32 23 42 42 23 23 41  0]xS 
F2S53 Ji 
3599 2249 M (size)[50 50 50  0]xS 
F1S53 Ji 
3799 2249 M ( bytes from )[23 42 42 23 37 32 23 28 28 41 65  0]xS 
F2S53 Ji 
4205 2249 M (ptr)[50 50  0]xS 
F1S53 Ji 
4355 2249 M ( to the receiver, and)[23 23 42 23 23 42 37 23 28 37 37 37 23 41 37 25 21 23 37 41  0]xS 
1480 2349 M (returns the number copied. See )[27 37 24 41 28 42 32 21 23 42 37 20 42 42 65 41 37 28 21 37 41 42 23 37 42 21 20 47 37 37  0]xS 
F2S53 Ji 
2535 2349 M (Chan_receive)[50 50 49 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3134 2349 M ( for c.r.e.)[21 28 41 28 21 37 21 23 21 37  0]xS 
; ; LH
(%%[Page: 13]%%) = 
%%PageTrailer

%%Page: 14 14
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (Except)[78 58 52 51 65  0]xS 
F2S53 Ji 
4473 1188 M (T)S 
F0S53 Ji 
4523 1188 M ( is )[21 23 32  0]xS 
F2S53 Ji 
4620 1188 M (Except_T)[50 50 50 50 50 50 50  0]xS 
1380 1399 M (typedef struct T { char *reason; } T;)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50  0]xS 
F1S53 Ji 
1380 1599 M (The syntax of TRY statements is as follows; )[51 41 37 25 33 41 42 23 37 42 25 41 28 25 51 51 60 25 33 23 37 23 37 65 37 41 23 33 25 23 32 25
37 33 25 27 42 23 23 42 60 33 23  0]xS 
F3S53 Ji 
2908 1599 M (S)S 
F1S53 Ji 
2950 1599 M ( and )[25 37 42 42  0]xS 
F3S53 Ji 
3120 1599 M (e)S 
F1S53 Ji 
3157 1599 M ( denote statements and exceptions. The ELSE clause is)[25 41 37 42 42 23 37 25 32 23 37 23 37 65 37 42 23 32 25 37 42 42 25 37 41 37 37 42 23 23 42 41
33 21 25 51 41 37 25 51 51 46 51 25 37 23 37 42 32 37 25 23  0]xS 
1380 1699 M (optional.)[41 42 23 23 42 42 37 23  0]xS 
F2S53 Ji 
1380 1899 M (TRY)[50 50  0]xS 
F1S53 Ji 
1530 1899 M ( )S 
F3S53 Ji 
1551 1899 M (S)S 
F1S53 Ji 
1592 1899 M ( )S 
F2S53 Ji 
1613 1899 M (EXCEPT\(\))[50 50 50 50 50 50 148  0]xS 
F1S53 Ji 
2111 1899 M ( )S 
2251 1899 M ( )S 
F4S53 Ji 
2272 1899 M <BC>S 
F1S53 Ji 
2355 1899 M ( )S 
F2S53 Ji 
2376 1899 M (EXCEPT\(\))[50 50 49 50 50 50 149  0]xS 
F1S53 Ji 
2874 1899 M ( )S 
3019 1899 M ( )S 
F2S53 Ji 
3040 1899 M (ELSE)[50 50 50  0]xS 
F1S53 Ji 
3240 1899 M ( )S 
3391 1899 M ( )S 
F2S53 Ji 
3412 1899 M (END_TRY)[50 50 50 50 50 50  0]xS 
1380 2099 M (TRY)[50 50  0]xS 
F1S53 Ji 
1530 2099 M ( )S 
F3S53 Ji 
1551 2099 M (S)S 
F1S53 Ji 
1592 2099 M ( )S 
F2S53 Ji 
1613 2099 M (FINALLY)[50 50 50 50 50 50  0]xS 
F1S53 Ji 
1963 2099 M ( )S 
2108 2099 M ( )S 
F2S53 Ji 
2129 2099 M (END_TRY)[50 50 50 50 50 50  0]xS 
1380 2299 M (void Except_raise\(const T *e, const char *file, int line\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2399 M (raises exception )[27 37 24 32 37 32 27 37 42 37 37 42 23 23 42 41  0]xS 
F2S53 Ji 
2047 2399 M (*e)[50  0]xS 
F1S53 Ji 
2147 2399 M ( at source coordinate )[27 37 23 27 32 42 42 27 37 37 27 37 42 41 28 42 23 42 37 23 37  0]xS 
F2S53 Ji 
2884 2399 M (file)[50 50 50  0]xS 
F1S53 Ji 
3084 2399 M ( and )[26 37 42 42  0]xS 
F2S53 Ji 
3258 2399 M (line)[50 50 50  0]xS 
F1S53 Ji 
3458 2399 M (. It is a c.r.e. for )[20 27 28 23 27 23 33 27 37 26 37 21 23 21 37 21 27 28 41 28  0]xS 
F2S53 Ji 
4040 2399 M (e)S 
F4S53 Ji 
4090 2399 M (=)S 
F1S53 Ji 
4136 2399 M (null. Uncaught exceptions)[41 42 23 23 21 27 60 42 37 37 41 42 42 23 27 37 41 37 37 42 23 23 42 41  0]xS 
1480 2499 M (cause program termination.)[37 37 41 33 37 21 41 28 42 41 28 37 65 21 23 37 27 65 23 42 37 23 23 42 42  0]xS 
F2S53 Ji 
1380 2599 M (RAISE\(e\))[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2699 M (raises )[27 37 24 32 37 32  0]xS 
F2S53 Ji 
1690 2699 M (e)S 
F1S53 Ji 
1740 2699 M (.)S 
F2S53 Ji 
1380 2799 M (RERAISE)[50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2899 M (reraises the exception that caused execution of a handler.)[27 37 28 37 23 33 37 32 21 23 42 37 21 37 41 37 37 42 23 23 42 41 21 23 42 37 23 21 37 37 42 32
37 42 20 37 42 37 37 42 23 23 42 41 21 42 27 21 37 21 42 37 41 42 23 37 23  0]xS 
F2S53 Ji 
1380 2999 M (RETURN)[50 50 50 50 50  0]xS 
1380 3099 M (RETURN)[50 50 50 50 50  0]xS 
F1S53 Ji 
1680 3099 M ( )S 
F3S53 Ji 
1701 3099 M (expression)[37 37 42 32 37 33 32 23 42  0]xS 
F1S53 Ji 
1480 3199 M (return statement used within TRY statements. It is an )[27 37 24 41 28 42 20 33 23 37 23 37 65 37 42 23 21 41 33 37 41 21 60 23 23 42 23 42 21 51 51 60
21 32 23 37 23 37 65 37 42 23 32 21 21 28 23 21 23 32 21 37 42  0]xS 
3271 3199 M (u.r.e.)[42 21 23 21 37  0]xS 
3435 3199 M ( to use a C return statement in TRY statements.)[21 23 41 21 42 32 37 21 37 21 55 21 28 37 23 42 27 42 21 32 23 37 24 37 64 37 42 23 21 23 42 21
50 51 61 20 33 23 37 23 37 65 37 42 23 32  0]xS 
: N 1963 1828 M 2061 1828 I 2061 1961 I 1963 1961 I C 
eoclip F3S53 Ji 
1971 1899 M (e)S 
/F1S42 F1 [66 0 0 -66 0 0 ] mFS
F1S42 Ji 
2011 1927 M (1)S 
; : N 2132 1803 M 2251 1803 I 2251 1954 I 2132 1954 I C 
eoclip F3S53 Ji 
2163 1899 M (S)S 
F1S42 Ji 
2207 1927 M (1)S 
; : N 2726 1828 M 2824 1828 I 2824 1961 I 2726 1961 I C 
eoclip F3S53 Ji 
2734 1899 M (e)S 
/F3S42 F3 [66 0 0 -66 0 0 ] mFS
F3S42 Ji 
2774 1927 M (n)S 
; : N 2895 1803 M 3019 1803 I 3019 1954 I 2895 1954 I C 
eoclip F3S53 Ji 
2925 1899 M (S)S 
F3S42 Ji 
2970 1927 M (n)S 
; : N 3261 1803 M 3391 1803 I 3391 1958 I 3261 1958 I C 
eoclip F3S53 Ji 
3283 1899 M (S)S 
F1S42 Ji 
3327 1927 M (0)S 
; : N 1984 2003 M 2108 2003 I 2108 2148 I 1984 2148 I C 
eoclip F3S53 Ji 
2014 2099 M (S)S 
F1S42 Ji 
2059 2127 M (1)S 
; ; ; LH
(%%[Page: 14]%%) = 
%%PageTrailer

%%Page: 15 15
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (Fmt)[71 97  0]xS 
F2S53 Ji 
4623 1188 M (T)S 
F0S53 Ji 
4673 1188 M ( is )[21 23 32  0]xS 
F2S53 Ji 
4770 1188 M (Fmt_T)[50 50 50 50  0]xS 
1380 1399 M (typedef void \(*T\)\(int code,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
1680 1499 M (va_list *app, int put\(int c, void *cl\), void *cl,)[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
1680 1599 M (unsigned char flags[256], int width, int precision\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 49  0]xS 
F1S53 Ji 
1380 1799 M (defines the type of a conversion function, which is called by the )
[41 37 28 23 42 37 32 24 23 42 37 23 24 41 42 37 23 42 28 24 37 23 37 42 41 42 37 28 32 23 42 42
23 28 42 41 37 23 24 41 42 21 23 61 41 23 37 42 24 23 32 24 37 37 23 23 37 42 23 42 42 23 23 42
37  0]xS 
F2S53 Ji 
3563 1799 M (Fmt)[50 50  0]xS 
F1S53 Ji 
3713 1799 M ( functions when the associated conver-)[23 28 42 41 37 24 23 41 42 32 24 60 42 37 41 24 23 42 37 24 37 32 32 42 37 23 37 23 37 42 24 37
41 42 41 37 28  0]xS 
1380 1899 M (sion specifier appears in a format string. Here and below, )[32 23 42 42 20 32 42 37 37 23 27 24 37 27 20 37 42 42 37 37 27 33 20 23 41 20 37 20 28 42 27 65
37 23 20 33 23 28 23 41 42 21 20 60 37 28 37 20 37 41 42 20 41 37 24 41 55 21  0]xS 
F2S53 Ji 
3295 1899 M (put\(c,)[50 50 50 50 50  0]xS 
3616 1899 M (cl\))[50 50  0]xS 
F1S53 Ji 
3766 1899 M ( is called to emit each formatted char-)[20 23 33 20 37 37 23 23 37 42 20 23 41 20 37 65 23 24 19 37 37 37 42 20 28 41 28 65 37 23 23 37
42 20 37 41 37 28  0]xS 
1380 1999 M (acter )[37 37 23 37 28  0]xS 
F2S53 Ji 
1568 1999 M (c)S 
F1S53 Ji 
1618 1999 M (. Table14.1 \(page220\) summarizes the initial set of conversion specifiers. It is a c.r.e to pass a null)
[21 27 45 37 41 24 57 42 42 20 42 27 28 41 37 42 58 41 42 42 27 27 32 42 65 65 37 27 23 37 37 33
27 23 41 37 27 23 42 23 23 23 37 23 27 32 37 24 26 42 28 26 37 42 42 41 37 28 32 24 41 42 26 33
42 37 37 23 27 24 37 27 33 20 27 28 23 27 23 32 27 37 27 37 20 24 20 37 27 23 42 27 41 37 33 32
27 37 26 42 42 23  0]xS 
F2S53 Ji 
1380 2099 M (put)[50 50  0]xS 
F1S53 Ji 
1530 2099 M (, )[21  0]xS 
F2S53 Ji 
1576 2099 M (buf)[50 49  0]xS 
F1S53 Ji 
1726 2099 M (, )[21  0]xS 
F2S53 Ji 
1771 2099 M (fmt)[50 50  0]xS 
F1S53 Ji 
1921 2099 M (, or )[21 25 42 27  0]xS 
F2S53 Ji 
2062 2099 M (ap)[50  0]xS 
F1S53 Ji 
2162 2099 M ( to any )[25 24 41 25 37 42 42  0]xS 
F2S53 Ji 
2422 2099 M (Fmt)[50 50  0]xS 
F1S53 Ji 
2572 2099 M ( function, or for a format string to use a conversion specifier that has no)
[25 27 42 42 37 23 23 41 42 21 25 42 27 25 28 42 28 25 37 25 27 42 28 64 37 24 25 32 23 28 23 42
41 25 24 41 25 42 32 37 25 37 25 37 42 42 41 37 28 32 23 42 42 25 32 42 37 37 23 28 23 37 28 25
23 41 37 24 25 41 37 33 25 41  0]xS 
1380 2199 M (associated conversion function.)[37 32 33 41 37 23 37 23 37 42 21 37 42 41 42 37 28 32 23 42 41 21 28 42 41 37 23 24 41 42  0]xS 
F2S53 Ji 
1380 2399 M (char *Fmt_flags = )[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50  0]xS 
2279 2399 M (")S 
2329 2399 M (-+0)[50 100  0]xS 
2529 2399 M (")S 
F1S53 Ji 
1480 2499 M (points to the flag characters that can appear in conversion specifiers.)
[41 42 23 42 23 32 21 23 42 21 23 42 37 20 28 23 37 42 21 37 41 37 28 37 37 23 37 28 32 21 23 42
37 23 21 37 37 42 20 37 42 42 37 37 27 21 23 42 21 37 41 42 42 37 27 33 23 42 41 21 33 41 37 37
23 28 23 37 28 32  0]xS 
F2S53 Ji 
1380 2599 M (void Fmt_fmt\(int put\(int c, void *cl\), void *cl,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
1580 2699 M (const char *fmt, ...\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2799 M (formats and emits the \223\205\224 arguments according to the format string )
[27 42 28 65 37 23 32 21 37 42 41 21 37 65 23 23 33 20 24 41 37 21 37 83 37 21 37 26 42 42 64 37
42 23 33 20 37 37 37 42 28 41 24 41 42 21 23 41 21 23 42 37 21 28 41 28 65 37 23 21 32 23 28 23
42 42  0]xS 
F2S53 Ji 
3776 2799 M (fmt)[50 50  0]xS 
F1S53 Ji 
3925 2799 M (.)S 
F2S53 Ji 
1380 2899 M (void Fmt_fprint\(FILE *stream, const char *fmt, ...\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 49  0]xS 
1380 2999 M (void Fmt_print\(const char *fmt, ...\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50  0]xS 
F1S53 Ji 
1480 3099 M (format and emit the \223\205\224 arguments according to )[27 42 28 65 37 23 26 37 42 41 26 37 65 23 24 26 23 42 36 27 37 83 37 26 37 26 42 42 64 37 42 23
33 26 37 37 37 41 28 42 23 42 41 26 24 41  0]xS 
F2S53 Ji 
3178 3099 M (fmt)[50 50  0]xS 
F1S53 Ji 
3327 3099 M (; )[23  0]xS 
F2S53 Ji 
3377 3099 M (Fmt_fprint)[50 50 50 50 49 50 50 50 50  0]xS 
F1S53 Ji 
3877 3099 M ( writes to )[27 60 27 24 23 37 32 26 23 42  0]xS 
F2S53 Ji 
4223 3099 M (stream)[50 50 50 50 50  0]xS 
F1S53 Ji 
4523 3099 M (, )[21  0]xS 
F2S53 Ji 
4570 3099 M (Fmt_print)[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3199 M (writes to )[60 28 23 23 37 32 21 23 42  0]xS 
F2S53 Ji 
1790 3199 M (stdout)[50 50 50 50 50  0]xS 
F1S53 Ji 
2090 3199 M (.)S 
; ; LH
(%%[Page: 15]%%) = 
%%PageTrailer

%%Page: 16 16
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F2S53 Ji 
1380 1166 M (void Fmt_putd\(const char *str, int len,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50  0]xS 
1580 1266 M (int put\(int c, void *cl\), void *cl,)[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50  0]xS 
1580 1366 M (unsigned char flags[256], int width, int precision\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 49  0]xS 
1380 1466 M (void Fmt_puts\(const char *str, int len,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50  0]xS 
1580 1566 M (int put\(int c, void *cl\), void *cl,)[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50  0]xS 
1580 1666 M (unsigned char flags[256], int width, int precision\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 49  0]xS 
F1S53 Ji 
1480 1766 M (format and emit the converted numeric \()[27 42 28 65 37 23 22 37 42 42 22 37 65 23 23 23 23 42 37 22 37 42 42 41 37 28 23 37 42 22 42 42
64 37 28 23 37 23  0]xS 
F2S53 Ji 
2837 1766 M (Fmt_putd)[50 50 50 49 50 50 50  0]xS 
F1S53 Ji 
3237 1766 M (\) or string \()[28 23 41 28 23 32 23 28 23 42 41 23  0]xS 
F2S53 Ji 
3619 1766 M (Fmt_puts)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4019 1766 M (\) in )[27 23 23 42  0]xS 
F2S53 Ji 
4156 1766 M (str[0)[50 50 50 50  0]xS 
F1S53 Ji 
4406 1766 M (..)[21  0]xS 
F2S53 Ji 
4448 1766 M (len-1])[50 50 50 50 50  0]xS 
F1S53 Ji 
4748 1766 M ( accord-)[22 37 37 37 42 28 41  0]xS 
1480 1866 M (ing to )[23 42 41 20 23 42  0]xS 
F2S53 Ji 
1691 1866 M (Fmt)[50 50  0]xS 
F1S53 Ji 
1841 1866 M (\222s defaults \(see Table 14.1, page220\) and the values of )[23 33 20 41 37 28 37 42 23 23 32 21 27 33 37 37 20 45 37 41 24 37 20 41 42 21 41 21 20 42 37 42
57 42 42 41 28 20 37 42 41 21 23 41 37 20 42 37 23 42 37 32 20 42 28  0]xS 
F2S53 Ji 
3681 1866 M (flags)[50 50 50 50  0]xS 
F1S53 Ji 
3931 1866 M (, )[20  0]xS 
F2S53 Ji 
3972 1866 M (width)[50 49 50 50  0]xS 
F1S53 Ji 
4222 1866 M (, and )[21 20 37 42 42  0]xS 
F2S53 Ji 
4403 1866 M (precision)[50 50 50 50 50 50 50 49  0]xS 
F1S53 Ji 
4853 1866 M (. It is)[21 20 28 23 20 23  0]xS 
1480 1966 M (a c.r.e for )[37 21 37 20 24 20 37 21 28 42 27  0]xS 
F2S53 Ji 
1815 1966 M (str)[50 50  0]xS 
F4S53 Ji 
1965 1966 M (=)S 
F1S53 Ji 
2011 1966 M (null, )[41 42 23 23 21  0]xS 
F2S53 Ji 
2182 1966 M (len)[50 50  0]xS 
F4S53 Ji 
2332 1966 M (<)S 
F1S53 Ji 
2378 1966 M (0, or )[41 21 21 42 27  0]xS 
F2S53 Ji 
2551 1966 M (flags)[50 50 50 50  0]xS 
F4S53 Ji 
2801 1966 M (=)S 
F1S53 Ji 
2847 1966 M (null.)[41 42 23 23  0]xS 
F2S53 Ji 
1380 2066 M (T Fmt_register\(int code, T cvt\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2166 M (associates )[37 32 33 41 37 23 37 23 37 33  0]xS 
F2S53 Ji 
1835 2166 M (cvt)[50 50  0]xS 
F1S53 Ji 
1985 2166 M ( with the format character )[22 60 23 23 42 22 23 42 37 22 27 42 28 65 37 23 22 37 41 37 28 37 37 23 37 28  0]xS 
F2S53 Ji 
2872 2166 M (code)[50 50 50  0]xS 
F1S53 Ji 
3072 2166 M (, and returns the previous conversion function. It is a c.r.e.)
[21 22 37 41 42 22 28 37 23 41 28 42 32 22 23 42 37 22 42 27 37 42 23 42 42 32 22 37 42 41 42 37
28 32 23 42 41 22 28 42 41 37 24 23 41 42 21 22 28 23 22 23 32 22 37 22 37 21 23 21 37  0]xS 
1480 2266 M (for )[27 42 28  0]xS 
F2S53 Ji 
1598 2266 M (code)[50 50 50  0]xS 
F4S53 Ji 
1798 2266 M (<)S 
F1S53 Ji 
1843 2266 M (0 or )[42 21 41 28  0]xS 
F2S53 Ji 
1996 2266 M (code)[50 50 50  0]xS 
F4S53 Ji 
2196 2266 M (>)S 
F1S53 Ji 
2242 2266 M (255.)[41 42 42  0]xS 
F2S53 Ji 
1380 2366 M (int Fmt_sfmt\(char *buf, int size,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
 0]xS 
4420 2366 M (Fmt_Overflow)[50 50 50 50 50 50 50 50 50 50 50  0]xS 
1580 2466 M (const char *fmt, ...\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2566 M (formats the \223\205\224 arguments into )[27 42 28 65 37 23 32 36 23 42 37 35 37 84 37 35 37 26 42 42 65 37 41 23 33 35 24 41 23 42  0]xS 
F2S53 Ji 
2647 2566 M (buf[1)[50 50 50 50  0]xS 
F1S53 Ji 
2897 2566 M (..)[20  0]xS 
F2S53 Ji 
2938 2566 M (size-1])[50 50 50 50 50 50  0]xS 
F1S53 Ji 
3288 2566 M ( according to )[36 37 37 37 41 28 42 23 42 41 36 23 42  0]xS 
F2S53 Ji 
3788 2566 M (fmt)[50 50  0]xS 
F1S53 Ji 
3938 2566 M (, appends a null character, and)[21 36 37 41 42 37 42 41 33 35 37 36 42 41 23 24 35 37 42 37 28 37 37 23 37 24 21 36 37 41  0]xS 
1480 2666 M (returns the length of )[27 37 24 41 28 42 32 20 23 42 37 19 23 37 42 42 23 42 19 42 28  0]xS 
F2S53 Ji 
2170 2666 M (buf)[50 50  0]xS 
F1S53 Ji 
2319 2666 M (. It is a c.r.e. for )[21 20 28 23 20 23 32 20 37 20 36 21 23 21 37 21 20 28 41 28  0]xS 
F2S53 Ji 
2859 2666 M (size)[50 50 50  0]xS 
F4S53 Ji 
3059 2666 M <A3>S 
F1S53 Ji 
3104 2666 M (0. Raises )[42 21 20 55 37 23 33 37 32  0]xS 
F2S53 Ji 
3424 2666 M (Fmt_Overflow)[50 50 50 50 50 50 50 50 50 49 50  0]xS 
F1S53 Ji 
4024 2666 M ( if more than )[20 23 28 20 65 41 28 37 20 23 41 37 42  0]xS 
F2S53 Ji 
4468 2666 M (size)[50 50 50  0]xS 
F4S53 Ji 
4668 2666 M (-)S 
F1S53 Ji 
4714 2666 M (1 charac-)[42 20 37 41 37 28 37 37  0]xS 
1480 2766 M (ters are emitted.)[23 37 28 32 21 37 28 37 20 37 65 23 23 24 37 41  0]xS 
F2S53 Ji 
1380 2866 M (char *Fmt_string\(const char *fmt, ...\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2966 M (formats the \223\205\224 arguments into a null-terminated string according to )
[27 42 28 65 37 23 32 21 23 42 37 21 37 83 37 21 37 26 42 41 65 37 42 23 32 21 23 42 23 42 20 37
21 42 42 23 23 28 23 37 27 65 23 42 37 23 37 42 21 32 23 28 23 42 41 21 37 37 37 42 28 41 23 42
42 20 24 41  0]xS 
F2S53 Ji 
3810 2966 M (fmt)[50 50  0]xS 
F1S53 Ji 
3960 2966 M ( and returns that string.)[21 37 41 42 21 28 37 23 41 28 42 32 21 23 42 37 23 21 32 23 28 23 42 42  0]xS 
F2S53 Ji 
1380 3066 M (void Fmt_vfmt\(int put\(int c, void *cl\), void *cl,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
1580 3166 M (const char *fmt, va_list ap\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3266 M (See )[46 37 37  0]xS 
F2S53 Ji 
1621 3266 M (Fmt_fmt)[50 50 50 50 50 50  0]xS 
F1S53 Ji 
1971 3266 M (; takes arguments from the list )[23 21 23 37 41 37 33 21 37 26 42 41 65 37 42 23 32 21 28 27 42 65 21 23 41 37 21 23 24 32 23  0]xS 
F2S53 Ji 
3001 3266 M (ap)[50  0]xS 
F1S53 Ji 
3101 3266 M (.)S 
F2S53 Ji 
1380 3366 M (int Fmt_vsfmt\(char *buf, int size,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50  0]xS 
4420 3366 M (Fmt_Overflow)[50 50 50 50 50 50 50 50 50 50 50  0]xS 
1580 3466 M (const char *fmt, va_list ap\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3566 M (See )[46 37 37  0]xS 
F2S53 Ji 
1621 3566 M (Fmt_sfmt)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2021 3566 M (; takes arguments from the list )[23 21 23 37 41 37 33 21 37 26 41 42 65 37 42 23 32 21 28 27 42 65 21 23 41 37 21 23 24 32 23  0]xS 
F2S53 Ji 
3051 3566 M (ap)[50  0]xS 
F1S53 Ji 
3151 3566 M (.)S 
; ; LH
(%%[Page: 16]%%) = 
%%PageTrailer

%%Page: 17 17
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F2S53 Ji 
1380 1166 M (char *Fmt_vstring\(const char *fmt, va_list ap\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1266 M (See )[46 37 37  0]xS 
F2S53 Ji 
1621 1266 M (Fmt_string)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2121 1266 M (; takes arguments from the list ap.)[23 21 23 37 41 37 33 21 37 26 41 42 65 37 41 24 32 21 28 27 42 65 21 23 41 37 21 23 24 32 23 21
37 42  0]xS 
; ; LH
(%%[Page: 17]%%) = 
%%PageTrailer

%%Page: 18 18
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (List)[78 32 45  0]xS 
F2S53 Ji 
4573 1188 M (T)S 
F0S53 Ji 
4623 1188 M ( is )[21 23 32  0]xS 
F2S53 Ji 
4720 1188 M (List_T)[50 50 50 50 50  0]xS 
1380 1399 M (typedef struct T *T;)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50  0]xS 
1380 1499 M (struct T { void *first; T rest; };)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50  0]xS 
F1S53 Ji 
1380 1699 M (All )[60 23 23  0]xS 
F2S53 Ji 
1507 1699 M (List)[50 50 50  0]xS 
F1S53 Ji 
1707 1699 M ( functions accept a null )[21 27 42 42 37 23 23 42 41 33 21 37 37 37 37 41 23 21 37 21 42 41 23 24  0]xS 
F2S53 Ji 
2501 1699 M (T)S 
F1S53 Ji 
2550 1699 M ( for any )[21 28 42 27 21 37 42 41  0]xS 
F2S53 Ji 
2830 1699 M (list)[50 50 50  0]xS 
F1S53 Ji 
3030 1699 M ( argument and interpret it as the empty list.)[21 37 26 42 41 65 37 42 23 21 37 41 42 21 23 42 23 37 28 41 28 37 23 21 23 23 21 37 32 21 23 42
37 21 37 65 41 23 42 21 23 23 33 23  0]xS 
F2S53 Ji 
1380 1899 M (T List_append\(T list, T tail\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1999 M (appends )[37 41 42 37 42 41 33  0]xS 
F2S53 Ji 
1774 1999 M (tail)[49 50 50  0]xS 
F1S53 Ji 
1974 1999 M ( to )[21 23 42  0]xS 
F2S53 Ji 
2080 1999 M (list)[50 50 50  0]xS 
F1S53 Ji 
2280 1999 M ( and returns )[21 37 41 42 21 27 37 24 41 28 42 32  0]xS 
F2S53 Ji 
2694 1999 M (list)[50 50 50  0]xS 
F1S53 Ji 
2894 1999 M (. If )[21 20 28 28  0]xS 
F2S53 Ji 
3012 1999 M (list)[50 50 50  0]xS 
F4S53 Ji 
3212 1999 M (=)S 
F1S53 Ji 
3257 1999 M (null, )[42 42 23 23 21  0]xS 
F2S53 Ji 
3429 1999 M (List_append)[49 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3978 1999 M ( returns )[21 28 37 23 42 27 42 32  0]xS 
F2S53 Ji 
4251 1999 M (tail)[50 50 50  0]xS 
F1S53 Ji 
4451 1999 M (.)S 
F2S53 Ji 
1380 2099 M (T List_copy\(T list\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50  0]xS 
4520 2099 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2199 M (creates and returns a top-level copy of )[37 27 37 37 24 37 32 21 37 41 42 21 28 37 23 41 28 42 32 21 37 21 23 42 41 28 23 37 42 37 23 21
37 41 42 42 20 42 28  0]xS 
F2S53 Ji 
2773 2199 M (list)[50 50 50  0]xS 
F1S53 Ji 
2973 2199 M (.)S 
F2S53 Ji 
1380 2299 M (void List_free\(T *list\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2399 M (deallocates and clears )[41 37 37 24 23 41 37 37 23 37 33 21 37 41 42 21 37 23 37 37 28 32  0]xS 
F2S53 Ji 
2227 2399 M (*list)[50 50 50 50  0]xS 
F1S53 Ji 
2477 2399 M (. It is a c.r.e. for )[20 21 28 23 21 23 33 20 37 21 37 21 23 21 37 21 21 27 42 28  0]xS 
F2S53 Ji 
3023 2399 M (list)[50 50 49  0]xS 
F4S53 Ji 
3223 2399 M (=)S 
F1S53 Ji 
3268 2399 M (null.)[42 41 24 23  0]xS 
F2S53 Ji 
1380 2499 M (int List_length\(T list\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2599 M (returns the number of elements in )[27 37 24 41 28 42 32 21 23 42 37 20 42 42 65 41 37 28 21 41 28 21 37 23 37 65 37 42 23 32 21 23
42  0]xS 
F2S53 Ji 
2623 2599 M (list)[49 50 50  0]xS 
F1S53 Ji 
2823 2599 M (.)S 
F2S53 Ji 
1380 2699 M (T List_list\(void *x, ...\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 2699 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2799 M (creates and returns a list whose elements are the \223\205\224 arguments up to the first null pointer.)
[37 27 37 37 24 37 32 21 37 41 42 21 28 37 23 41 28 42 32 21 37 21 23 23 33 23 21 60 41 42 32 37
21 37 23 37 65 37 42 23 32 21 37 28 37 21 23 41 37 21 37 83 37 21 37 26 42 42 65 37 41 23 33 21
41 42 21 23 41 21 23 42 37 21 28 23 28 32 23 21 42 41 23 24 20 42 42 23 41 24 37 23  0]xS 
F2S53 Ji 
1380 2899 M (void List_map\(T list,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50  0]xS 
1580 2999 M (void apply\(void **x, void *cl\), void *cl\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3099 M (calls )[37 37 23 23 32  0]xS 
F2S53 Ji 
1653 3099 M (apply\(&p->first)[50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2403 3099 M (, )[21  0]xS 
F2S53 Ji 
2445 3099 M (cl\))[49 50  0]xS 
F1S53 Ji 
2595 3099 M ( for each element )[21 28 42 27 21 37 37 37 42 21 37 23 37 65 37 41 23  0]xS 
F2S53 Ji 
3191 3099 M (p)S 
F1S53 Ji 
3241 3099 M ( in )[21 23 42  0]xS 
F2S53 Ji 
3348 3099 M (list)[50 50 49  0]xS 
F1S53 Ji 
3548 3099 M (. It is an )[21 21 28 23 21 23 32 21 37 42  0]xS 
3837 3099 M (u.r.e.)[41 21 23 21 37  0]xS 
4001 3099 M ( for )[21 27 42 28  0]xS 
F2S53 Ji 
4140 3099 M (apply)[50 50 50 50  0]xS 
F1S53 Ji 
4390 3099 M ( to change )[20 24 41 21 37 42 37 41 42 37  0]xS 
F2S53 Ji 
4753 3099 M (list)[50 50 50  0]xS 
F1S53 Ji 
4953 3099 M (.)S 
F2S53 Ji 
1380 3199 M (T List_pop\(T list, void **x\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3299 M (assigns )[37 32 33 23 41 42 32  0]xS 
F2S53 Ji 
1768 3299 M (list->first)[50 50 50 50 49 50 50 50 50 50  0]xS 
F1S53 Ji 
2318 3299 M ( to )[48 23 41  0]xS 
F2S53 Ji 
2477 3299 M (*x)[50  0]xS 
F1S53 Ji 
2577 3299 M (, if )[20 48 23 28  0]xS 
F2S53 Ji 
2743 3299 M (x)S 
F1S53 Ji 
2793 3299 M ( is nonnull, deallocates )[47 23 33 47 41 42 42 41 42 23 23 21 47 42 37 37 23 23 42 37 37 23 37 32  0]xS 
F2S53 Ji 
3683 3299 M (list)[50 50 50  0]xS 
F1S53 Ji 
3883 3299 M (, and returns )[20 48 37 41 42 47 28 37 23 42 27 42 32  0]xS 
F2S53 Ji 
4397 3299 M (list->rest)[50 50 50 50 49 50 50 50 50  0]xS 
F1S53 Ji 
4897 3299 M (. If)[21 47 28  0]xS 
F2S53 Ji 
1480 3399 M (list)[50 50 50  0]xS 
F4S53 Ji 
1680 3399 M (=)S 
F1S53 Ji 
1726 3399 M (null, )[42 42 23 23 21  0]xS 
F2S53 Ji 
1897 3399 M (List_pop)[50 50 50 50 50 49 50  0]xS 
F1S53 Ji 
2297 3399 M ( returns null and does not change )[21 28 37 23 42 28 41 33 20 42 42 23 23 21 37 41 42 21 42 41 37 33 20 42 42 23 21 37 41 37 42 42
37  0]xS 
F2S53 Ji 
3419 3399 M (*x)[50  0]xS 
F1S53 Ji 
3518 3399 M (.)S 
F2S53 Ji 
1380 3499 M (T List_push\(T list, void *x\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 3499 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3599 M (adds a new element holding )[37 41 42 32 21 37 21 42 37 60 21 37 23 37 65 37 41 23 21 42 41 24 41 23 42 42  0]xS 
F2S53 Ji 
2431 3599 M (x)S 
F1S53 Ji 
2481 3599 M ( onto the front of )[21 42 42 23 41 21 23 42 37 21 28 27 42 42 23 21 41 28  0]xS 
F2S53 Ji 
3066 3599 M (list)[50 50 50  0]xS 
F1S53 Ji 
3266 3599 M ( and returns the new list.)[21 36 42 42 21 27 37 23 42 28 41 33 21 23 42 37 20 42 37 60 21 23 23 33 23  0]xS 
; ; LH
(%%[Page: 18]%%) = 
%%PageTrailer

%%Page: 19 19
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F2S53 Ji 
1380 1166 M (T List_reverse\(T list\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1266 M (reverses the elements in )[27 37 42 37 28 32 37 33 20 24 41 37 21 37 23 37 65 37 42 23 32 21 23 42  0]xS 
F2S53 Ji 
2299 1266 M (list)[50 50 50  0]xS 
F1S53 Ji 
2499 1266 M ( )S 
2519 1266 M (inplace)[23 42 42 23 37 37  0]xS 
2760 1266 M ( and returns the reversed list.)[21 37 41 42 21 28 36 24 41 28 42 32 21 23 42 37 21 27 37 42 37 28 32 37 42 20 24 23 32 23  0]xS 
F2S53 Ji 
1380 1366 M (void **List_toArray\(T list, void *end\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50  0]xS 
4520 1366 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1466 M (creates an )[37 27 37 37 24 37 32 21 37 42  0]xS 
F3S53 Ji 
1832 1466 M (N)S 
F4S53 Ji 
1888 1466 M (+1)[46  0]xS 
F1S53 Ji 
1975 1466 M (-element array of the )[27 37 24 37 64 37 42 23 21 37 28 28 37 41 21 42 28 21 23 42 37  0]xS 
F3S53 Ji 
2693 1466 M (N)S 
F1S53 Ji 
2748 1466 M ( elements in )[21 37 24 37 64 37 42 23 32 22 23 41  0]xS 
F2S53 Ji 
3173 1466 M (list)[50 50 50  0]xS 
F1S53 Ji 
3373 1466 M ( and returns a pointer to its first element. The )[21 37 42 42 21 28 37 23 41 28 42 32 21 37 21 42 42 23 41 24 37 27 21 24 41 21 23 24 32 21 28 23
28 32 23 21 37 23 37 65 37 42 23 21 21 51 41 37  0]xS 
F3S53 Ji 
4900 1466 M (N)S 
F1S53 Ji 
4955 1466 M (th)[23  0]xS 
1480 1566 M (element in the array is )[37 23 37 65 37 41 23 21 23 42 21 23 42 37 21 36 28 28 37 42 20 24 32  0]xS 
F2S53 Ji 
2241 1566 M (end)[50 50  0]xS 
F1S53 Ji 
2391 1566 M (.)S 
; ; LH
(%%[Page: 19]%%) = 
%%PageTrailer

%%Page: 20 20
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (Mem)[110 52  0]xS 
F1S53 Ji 
1380 1349 M (It is c.r.e. to pass )[27 24 20 24 32 21 37 21 23 21 37 20 21 23 42 21 42 37 32 32  0]xS 
F2S53 Ji 
1958 1349 M (nbytes)[50 50 50 50 50  0]xS 
F4S53 Ji 
2258 1349 M <A3>S 
F1S53 Ji 
2304 1349 M (0 to any )[41 21 23 42 21 37 41 42  0]xS 
F2S53 Ji 
2593 1349 M (Mem)[50 50  0]xS 
F1S53 Ji 
2743 1349 M ( function or macro.)[21 27 42 42 37 23 23 42 41 21 42 27 21 65 37 37 28 41  0]xS 
F2S53 Ji 
1380 1549 M (ALLOC\(nbytes\))[50 50 50 50 50 50 50 50 50 49 50 50  0]xS 
4520 1549 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1649 M (allocates )[37 23 23 42 37 37 23 37 32  0]xS 
F2S53 Ji 
1792 1649 M (nbytes)[50 50 50 50 50  0]xS 
F1S53 Ji 
2092 1649 M ( bytes and returns a pointer to the first byte. The bytes are uninitialized.)
[21 41 42 23 37 33 20 37 42 42 20 28 37 23 42 28 41 33 21 37 20 42 42 23 41 24 37 27 21 23 42 21
23 42 37 20 28 23 28 32 24 20 42 42 23 37 21 20 51 42 37 21 41 42 23 37 33 20 37 28 37 21 42 41
23 42 23 23 24 36 24 23 37 37 41  0]xS 
F2S53 Ji 
1380 1749 M (CALLOC\(count, nbytes\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 1749 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1849 M (allocates space for an array of )[37 23 23 42 37 37 23 37 32 26 33 41 37 37 37 26 28 42 27 26 37 42 26 37 28 27 37 42 26 42 27  0]xS 
F2S53 Ji 
2529 1849 M (count)[50 50 50 50  0]xS 
F1S53 Ji 
2778 1849 M ( elements, each occupying )[26 37 23 37 65 37 42 23 32 21 26 37 37 37 42 26 42 36 37 42 42 41 24 41 42  0]xS 
F2S53 Ji 
3699 1849 M (nbytes)[50 50 50 50 50  0]xS 
F1S53 Ji 
3999 1849 M ( bytes and returns a pointer to)[26 41 42 23 37 33 26 37 41 42 26 28 37 23 41 28 42 32 26 37 26 42 41 24 41 23 37 28 26 23  0]xS 
1480 1949 M (the first element. It is a c.r.e. for )[23 42 37 20 28 23 28 32 24 20 37 24 36 65 37 42 23 21 21 27 24 20 24 32 21 37 21 37 20 24 20 37
21 21 28 41 28  0]xS 
F2S53 Ji 
2567 1949 M (count)[50 50 50 50  0]xS 
F4S53 Ji 
2817 1949 M <A3>S 
F1S53 Ji 
2863 1949 M (0. The elements are uninitialized.)[41 21 21 51 41 37 21 37 23 37 65 37 42 23 32 21 37 28 37 21 41 42 23 42 23 23 23 37 23 23 37 37
42  0]xS 
F2S53 Ji 
1380 2049 M (FREE\(ptr\))[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2149 M (See )[46 37 37  0]xS 
F2S53 Ji 
1621 2149 M (Mem_free)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2021 2149 M (.)S 
F2S53 Ji 
1380 2249 M (void *Mem_alloc\(int nbytes,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 2249 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
1580 2349 M (const char *file, int line\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2449 M (allocates )[37 23 23 42 37 37 23 37 32  0]xS 
F2S53 Ji 
1792 2449 M (nbytes)[50 50 50 50 50  0]xS 
F1S53 Ji 
2092 2449 M ( bytes and returns a pointer to the first byte. The bytes are uninitialized. If )
[21 41 42 23 37 33 20 37 42 42 21 27 37 23 42 28 42 32 21 37 21 41 42 23 42 23 37 28 20 24 41 21
23 42 37 21 28 23 27 33 23 21 42 41 23 37 21 21 51 42 36 21 42 42 23 37 32 21 37 28 37 21 41 42
23 42 23 23 23 37 23 23 37 37 42 21 21 28 27  0]xS 
F2S53 Ji 
4570 2449 M (Mem_alloc)[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2549 M (raises )[27 37 24 32 37 32  0]xS 
F2S53 Ji 
1690 2549 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2190 2549 M (, )[21  0]xS 
F2S53 Ji 
2232 2549 M (file)[50 50 50  0]xS 
F1S53 Ji 
2432 2549 M ( and )[20 37 42 42  0]xS 
F2S53 Ji 
2594 2549 M (line)[50 50 50  0]xS 
F1S53 Ji 
2794 2549 M ( are reported as the offending source coordinate.)[21 37 28 37 21 27 37 42 42 27 24 37 41 21 37 32 21 23 42 37 21 41 27 27 37 42 42 23 42 41 21 32
42 42 27 37 37 21 37 42 41 28 42 23 42 37 23 37  0]xS 
F2S53 Ji 
1380 2649 M (void *Mem_calloc\(int count, int nbytes,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50  0]xS 
4520 2649 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
1580 2749 M (const char *file, int line\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2849 M (allocates space for an array of )[37 23 23 42 37 37 23 37 32 21 33 41 37 37 37 21 28 41 28 21 37 42 21 37 27 28 37 42 21 41 28  0]xS 
F2S53 Ji 
2498 2849 M (count)[50 50 50 50  0]xS 
F1S53 Ji 
2748 2849 M ( elements, each occupying )[21 37 23 37 65 37 41 24 32 21 21 37 37 37 41 21 42 37 37 42 41 42 23 42 41  0]xS 
F2S53 Ji 
3648 2849 M (nbytes)[50 50 50 50 50  0]xS 
F1S53 Ji 
3948 2849 M ( and returns a pointer to the first)[21 37 42 41 21 28 37 23 42 27 42 32 21 37 21 42 42 23 41 24 37 27 21 23 42 21 23 42 37 21 27 24
27 33  0]xS 
1480 2949 M (element. It is a c.r.e. for )[37 23 37 65 37 41 23 21 19 28 23 19 24 32 19 37 19 37 21 23 21 37 21 19 28 41 28  0]xS 
F2S53 Ji 
2279 2949 M (count)[50 50 50 50  0]xS 
F4S53 Ji 
2529 2949 M <A3>S 
F1S53 Ji 
2575 2949 M (0. The elements are uninitialized. If )[41 21 19 51 42 37 19 37 23 37 65 37 41 23 33 19 37 28 37 19 41 42 23 42 23 23 23 37 23 24 37 37
41 21 19 28 28  0]xS 
F2S53 Ji 
3772 2949 M (Mem_calloc)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4272 2949 M ( raises )[20 27 37 23 33 37 32  0]xS 
F2S53 Ji 
4499 2949 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4999 2949 M (,)S 
F2S53 Ji 
1480 3049 M (file)[50 50 50  0]xS 
F1S53 Ji 
1680 3049 M ( and )[20 37 42 42  0]xS 
F2S53 Ji 
1842 3049 M (line)[50 50 49  0]xS 
F1S53 Ji 
2042 3049 M ( are reported as the offending source coordinate.)[21 37 28 37 21 28 37 41 42 28 23 37 41 21 37 33 20 24 41 37 21 42 26 28 37 41 42 23 42 41 21 33
41 42 28 37 37 20 37 42 42 27 42 23 42 37 23 37  0]xS 
F2S53 Ji 
1380 3149 M (void Mem_free\(void **ptr, const char *file, int line\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 49 50 50  0]xS 
F1S53 Ji 
1480 3249 M (deallocates )[41 37 37 24 23 41 37 37 23 37 33  0]xS 
F2S53 Ji 
1875 3249 M (*ptr)[50 50 50  0]xS 
F1S53 Ji 
2071 3249 M (, if )[21 25 23 28  0]xS 
F2S53 Ji 
2193 3249 M (*ptr )[50 50 50 50  0]xS 
F1S53 Ji 
2452 3249 M (is nonnull, and clears )[23 33 25 41 42 42 41 42 23 23 21 25 37 42 41 25 37 23 37 37 28 32  0]xS 
F2S53 Ji 
3197 3249 M (*ptr)[50 50 50  0]xS 
F1S53 Ji 
3393 3249 M (. It is a c.r.e. for )[21 25 28 23 25 23 32 25 37 25 37 21 23 21 37 21 25 27 42 28  0]xS 
F2S53 Ji 
3963 3249 M (ptr)[50 49  0]xS 
F4S53 Ji 
4113 3249 M (=)S 
F1S53 Ji 
4158 3249 M (null, and it is an )[42 41 24 23 21 24 37 42 42 25 23 23 25 23 32 25 37 42  0]xS 
4734 3249 M (u.r.e.)[41 21 23 21 37  0]xS 
4898 3249 M ( for)[25 28 41  0]xS 
F2S53 Ji 
1480 3349 M (*ptr)[50 50 50  0]xS 
F1S53 Ji 
1680 3349 M ( to be a pointer that was )[21 23 41 21 42 37 21 37 21 42 41 23 42 23 37 28 21 23 42 37 23 21 60 37 32  0]xS 
2497 3349 M (not)[42 42  0]xS 
2604 3349 M ( returned by previous call to a )[21 27 37 24 41 28 42 37 41 21 42 41 21 42 28 37 41 24 41 42 32 21 37 37 23 24 21 23 41 21 37  0]xS 
F2S53 Ji 
3620 3349 M (Mem)[50 50  0]xS 
F1S53 Ji 
3770 3349 M ( allocation function. Implementations)[21 37 23 23 42 37 37 23 23 42 42 21 27 42 42 37 23 23 42 41 21 21 28 65 41 23 37 65 37 42 23 37
23 23 42 41  0]xS 
1480 3449 M (may use )[65 37 41 21 42 32 37  0]xS 
F2S53 Ji 
1776 3449 M (file)[50 50 50  0]xS 
F1S53 Ji 
1976 3449 M ( and )[21 37 41 42  0]xS 
F2S53 Ji 
2138 3449 M (line)[50 50 50  0]xS 
F1S53 Ji 
2338 3449 M ( to report memory usage errors.)[20 24 41 21 28 37 41 42 28 23 21 65 37 64 42 28 41 21 42 32 37 42 37 21 37 27 28 42 27 33  0]xS 
; ; LH
(%%[Page: 20]%%) = 
%%PageTrailer

%%Page: 21 21
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F2S53 Ji 
1380 1166 M (void *Mem_resize\(void **ptr, int nbytes,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50  0]xS 
4520 1166 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
1580 1266 M (const char *file, int line\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1366 M (changes the size of the block at )[37 41 37 42 42 37 32 19 23 42 37 19 32 23 37 37 19 42 27 19 23 42 37 19 42 23 41 37 42 19 37 23
 0]xS 
F2S53 Ji 
2528 1366 M (*ptr)[50 50 50  0]xS 
F1S53 Ji 
2728 1366 M ( to hold )[19 23 42 19 41 42 23 42  0]xS 
F2S53 Ji 
2998 1366 M (nbytes)[50 50 50 50 50  0]xS 
F1S53 Ji 
3298 1366 M ( bytes, clears )[19 42 42 23 37 32 21 19 37 23 37 37 28 32  0]xS 
F2S53 Ji 
3745 1366 M (*ptr)[50 50 50  0]xS 
F1S53 Ji 
3942 1366 M (, and returns a pointer to the first)[21 19 37 42 41 19 28 37 23 42 28 41 33 19 37 18 42 42 23 42 23 37 27 19 23 42 19 23 42 37 19 27
24 27 33  0]xS 
1480 1466 M (byte of the new block. If )[41 42 23 37 22 42 27 22 23 42 37 22 41 37 61 21 42 23 42 37 41 21 22 28 28  0]xS 
F2S53 Ji 
2326 1466 M (nbytes)[50 50 50 50 50  0]xS 
F1S53 Ji 
2625 1466 M ( exceeds the size of the original block, the excess byte are uninitialized.)
[22 37 42 37 37 37 41 33 22 23 41 37 22 33 23 37 37 22 41 28 22 23 42 37 21 42 28 23 42 23 41 37
23 22 42 23 42 37 41 21 22 23 42 37 22 37 41 37 37 33 32 22 41 42 23 37 22 37 28 37 22 41 42 23
42 23 23 23 37 23 23 37 37 42  0]xS 
1480 1566 M (If )[27 28  0]xS 
F2S53 Ji 
1556 1566 M (nbytes)[50 50 50 50 50  0]xS 
F1S53 Ji 
1856 1566 M ( is less than the size of the original block, only )[20 23 33 20 24 37 32 32 21 23 42 37 41 21 23 42 37 20 33 23 37 37 21 41 28 21 23 41 37 21 42 27
24 41 23 42 37 23 21 41 24 41 37 42 21 20 42 42 23 41  0]xS 
F2S53 Ji 
3422 1566 M (nbytes)[50 50 50 50 50  0]xS 
F1S53 Ji 
3722 1566 M ( of its bytes appear in the new block. If)[20 42 28 20 24 23 32 21 41 42 23 37 33 20 37 42 41 37 37 28 21 23 42 20 23 42 37 21 41 37 60 21
42 23 41 37 42 21 20 28  0]xS 
F2S53 Ji 
1480 1666 M (Mem_resize)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1980 1666 M ( raises )[22 28 37 23 33 37 32  0]xS 
F2S53 Ji 
2215 1666 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2715 1666 M (, )[20  0]xS 
F2S53 Ji 
2758 1666 M (file)[50 50 50  0]xS 
F1S53 Ji 
2958 1666 M ( and )[23 37 42 41  0]xS 
F2S53 Ji 
3124 1666 M (line)[50 50 50  0]xS 
F1S53 Ji 
3324 1666 M ( are reported as the offending source coordinate. It)[23 37 27 37 23 28 37 42 41 28 23 37 42 23 37 32 23 23 42 37 22 42 26 28 37 42 41 23 42 42 23 32
42 41 28 37 37 23 37 41 42 28 41 24 41 37 23 37 21 23 28  0]xS 
1480 1766 M (is a c.r.e. for )[23 32 20 37 21 37 20 24 20 37 21 20 28 42 27  0]xS 
F2S53 Ji 
1910 1766 M (ptr)[50 49  0]xS 
F4S53 Ji 
2060 1766 M (=)S 
F1S53 Ji 
2105 1766 M (null or )[42 41 24 23 20 42 27  0]xS 
F2S53 Ji 
2345 1766 M (*ptr)[50 50 50  0]xS 
F4S53 Ji 
2545 1766 M (=)S 
F1S53 Ji 
2590 1766 M (null, and it is an )[42 41 24 23 20 21 37 41 42 20 23 23 20 24 32 20 37 42  0]xS 
3142 1766 M (u.r.e.)[42 20 24 20 37  0]xS 
3306 1766 M ( for )[20 28 42 27  0]xS 
F2S53 Ji 
3444 1766 M (*ptr)[50 50 49  0]xS 
F1S53 Ji 
3644 1766 M ( to be a pointer that was not returned by a)[21 23 41 21 41 37 20 37 20 42 42 23 42 23 37 27 21 23 41 37 23 21 60 37 32 20 42 42 23 20 28 37
23 41 28 42 37 41 20 42 42 20  0]xS 
1480 1866 M (previous call to a )[41 28 37 42 23 42 41 33 20 37 37 24 23 21 23 41 21 37  0]xS 
F2S53 Ji 
2072 1866 M (Mem)[50 50  0]xS 
F1S53 Ji 
2222 1866 M ( allocation function.)[21 37 23 23 42 37 37 23 23 42 41 21 28 41 42 37 23 23 42 42  0]xS 
F2S53 Ji 
1380 1966 M (NEW\(p\))[50 50 50 50 50  0]xS 
4520 1966 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
1380 2066 M (NEW0\(p\))[50 50 50 50 50 50  0]xS 
4520 2066 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2166 M (allocate a block large enough to hold )[37 23 23 42 37 37 23 37 22 37 21 42 23 42 37 41 22 23 37 27 41 37 22 37 42 41 42 42 41 22 23 42
22 41 42 23 42  0]xS 
F2S53 Ji 
2737 2166 M (*p)[50  0]xS 
F1S53 Ji 
2837 2166 M ( and return a pointer to the first byte. )[21 37 42 42 22 27 37 23 42 28 41 22 37 22 42 41 24 41 23 37 28 22 23 42 21 24 41 37 22 28 23 28
32 23 22 42 41 24 36 21  0]xS 
F2S53 Ji 
4090 2166 M (NEW0)[50 50 50  0]xS 
F1S53 Ji 
4290 2166 M ( clears the bytes, )[22 37 23 37 37 28 32 22 23 42 37 22 41 42 23 37 32 21  0]xS 
F2S53 Ji 
4870 2166 M (NEW)[50 50  0]xS 
F1S53 Ji 
1480 2266 M (leaves them uninitialized.)[23 37 37 42 37 32 21 23 42 37 64 21 42 41 24 41 23 24 23 37 23 23 37 37 42  0]xS 
F2S53 Ji 
1380 2366 M (RESIZE\(ptr, nbytes\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50  0]xS 
4520 2366 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2466 M (See )[46 37 37  0]xS 
F2S53 Ji 
1621 2466 M (Mem_resize)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2121 2466 M (.)S 
; ; LH
(%%[Page: 21]%%) = 
%%PageTrailer

%%Page: 22 22
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (MP)[110  0]xS 
F2S53 Ji 
4673 1188 M (T)S 
F0S53 Ji 
4723 1188 M ( is )[21 23 32  0]xS 
F2S53 Ji 
4820 1188 M (MP_T)[50 50 50  0]xS 
1380 1399 M (typedef unsigned char *T)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
1380 1599 M (MP)[50  0]xS 
F1S53 Ji 
1480 1599 M ( functions do )[19 28 42 41 37 23 24 41 42 32 20 42 41  0]xS 
F3S53 Ji 
1932 1599 M (n)S 
F1S53 Ji 
1974 1599 M (-bit signed and unsigned arithmetic, where )[27 42 23 23 20 32 23 42 42 37 41 20 37 42 41 20 42 41 33 23 41 42 37 42 19 37 28 23 23 42 65 37
23 23 37 21 19 61 41 37 28 37  0]xS 
F3S53 Ji 
3408 1599 M (n)S 
F1S53 Ji 
3449 1599 M ( is initially 32 and can be changed by )[20 23 32 20 23 42 23 23 23 37 23 24 41 20 41 42 20 37 41 42 20 37 37 41 20 42 37 19 37 42 37 41
42 37 42 19 42 42  0]xS 
F2S53 Ji 
4699 1599 M (MP_set)[50 50 50 50 50  0]xS 
F1S53 Ji 
4999 1599 M (.)S 
1380 1699 M (Function names that end in )[46 42 41 37 23 24 41 42 24 42 37 65 37 32 24 23 42 37 23 25 37 41 42 24 23 42  0]xS 
F2S53 Ji 
2320 1699 M (u)S 
F1S53 Ji 
2370 1699 M ( or )[24 42 28  0]xS 
F2S53 Ji 
2488 1699 M (ui)[50  0]xS 
F1S53 Ji 
2588 1699 M ( do unsigned arithmetic; others do signed arithmetic. )[24 42 42 24 42 41 33 23 41 42 37 42 24 37 28 23 23 42 64 37 24 23 37 23 24 42 23 42 37 27 33 24
42 41 25 32 23 42 41 37 42 24 37 28 23 23 42 65 37 23 23 37 21  0]xS 
F2S53 Ji 
4390 1699 M (MP)[50  0]xS 
F1S53 Ji 
4490 1699 M ( functions com-)[24 28 42 41 37 24 23 41 42 32 25 37 41 65  0]xS 
1380 1799 M (pute their results before raising )[41 42 23 37 22 23 41 37 23 28 22 27 37 33 41 24 23 32 21 42 37 28 41 28 37 22 27 37 23 33 23 42
41  0]xS 
F2S53 Ji 
2440 1799 M (MP_Overflow)[50 50 50 50 50 49 50 50 50 50  0]xS 
F1S53 Ji 
2990 1799 M ( or )[22 41 28  0]xS 
F2S53 Ji 
3102 1799 M (MP_DivideByZero)[50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3851 1799 M (. It is a c.r.e. to pass a null )[21 21 28 23 22 23 32 21 37 22 37 21 23 21 37 20 22 23 42 21 42 37 32 32 22 37 21 42 41 24 23  0]xS 
F2S53 Ji 
4742 1799 M (T)S 
F1S53 Ji 
4792 1799 M ( to any)[21 24 41 22 37 41  0]xS 
F2S53 Ji 
1380 1899 M (MP)[50  0]xS 
F1S53 Ji 
1480 1899 M ( function. It is an )[21 27 42 42 37 23 23 41 42 21 21 28 23 20 24 32 21 37 41  0]xS 
2067 1899 M (u.r.e.)[42 21 23 21 37  0]xS 
2232 1899 M ( to pass a )[20 24 41 21 42 37 32 32 21 37  0]xS 
F2S53 Ji 
2560 1899 M (T)S 
F1S53 Ji 
2610 1899 M ( that is too small to any )[21 23 42 37 23 21 23 32 21 23 42 41 21 33 64 37 24 23 21 23 41 21 37 42 41  0]xS 
F2S53 Ji 
3408 1899 M (MP)[50  0]xS 
F1S53 Ji 
3508 1899 M ( function.)[21 28 41 42 37 23 23 42 42  0]xS 
F2S53 Ji 
1380 2099 M (T MP_add\(T z, T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4470 2099 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
1380 2199 M (T MP_addi\(T z, T x, long y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4470 2199 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
1380 2299 M (T MP_addu\(T z, T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4470 2299 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
1380 2399 M (T MP_addui\(T z, T x, unsigned long y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50  0]xS 
4470 2399 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2499 M (set )[32 37 23  0]xS 
F2S53 Ji 
1593 2499 M (z)S 
F1S53 Ji 
1643 2499 M ( to )[21 23 42  0]xS 
F2S53 Ji 
1750 2499 M (x)S 
F4S53 Ji 
1821 2499 M (+)S 
F2S53 Ji 
1887 2499 M (y)S 
F1S53 Ji 
1937 2499 M ( and return )[21 37 41 42 21 28 36 24 41 28 42  0]xS 
F2S53 Ji 
2319 2499 M (z)S 
F1S53 Ji 
2369 2499 M (.)S 
F2S53 Ji 
1380 2599 M (T MP_and\(T z, T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
1380 2699 M (T MP_andi\(T z, T x, unsigned long y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50  0]xS 
F1S53 Ji 
1480 2799 M (set )[32 37 23  0]xS 
F2S53 Ji 
1593 2799 M (z)S 
F1S53 Ji 
1643 2799 M ( to )[21 23 42  0]xS 
F2S53 Ji 
1750 2799 M (x)S 
F1S53 Ji 
1800 2799 M ( )S 
F1S4B Ji 
1821 2799 M (AND)[54 54  0]xS 
F1S53 Ji 
1983 2799 M ( )S 
F2S53 Ji 
2004 2799 M (y)S 
F1S53 Ji 
2054 2799 M ( and return )[21 37 42 41 21 28 37 23 42 28 41  0]xS 
F2S53 Ji 
2435 2799 M (z)S 
F1S53 Ji 
2485 2799 M (.)S 
F2S53 Ji 
1380 2899 M (T MP_ashift\(T z, T x, int s\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2999 M (sets )[32 37 23 33  0]xS 
F2S53 Ji 
1624 2999 M (z)S 
F1S53 Ji 
1674 2999 M ( to )[19 23 42  0]xS 
F2S53 Ji 
1776 2999 M (x)S 
F1S53 Ji 
1826 2999 M ( shifted right by )[19 32 42 23 27 24 37 41 19 28 23 42 41 23 19 42 41  0]xS 
F2S53 Ji 
2368 2999 M (s)S 
F1S53 Ji 
2418 2999 M ( bits and returns )[19 42 23 23 32 19 37 42 41 19 28 37 23 42 27 42 32  0]xS 
F2S53 Ji 
2965 2999 M (z)S 
F1S53 Ji 
3015 2999 M (. Vacated bits are filled with )[21 19 51 37 37 37 23 37 41 19 42 23 23 33 18 37 28 37 19 28 23 23 23 37 42 18 61 23 23 41  0]xS 
F2S53 Ji 
3958 2999 M (x)S 
F1S53 Ji 
4008 2999 M (\222s sign bit. It is a c.r.e. for )[23 33 19 32 23 42 41 19 42 23 23 21 19 27 24 18 24 32 19 37 18 37 21 23 21 37 21 19 28 41 28  0]xS 
F2S53 Ji 
4862 2999 M (s)S 
F4S53 Ji 
4912 2999 M (<)S 
F1S53 Ji 
4958 2999 M (0.)[42  0]xS 
F2S53 Ji 
1380 3099 M (int MP_cmp\(T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50  0]xS 
1380 3199 M (int MP_cmpi\(T x, long y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
1380 3299 M (int MP_cmpu\(T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50  0]xS 
1380 3399 M (int MP_cmpui\(T x, unsigned long y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50  0]xS 
F1S53 Ji 
1480 3499 M (return an int )[27 37 24 41 28 42 20 37 42 21 23 42 23  0]xS 
F4S53 Ji 
1908 3499 M (<)S 
F1S53 Ji 
1954 3499 M (0, )[42 21  0]xS 
F4S53 Ji 
2037 3499 M (=)S 
F1S53 Ji 
2083 3499 M (0, or )[42 21 21 41 28  0]xS 
F4S53 Ji 
2256 3499 M (>)S 
F1S53 Ji 
2302 3499 M (0 if )[41 21 23 28  0]xS 
F2S53 Ji 
2436 3499 M (x)S 
F4S53 Ji 
2486 3499 M (<)S 
F2S53 Ji 
2532 3499 M (y)S 
F1S53 Ji 
2576 3499 M (, )[21  0]xS 
F2S53 Ji 
2618 3499 M (x)S 
F4S53 Ji 
2668 3499 M (=)S 
F2S53 Ji 
2714 3499 M (y)S 
F1S53 Ji 
2758 3499 M (, or )[21 21 41 28  0]xS 
F2S53 Ji 
2890 3499 M (x)S 
F4S53 Ji 
2940 3499 M (>)S 
F2S53 Ji 
2986 3499 M (y)S 
F1S53 Ji 
3030 3499 M (.)S 
; ; LH
(%%[Page: 22]%%) = 
%%PageTrailer

%%Page: 23 23
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F2S53 Ji 
1380 1166 M (T MP_cvt\(int m, T z, T x\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4470 1166 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
1380 1266 M (T MP_cvtu\(int m, T z, T x\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4470 1266 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1366 M (narrow or widen )[41 37 28 28 42 60 20 42 28 21 60 23 42 37 41  0]xS 
F2S53 Ji 
2051 1366 M (x)S 
F1S53 Ji 
2101 1366 M ( to an )[21 23 42 20 37 42  0]xS 
F2S53 Ji 
2307 1366 M (m)S 
F1S53 Ji 
2357 1366 M (-bit signed or unsigned integer in )[28 41 23 24 20 33 23 42 41 37 42 21 41 28 21 42 41 33 23 41 42 37 42 20 24 41 23 37 42 37 28 21
23 41  0]xS 
F2S53 Ji 
3481 1366 M (z)S 
F1S53 Ji 
3531 1366 M ( and return )[21 37 42 41 21 28 37 23 42 27 42  0]xS 
F2S53 Ji 
3913 1366 M (z)S 
F1S53 Ji 
3963 1366 M (. It is a c.r.e. for )[21 20 28 23 21 23 33 21 37 20 37 21 23 21 37 21 21 28 41 28  0]xS 
F2S53 Ji 
4509 1366 M (m)S 
F4S53 Ji 
4559 1366 M (<)S 
F1S53 Ji 
4605 1366 M (2.)[42  0]xS 
F2S53 Ji 
1380 1466 M (T MP_div\(T z, T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
3679 1466 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4229 1466 M (, )[20  0]xS 
F2S53 Ji 
4270 1466 M (MP_DivideByZero)[50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
1380 1566 M (T MP_divi\(T z, T x, long y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
3679 1566 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4229 1566 M (, )[20  0]xS 
F2S53 Ji 
4270 1566 M (MP_DivideByZero)[50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
1380 1666 M (T MP_divu\(T z, T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4270 1666 M (MP_DivideByZero)[50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
1380 1766 M (T MP_divui\(T z, T x,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50  0]xS 
3679 1766 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4229 1766 M (, )[20  0]xS 
F2S53 Ji 
4270 1766 M (MP_DivideByZero)[50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
1580 1866 M (unsigned long y\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50  0]xS 
F1S53 Ji 
1480 1966 M (set )[32 37 23  0]xS 
F2S53 Ji 
1593 1966 M (z)S 
F1S53 Ji 
1643 1966 M ( to )[21 23 42  0]xS 
F2S53 Ji 
1750 1966 M (x)S 
F4S53 Ji 
1800 1966 M (/)S 
F2S53 Ji 
1823 1966 M (y)S 
F1S53 Ji 
1873 1966 M ( and return )[20 37 42 42 21 27 37 23 42 28 41  0]xS 
F2S53 Ji 
2254 1966 M (z)S 
F1S53 Ji 
2304 1966 M (. The signed functions truncate towards )[21 21 51 41 37 21 33 23 41 42 37 42 21 27 42 42 37 23 23 41 42 33 20 24 27 42 42 37 37 23 37 20
24 41 60 37 28 42 32  0]xS 
F4S53 Ji 
3639 1966 M <2DA5>[46  0]xS 
F1S53 Ji 
3744 1966 M (; see )[23 21 32 37 37  0]xS 
F2S53 Ji 
3915 1966 M (Arith_div.)[50 50 50 50 50 50 50 50 50  0]xS 
1380 2066 M (void MP_fmt\(int code, va_list *app,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50  0]xS 
1580 2166 M (int put\(int c, void *cl\), void *cl,)[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50  0]xS 
1580 2266 M (unsigned char flags[], int width, int precision\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
1380 2366 M (void MP_fmtu\(int code, va_list *app,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50  0]xS 
1580 2466 M (int put\(int c, void *cl\), void *cl,)[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50  0]xS 
1580 2566 M (unsigned char flags[], int width, int precision\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2666 M (are )[37 27 37  0]xS 
F2S53 Ji 
1603 2666 M (Fmt)[50 50  0]xS 
F1S53 Ji 
1753 2666 M ( conversion functions. They consume a )[21 37 42 41 42 37 28 32 23 42 41 22 27 42 42 37 23 23 42 41 33 21 21 51 41 37 42 21 37 42 42 32
42 64 37 22 37  0]xS 
F2S53 Ji 
3081 2666 M (T)S 
F1S53 Ji 
3131 2666 M ( and a base )[21 37 42 41 22 37 21 42 37 32 37  0]xS 
F3S53 Ji 
3521 2666 M (b)S 
F1S53 Ji 
3563 2666 M ( and format it like )[21 37 42 41 22 27 42 28 65 37 23 21 23 23 22 23 23 42 37  0]xS 
F2S53 Ji 
4183 2666 M (printf)[50 50 50 50 50  0]xS 
F1S53 Ji 
4488 2666 M (\222s )[23 33  0]xS 
F2S53 Ji 
4564 2666 M (%d)[50  0]xS 
F1S53 Ji 
4664 2666 M ( and )[21 37 42 42  0]xS 
F2S53 Ji 
4827 2666 M (%u)[50  0]xS 
F1S53 Ji 
4927 2666 M (. It)[21 21 28  0]xS 
1480 2766 M (is c.r.e. for the )[23 32 21 37 21 23 21 37 21 21 27 42 28 20 24 41 37  0]xS 
F3S53 Ji 
1977 2766 M (b)S 
F4S53 Ji 
2019 2766 M (<)S 
F1S53 Ji 
2065 2766 M (2 or )[42 21 42 27  0]xS 
F3S53 Ji 
2217 2766 M (b)S 
F4S53 Ji 
2259 2766 M (>)S 
F1S53 Ji 
2305 2766 M (36, and for )[41 42 21 20 37 42 42 21 27 42 28  0]xS 
F2S53 Ji 
2689 2766 M (app)[50 50  0]xS 
F1S53 Ji 
2839 2766 M (, )[21  0]xS 
F2S53 Ji 
2880 2766 M (*app)[50 50 50  0]xS 
F1S53 Ji 
3080 2766 M (, or )[21 21 41 28  0]xS 
F2S53 Ji 
3212 2766 M (flags)[50 50 50 50  0]xS 
F1S53 Ji 
3462 2766 M ( to be null.)[20 24 41 21 42 37 21 41 42 23 23  0]xS 
F2S53 Ji 
1380 2866 M (T MP_fromint\(T z, long v\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4470 2866 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
1380 2966 M (T MP_fromintu\(T z, unsigned long u\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50  0]xS 
4470 2966 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3066 M (set )[32 37 23  0]xS 
F2S53 Ji 
1593 3066 M (z)S 
F1S53 Ji 
1643 3066 M ( to )[21 23 42  0]xS 
F2S53 Ji 
1750 3066 M (v)S 
F1S53 Ji 
1800 3066 M ( or )[20 42 28  0]xS 
F2S53 Ji 
1911 3066 M (u)S 
F1S53 Ji 
1961 3066 M ( and return )[20 37 42 42 20 28 37 23 42 28 41  0]xS 
F2S53 Ji 
2342 3066 M (z)S 
F1S53 Ji 
2392 3066 M (.)S 
F2S53 Ji 
1380 3166 M (T MP_fromstr\(T z, const char *str, int base,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50  0]xS 
4470 3166 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
1580 3266 M (char **end\))[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3366 M (interprets )[23 42 23 37 27 42 28 37 23 32  0]xS 
F2S53 Ji 
1815 3366 M (str)[50 50  0]xS 
F1S53 Ji 
1965 3366 M ( as an integer in )[21 37 32 21 37 42 21 23 41 24 37 41 37 28 21 23 41  0]xS 
F2S53 Ji 
2513 3366 M (base)[50 50 50  0]xS 
F1S53 Ji 
2713 3366 M (, sets )[21 21 32 37 23 33  0]xS 
F2S53 Ji 
2901 3366 M (z)S 
F1S53 Ji 
2951 3366 M ( to that integer, and returns )[20 24 41 21 23 42 37 23 21 23 42 23 37 41 37 25 21 20 37 42 42 21 27 37 23 42 28 41 33  0]xS 
F2S53 Ji 
3866 3366 M (z)S 
F1S53 Ji 
3916 3366 M (. See )[20 21 47 37 37  0]xS 
F2S53 Ji 
4099 3366 M (AP_fromstr)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4594 3366 M (.)S 
F2S53 Ji 
1380 3466 M (T MP_lshift\(T z, T x, int s\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3566 M (set )[32 37 23  0]xS 
F2S53 Ji 
1593 3566 M (z)S 
F1S53 Ji 
1643 3566 M ( to )[21 23 42  0]xS 
F2S53 Ji 
1750 3566 M (x)S 
F1S53 Ji 
1800 3566 M ( shifted left by )[20 33 41 24 27 23 37 42 21 23 37 28 23 21 41 42  0]xS 
F2S53 Ji 
2304 3566 M (s)S 
F1S53 Ji 
2354 3566 M ( bits and return )[21 41 23 24 32 21 37 41 42 21 28 37 23 41 28 42  0]xS 
F2S53 Ji 
2877 3566 M (z)S 
F1S53 Ji 
2927 3566 M (. Vacated bits are filled with 0s. It is a c.r.e. for )[20 21 51 37 37 37 23 37 42 21 41 23 24 32 21 37 28 37 20 28 23 23 24 37 41 21 60 23 23 42 21 42
32 21 21 27 24 20 24 32 21 37 21 37 20 23 21 37 21 21 28 41 28  0]xS 
F2S53 Ji 
4502 3566 M (s)S 
F4S53 Ji 
4552 3566 M (<)S 
F1S53 Ji 
4598 3566 M (0.)[41  0]xS 
; ; LH
(%%[Page: 23]%%) = 
%%PageTrailer

%%Page: 24 24
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F2S53 Ji 
1380 1166 M (T MP_mod\(T z, T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
3679 1166 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4229 1166 M (, )[20  0]xS 
F2S53 Ji 
4270 1166 M (MP_DivideByZero)[50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1266 M (sets )[32 37 23 33  0]xS 
F2S53 Ji 
1626 1266 M (z)S 
F1S53 Ji 
1676 1266 M ( to )[21 23 42  0]xS 
F2S53 Ji 
1782 1266 M (x)S 
F1S53 Ji 
1832 1266 M ( mod )[21 65 41 42  0]xS 
F2S53 Ji 
2022 1266 M (y)S 
F1S53 Ji 
2072 1266 M ( and returns )[20 37 42 42 21 27 37 23 42 28 41 33  0]xS 
F2S53 Ji 
2486 1266 M (z)S 
F1S53 Ji 
2536 1266 M (. Truncates towards )[20 21 48 28 42 41 37 37 23 37 33 21 23 41 61 37 27 42 32  0]xS 
F4S53 Ji 
3208 1266 M <2DA5>[46  0]xS 
F1S53 Ji 
3313 1266 M (; see )[23 21 33 37 37  0]xS 
F2S53 Ji 
3485 1266 M (Arith_mod)[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3934 1266 M (.)S 
F2S53 Ji 
1380 1366 M (long MP_modi\(T x, long y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
3679 1366 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4229 1366 M (, )[20  0]xS 
F2S53 Ji 
4270 1366 M (MP_DivideByZero)[50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1466 M (returns )[27 37 24 41 28 42 32  0]xS 
F2S53 Ji 
1732 1466 M (x)S 
F1S53 Ji 
1782 1466 M ( mod)[21 64 42  0]xS 
F2S53 Ji 
1972 1466 M (y)S 
F1S53 Ji 
2016 1466 M (. Truncates towards )[21 21 48 28 41 42 37 37 23 37 32 21 23 42 60 37 28 41 33  0]xS 
F4S53 Ji 
2689 1466 M <2DA5>[45  0]xS 
F1S53 Ji 
2794 1466 M (; see )[23 21 32 37 37  0]xS 
F2S53 Ji 
2965 1466 M (Arith_mod)[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3415 1466 M (. )[21  0]xS 
F2S53 Ji 
1380 1566 M (T MP_modu\(T z, T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4270 1566 M (MP_DivideByZero)[50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1666 M (sets )[32 37 23 33  0]xS 
F2S53 Ji 
1626 1666 M (z)S 
F1S53 Ji 
1676 1666 M ( to )[21 23 42  0]xS 
F2S53 Ji 
1782 1666 M (x)S 
F1S53 Ji 
1832 1666 M ( mod )[21 65 41 42  0]xS 
F2S53 Ji 
2022 1666 M (y)S 
F1S53 Ji 
2072 1666 M ( and returns )[20 37 42 42 21 27 37 23 42 28 41 33  0]xS 
F2S53 Ji 
2486 1666 M (z)S 
F1S53 Ji 
2536 1666 M (.)S 
F2S53 Ji 
1380 1766 M (unsigned long MP_modui\(T x,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
3679 1766 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4229 1766 M (, )[20  0]xS 
F2S53 Ji 
4270 1766 M (MP_DivideByZero)[50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
1580 1866 M (unsigned long y\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50  0]xS 
F1S53 Ji 
1480 1966 M (returns )[27 37 24 41 28 42 32  0]xS 
F2S53 Ji 
1732 1966 M (x)S 
F1S53 Ji 
1782 1966 M ( mod )[21 64 42 42  0]xS 
F2S53 Ji 
1972 1966 M (y)S 
F1S53 Ji 
2016 1966 M (.)S 
F2S53 Ji 
1380 2066 M (T MP_mul\(T z, T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4470 2066 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2166 M (sets )[32 37 23 33  0]xS 
F2S53 Ji 
1626 2166 M (z)S 
F1S53 Ji 
1676 2166 M ( to )[21 23 42  0]xS 
F2S53 Ji 
1782 2166 M (x)S 
F4S53 Ji 
1832 2166 M <D7>S 
F2S53 Ji 
1853 2166 M (y)S 
F1S53 Ji 
1903 2166 M ( and returns )[21 37 41 42 21 27 37 23 42 28 42 32  0]xS 
F2S53 Ji 
2317 2166 M (z)S 
F1S53 Ji 
2367 2166 M (.)S 
F2S53 Ji 
1380 2266 M (T MP_mul2\(T z, T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4470 2266 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
1380 2366 M (T MP_mul2u\(T z, T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4470 2366 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2466 M (set )[32 37 23  0]xS 
F2S53 Ji 
1593 2466 M (z)S 
F1S53 Ji 
1643 2466 M ( to the )[21 23 42 21 23 41 37  0]xS 
F3S53 Ji 
1872 2466 M (double-length)[42 41 42 42 23 37 28 23 37 41 42 23  0]xS 
F1S53 Ji 
2335 2466 M ( result of )[21 27 37 33 41 24 23 21 41 28  0]xS 
F2S53 Ji 
2652 2466 M (x)S 
F4S53 Ji 
2702 2466 M <D7>S 
F2S53 Ji 
2723 2466 M (y)S 
F1S53 Ji 
2773 2466 M ( and return )[20 37 42 42 20 28 37 23 42 28 41  0]xS 
F2S53 Ji 
3154 2466 M (z)S 
F1S53 Ji 
3204 2466 M (, which has 2)[21 21 60 42 23 37 41 21 42 37 32 21  0]xS 
F3S53 Ji 
3644 2466 M (n)S 
F1S53 Ji 
3685 2466 M ( bits.)[21 42 23 23 32  0]xS 
F2S53 Ji 
1380 2566 M (T MP_muli\(T z, T x, long y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4470 2566 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
1380 2666 M (T MP_mulu\(T z, T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4470 2666 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
1380 2766 M (T MP_mului\(T z, T x, unsigned long y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50  0]xS 
4470 2766 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2866 M (set )[32 37 23  0]xS 
F2S53 Ji 
1593 2866 M (z)S 
F1S53 Ji 
1643 2866 M ( to )[21 23 42  0]xS 
F2S53 Ji 
1750 2866 M (x)S 
F4S53 Ji 
1800 2866 M <D7>S 
F2S53 Ji 
1821 2866 M (y)S 
F1S53 Ji 
1870 2866 M ( and return )[21 37 42 41 21 28 37 23 42 27 42  0]xS 
F2S53 Ji 
2252 2866 M (z)S 
F1S53 Ji 
2302 2866 M (.)S 
F2S53 Ji 
1380 2966 M (T MP_neg\(T z, T x\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50  0]xS 
4470 2966 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3066 M (sets )[32 37 23 33  0]xS 
F2S53 Ji 
1626 3066 M (z)S 
F1S53 Ji 
1676 3066 M ( to )[21 23 42  0]xS 
F4S53 Ji 
1782 3066 M (-)S 
F2S53 Ji 
1828 3066 M (x)S 
F1S53 Ji 
1878 3066 M ( and returns )[20 37 42 42 21 27 37 23 42 28 41 33  0]xS 
F2S53 Ji 
2292 3066 M (z)S 
F1S53 Ji 
2342 3066 M (.)S 
F2S53 Ji 
1380 3166 M (T MP_new\(unsigned long u\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
3929 3166 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4429 3166 M (, )[20  0]xS 
F2S53 Ji 
4470 3166 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3266 M (creates and returns a )[37 27 37 37 24 37 32 21 37 41 42 21 28 37 23 41 28 42 32 21 37  0]xS 
F2S53 Ji 
2183 3266 M (T)S 
F1S53 Ji 
2233 3266 M ( initialized to )[21 23 41 24 23 23 37 23 23 37 37 42 21 23 41  0]xS 
F2S53 Ji 
2693 3266 M (u)S 
F1S53 Ji 
2743 3266 M (.)S 
F2S53 Ji 
1380 3366 M (T MP_not\(T z, T x\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3466 M (sets )[32 37 23 33  0]xS 
F2S53 Ji 
1626 3466 M (z)S 
F1S53 Ji 
1676 3466 M ( to ~)[21 23 42 21  0]xS 
F2S53 Ji 
1827 3466 M (x)S 
F1S53 Ji 
1877 3466 M ( and returns )[21 37 41 42 21 28 37 23 41 28 42 32  0]xS 
F2S53 Ji 
2291 3466 M (z)S 
F1S53 Ji 
2341 3466 M (.)S 
; ; LH
(%%[Page: 24]%%) = 
%%PageTrailer

%%Page: 25 25
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F2S53 Ji 
1380 1166 M (T MP_or\(T z, T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50  0]xS 
1380 1266 M (T MP_ori\(T z, T x, unsigned long y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50  0]xS 
F1S53 Ji 
1480 1366 M (set )[32 37 23  0]xS 
F2S53 Ji 
1593 1366 M (z)S 
F1S53 Ji 
1643 1366 M ( to )[21 23 42  0]xS 
F2S53 Ji 
1750 1366 M (x)S 
F1S53 Ji 
1800 1366 M ( )S 
F1S4B Ji 
1821 1366 M (OR)[54  0]xS 
F1S53 Ji 
1925 1366 M ( )S 
F2S53 Ji 
1945 1366 M (y)S 
F1S53 Ji 
1995 1366 M ( and return )[21 37 42 41 21 28 37 23 42 27 42  0]xS 
F2S53 Ji 
2377 1366 M (z)S 
F1S53 Ji 
2427 1366 M (.)S 
F2S53 Ji 
1380 1466 M (T MP_rshift\(T z, T x, int s\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1566 M (sets )[32 37 23 33  0]xS 
F2S53 Ji 
1626 1566 M (z)S 
F1S53 Ji 
1676 1566 M ( to )[21 23 42  0]xS 
F2S53 Ji 
1782 1566 M (x)S 
F1S53 Ji 
1832 1566 M ( shifted right by )[21 32 42 23 28 23 37 41 21 28 23 42 41 24 20 42 42  0]xS 
F2S53 Ji 
2383 1566 M (s)S 
F1S53 Ji 
2433 1566 M ( bits and returns )[20 42 23 23 33 21 37 41 42 21 27 37 23 42 28 42 32  0]xS 
F2S53 Ji 
2988 1566 M (z)S 
F1S53 Ji 
3038 1566 M (. Vacated bits are filled with 0s. It is a c.r.e. for )[21 20 51 37 37 37 23 37 42 21 41 24 23 32 21 37 28 37 20 28 23 24 23 37 41 21 60 23 24 41 21 42
32 21 21 27 24 20 24 32 21 37 21 37 20 24 20 37 21 21 28 41 28  0]xS 
F2S53 Ji 
4613 1566 M (s)S 
F4S53 Ji 
4663 1566 M (<)S 
F1S53 Ji 
4709 1566 M (0.)[41  0]xS 
F2S53 Ji 
1380 1666 M (int MP_set\(int n\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50  0]xS 
4520 1666 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1766 M (resets )[27 37 33 37 23 32  0]xS 
F2S53 Ji 
1690 1766 M (MP)[50  0]xS 
F1S53 Ji 
1790 1766 M ( to do )[21 23 42 21 41 42  0]xS 
F2S53 Ji 
2001 1766 M (n)S 
F1S53 Ji 
2051 1766 M (-bit arithmetic. It is a c.r.e. for )[27 42 23 23 21 37 28 23 23 42 65 37 23 23 37 21 21 27 24 20 23 33 21 37 21 36 21 23 21 37 21 21
28 41 28  0]xS 
F2S53 Ji 
3071 1766 M (n)S 
F4S53 Ji 
3121 1766 M (<)S 
F1S53 Ji 
3167 1766 M (2)S 
F4S53 Ji 
3208 1766 M (.)S 
F2S53 Ji 
1380 1866 M (T MP_sub\(T z, T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4470 1866 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
1380 1966 M (T MP_subi\(T z, T x, long y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4470 1966 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
1380 2066 M (T MP_subu\(T z, T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4470 2066 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
1380 2166 M (T MP_subui\(T z, T x, unsigned long y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50  0]xS 
4470 2166 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2266 M (set )[32 37 23  0]xS 
F2S53 Ji 
1593 2266 M (z)S 
F1S53 Ji 
1643 2266 M ( to )[21 23 42  0]xS 
F2S53 Ji 
1750 2266 M (x)S 
F4S53 Ji 
1821 2266 M (-)S 
F2S53 Ji 
1887 2266 M (y)S 
F1S53 Ji 
1937 2266 M ( and return )[21 37 41 42 21 28 36 24 41 28 42  0]xS 
F2S53 Ji 
2319 2266 M (z)S 
F1S53 Ji 
2369 2266 M (.)S 
F2S53 Ji 
1380 2366 M (long int MP_toint\(T x\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4470 2366 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
1380 2466 M (unsigned long MP_tointu\(T x\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4470 2466 M (MP_Overflow)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2566 M (return )[27 37 24 41 28 42  0]xS 
F2S53 Ji 
1700 2566 M (x)S 
F1S53 Ji 
1750 2566 M ( as a long int or unsigned long.)[21 37 33 20 37 21 23 42 42 41 21 23 42 23 21 42 27 21 42 41 33 23 42 41 37 42 21 23 42 41 42  0]xS 
F2S53 Ji 
1380 2666 M (char *MP_tostr\(char *str, int size,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50  0]xS 
4520 2666 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
1580 2766 M (int base, T x\))[50 50 50 50 50 50 50 50 50 50 49 50 50  0]xS 
F1S53 Ji 
1480 2866 M (fills )[27 24 23 23 32  0]xS 
F2S53 Ji 
1653 2866 M (str[0)[50 50 50 50  0]xS 
F1S53 Ji 
1903 2866 M (..)[21  0]xS 
F2S53 Ji 
1944 2866 M (size-1])[50 50 50 50 50 50  0]xS 
F1S53 Ji 
2294 2866 M ( with a null-terminated string representing )[43 60 23 23 42 43 37 43 42 41 24 23 28 23 37 27 65 23 42 37 23 37 42 43 32 23 28 23 42 42 43 27
37 42 28 37 32 37 42 23 23 42 41  0]xS 
F2S53 Ji 
3853 2866 M (x)S 
F1S53 Ji 
3903 2866 M ( in )[43 23 41  0]xS 
F2S53 Ji 
4054 2866 M (base)[50 49 50  0]xS 
F1S53 Ji 
4254 2866 M (, and returns )[21 43 37 42 42 43 27 37 24 41 28 42 32  0]xS 
F2S53 Ji 
4755 2866 M (str)[50 50  0]xS 
F1S53 Ji 
4901 2866 M (. If)[21 43 28  0]xS 
F2S53 Ji 
1480 2966 M (str)[50 50  0]xS 
F4S53 Ji 
1630 2966 M (=)S 
F1S53 Ji 
1676 2966 M (null, )[42 42 23 23 21  0]xS 
F2S53 Ji 
1847 2966 M (MP_tostr)[50 50 50 50 50 50 49  0]xS 
F1S53 Ji 
2247 2966 M ( ignores )[21 23 42 42 41 28 37 32  0]xS 
F2S53 Ji 
2533 2966 M (size)[50 50 50  0]xS 
F1S53 Ji 
2733 2966 M ( and allocates the string. See )[21 37 42 41 21 37 23 23 42 37 37 23 37 33 20 24 41 37 21 32 24 27 23 42 42 21 20 47 37 37  0]xS 
F2S53 Ji 
3703 2966 M (AP_tostr)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4098 2966 M (.)S 
F2S53 Ji 
1380 3066 M (T MP_xor\(T z, T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
1380 3166 M (T MP_xori\(T z, T x, unsigned long y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50  0]xS 
F1S53 Ji 
1480 3266 M (set )[32 37 23  0]xS 
F2S53 Ji 
1593 3266 M (z)S 
F1S53 Ji 
1643 3266 M ( to )[21 23 42  0]xS 
F2S53 Ji 
1750 3266 M (x)S 
F1S53 Ji 
1800 3266 M ( )S 
F1S4B Ji 
1821 3266 M (XOR)[54 54  0]xS 
F1S53 Ji 
1979 3266 M ( )S 
F2S53 Ji 
1999 3266 M (y)S 
F1S53 Ji 
2049 3266 M ( and return )[21 37 42 41 21 28 37 23 42 27 42  0]xS 
F2S53 Ji 
2431 3266 M (z)S 
F1S53 Ji 
2481 3266 M (.)S 
; ; LH
(%%[Page: 25]%%) = 
%%PageTrailer

%%Page: 26 26
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (Ring)[84 32 65  0]xS 
F2S53 Ji 
4293 1188 M (T)S 
F0S53 Ji 
4343 1188 M ( is opaque )[21 23 32 21 42 46 42 46 46 37  0]xS 
F2S53 Ji 
4720 1188 M (Ring_T)[50 50 50 50 50  0]xS 
F1S53 Ji 
1380 1349 M (Ring indices run from 0 to )[55 23 42 42 23 23 42 42 23 37 37 32 24 27 42 42 23 28 28 41 65 23 42 23 24 41  0]xS 
F3S53 Ji 
2298 1349 M (N)S 
F4S53 Ji 
2353 1349 M (-1)[46  0]xS 
F1S53 Ji 
2441 1349 M (, where )[20 24 60 42 37 27 37  0]xS 
F3S53 Ji 
2712 1349 M (N)S 
F1S53 Ji 
2768 1349 M ( is the length of the ring. )[24 23 32 24 23 42 37 23 23 37 42 41 24 41 24 41 28 23 24 41 37 24 27 24 41 42 21  0]xS 
3623 1349 M (T)S 
3674 1349 M (he empty ring has no elements. Pointers)[42 37 23 37 65 41 24 41 24 27 24 41 42 23 42 37 32 24 41 42 24 36 24 37 64 37 42 23 33 20 24 46
42 23 42 23 37 27  0]xS 
1380 1449 M (can be added or removed anywhere; rings expand automatically. Rotating a ring changes its origin. It is a)
[37 37 41 29 42 37 29 37 42 41 37 42 29 42 28 29 27 37 65 42 42 37 41 29 37 42 42 60 41 37 28 37
23 29 28 23 42 41 33 29 37 42 41 37 42 42 29 37 41 23 42 65 37 23 23 37 37 23 23 37 21 29 55 42
23 37 23 23 42 42 29 37 29 28 23 41 42 29 37 42 37 41 42 37 32 29 24 23 32 29 42 28 23 41 24 41
21 29 28 23 29 23 33 29  0]xS 
1380 1549 M (c.r.e. to passed a null )[37 21 23 21 37 20 21 23 42 21 41 37 33 32 37 42 21 37 20 42 42 23 23  0]xS 
F2S53 Ji 
2097 1549 M (T)S 
F1S53 Ji 
2147 1549 M ( to any )[21 23 41 21 37 42 42  0]xS 
F2S53 Ji 
2395 1549 M (Ring)[50 50 50  0]xS 
F1S53 Ji 
2594 1549 M ( function.)[21 28 42 41 37 23 23 42 42  0]xS 
F2S53 Ji 
1380 1749 M (void *Ring_add\(T ring, int pos, void *x\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50  0]xS 
4520 1749 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1849 M (inserts )[23 42 32 37 28 23 32  0]xS 
F2S53 Ji 
1718 1849 M (x)S 
F1S53 Ji 
1768 1849 M ( at )[21 37 23  0]xS 
F3S53 Ji 
1868 1849 M (position)[42 41 33 23 23 23 42  0]xS 
F1S53 Ji 
2136 1849 M ( )S 
F2S53 Ji 
2157 1849 M (pos)[50 50  0]xS 
F1S53 Ji 
2307 1849 M ( in )[21 23 41  0]xS 
F2S53 Ji 
2412 1849 M (ring)[50 49 50  0]xS 
F1S53 Ji 
2612 1849 M ( and returns )[21 37 41 42 20 28 37 23 42 27 42 32  0]xS 
F2S53 Ji 
3024 1849 M (x)S 
F1S53 Ji 
3074 1849 M (. Positions identify points between elements; see )[20 20 47 41 33 23 23 23 42 42 32 20 23 42 37 42 23 23 28 41 20 42 42 23 42 23 32 20 42 37 23 60
37 37 42 20 37 23 37 65 37 42 23 32 23 20 33 37 37  0]xS 
F2S53 Ji 
4707 1849 M (Str)[50 50  0]xS 
F1S53 Ji 
4852 1849 M (. It is)[21 20 28 23 20 23  0]xS 
1480 1949 M (a c.r.e. for )[37 21 37 20 24 20 37 21 21 28 41 28  0]xS 
F2S53 Ji 
1836 1949 M (pos)[50 50  0]xS 
F4S53 Ji 
2007 1949 M (<)S 
2073 1949 M (-)S 
F3S53 Ji 
2119 1949 M (N)S 
F1S53 Ji 
2175 1949 M ( or )[21 42 28  0]xS 
F2S53 Ji 
2286 1949 M (pos)[49 50  0]xS 
F4S53 Ji 
2456 1949 M (>)S 
F3S53 Ji 
2523 1949 M (N)S 
F4S53 Ji 
2579 1949 M (+)S 
F1S53 Ji 
2624 1949 M (1, where )[42 21 20 61 41 37 28 37  0]xS 
F3S53 Ji 
2932 1949 M (N)S 
F1S53 Ji 
2987 1949 M ( is the length of )[21 23 33 20 24 41 37 21 23 37 42 41 24 41 21 42 27  0]xS 
F2S53 Ji 
3526 1949 M (ring)[50 50 50  0]xS 
F1S53 Ji 
3726 1949 M (.)S 
F2S53 Ji 
1380 2049 M (void *Ring_addhi\(T ring, void *x\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
 0]xS 
4520 2049 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
1380 2149 M (void *Ring_addlo\(T ring, void *x\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
 0]xS 
4520 2149 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2249 M (adds )[37 41 42 32  0]xS 
F2S53 Ji 
1653 2249 M (x)S 
F1S53 Ji 
1703 2249 M ( to the high \(index )[21 23 42 21 23 41 37 21 42 23 42 41 21 28 23 42 41 37 42  0]xS 
F3S53 Ji 
2335 2249 M (N)S 
F4S53 Ji 
2391 2249 M (-)S 
F1S53 Ji 
2436 2249 M (1\) or low \(index 0\) end of )[42 27 21 42 28 21 23 41 60 21 28 23 42 41 37 42 21 42 27 21 37 42 41 21 42 28  0]xS 
F2S53 Ji 
3318 2249 M (ring)[50 50 50  0]xS 
F1S53 Ji 
3517 2249 M ( and returns )[21 37 42 41 21 28 37 23 42 27 42 33  0]xS 
F2S53 Ji 
3932 2249 M (x)S 
F1S53 Ji 
3981 2249 M (.)S 
F2S53 Ji 
1380 2349 M (void Ring_free\(T *ring\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2449 M (deallocates and clears )[41 37 37 24 23 41 37 37 23 37 33 21 37 41 42 21 37 23 37 37 28 32  0]xS 
F2S53 Ji 
2227 2449 M (*ring)[50 50 50 50  0]xS 
F1S53 Ji 
2477 2449 M (. It is a c.r.e. for )[20 21 28 23 21 23 33 20 37 21 37 21 23 21 37 21 21 27 42 28  0]xS 
F2S53 Ji 
3023 2449 M (ring)[50 50 49  0]xS 
F1S53 Ji 
3223 2449 M ( or )[21 42 28  0]xS 
F2S53 Ji 
3334 2449 M (*ring)[50 50 50 50  0]xS 
F1S53 Ji 
3584 2449 M ( to be null.)[21 23 42 21 41 37 21 42 42 23 23  0]xS 
F2S53 Ji 
1380 2549 M (int Ring_length\(T ring\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2649 M (returns the number of elements in )[27 37 24 41 28 42 32 21 23 42 37 20 42 42 65 41 37 28 21 41 28 21 37 23 37 65 37 42 23 32 21 23
42  0]xS 
F2S53 Ji 
2623 2649 M (ring)[49 50 50  0]xS 
F1S53 Ji 
2823 2649 M (.)S 
F2S53 Ji 
1380 2749 M (void *Ring_get\(T ring, int i\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2849 M (returns the )[27 37 24 41 28 42 32 21 23 42 37  0]xS 
F2S53 Ji 
1855 2849 M (i)S 
F1S53 Ji 
1905 2849 M (th element in ring. It is a c.r.e. for )[24 41 21 37 23 37 65 37 42 23 21 23 41 21 28 23 42 41 21 21 28 23 21 23 32 21 37 21 37 21 23 21
37 21 20 28 42 27  0]xS 
F2S53 Ji 
3040 2849 M (i)S 
F4S53 Ji 
3090 2849 M (<)S 
F1S53 Ji 
3136 2849 M (0 or )[42 20 42 28  0]xS 
F2S53 Ji 
3289 2849 M (i)S 
F4S53 Ji 
3339 2849 M <B3>S 
F3S53 Ji 
3385 2849 M (N)S 
F1S53 Ji 
3440 2849 M (, where )[21 21 60 41 37 28 37  0]xS 
F3S53 Ji 
3706 2849 M (N)S 
F1S53 Ji 
3762 2849 M ( is the length of )[21 23 33 21 23 41 37 21 23 37 42 42 23 41 21 42 28  0]xS 
F2S53 Ji 
4301 2849 M (ring)[50 50 50  0]xS 
F1S53 Ji 
4501 2849 M (.)S 
F2S53 Ji 
1380 2949 M (T Ring_new\(void\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50  0]xS 
4520 2949 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3049 M (creates and returns an empty ring.)[37 27 37 37 24 37 32 21 37 41 42 21 28 37 23 41 28 42 32 21 37 42 20 37 65 42 23 42 21 27 23 42
42  0]xS 
F2S53 Ji 
1380 3149 M (void *Ring_put\(T ring, int i, void *x\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50  0]xS 
4520 3149 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3249 M (changes the )[37 41 37 42 42 37 32 21 23 42 37  0]xS 
F2S53 Ji 
1892 3249 M (i)S 
F1S53 Ji 
1942 3249 M (th element in )[24 41 21 37 23 37 65 37 42 23 21 23 41  0]xS 
F2S53 Ji 
2397 3249 M (ring)[50 50 50  0]xS 
F1S53 Ji 
2597 3249 M ( to )[21 23 42  0]xS 
F2S53 Ji 
2704 3249 M (x)S 
F1S53 Ji 
2754 3249 M ( and returns the previous value. See )[20 37 42 42 20 28 37 23 42 28 41 33 21 23 41 37 21 42 28 37 41 23 42 42 32 21 41 37 24 41 37 21
21 46 37 37  0]xS 
F2S53 Ji 
3961 3249 M (Ring_get)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4361 3249 M ( for c.r.e.)[21 27 42 28 21 37 20 24 20 37  0]xS 
F2S53 Ji 
1380 3349 M (void *Ring_remhi\(T ring\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
1380 3449 M (void *Ring_remlo\(T ring\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3549 M (removes and returns the element at the high end \(index )[27 37 65 42 42 37 32 20 37 42 41 20 28 37 23 42 27 42 33 20 23 41 37 20 37 23 37 65 37 42 23 20
37 23 20 23 42 37 20 42 23 41 42 20 37 42 41 20 28 23 42 42 36 42  0]xS 
F3S53 Ji 
3322 3549 M (N)S 
F4S53 Ji 
3378 3549 M (-)S 
F1S53 Ji 
3424 3549 M (1\) or low end \(index 0\) of )[42 28 20 41 28 20 23 42 60 20 37 42 41 20 28 23 42 42 37 41 20 42 28 20 41 28  0]xS 
F2S53 Ji 
4299 3549 M (ring)[50 50 50  0]xS 
F1S53 Ji 
4499 3549 M (. It is a c.r.e. for)[21 20 27 24 20 23 32 20 37 20 37 21 23 21 37 21 20 28 41  0]xS 
F2S53 Ji 
1480 3649 M (ring)[50 50 50  0]xS 
F1S53 Ji 
1680 3649 M ( to be empty.)[20 24 41 21 42 37 21 37 64 42 23 36  0]xS 
; ; LH
(%%[Page: 26]%%) = 
%%PageTrailer

%%Page: 27 27
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F2S53 Ji 
1380 1166 M (void *Ring_remove\(T ring, int i\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1266 M (removes and returns element )[27 37 65 42 42 37 32 21 37 41 42 21 28 37 23 41 28 42 32 21 37 23 37 65 37 42 23  0]xS 
F2S53 Ji 
2461 1266 M (i)S 
F1S53 Ji 
2511 1266 M ( from )[21 28 28 41 65  0]xS 
F2S53 Ji 
2714 1266 M (ring)[50 50 50  0]xS 
F1S53 Ji 
2914 1266 M (. It is a c.r.e. for )[21 21 27 23 21 23 33 21 37 20 37 21 23 21 37 21 21 28 41 28  0]xS 
F2S53 Ji 
3460 1266 M (i)S 
F4S53 Ji 
3510 1266 M (<)S 
F1S53 Ji 
3556 1266 M (0 or )[41 21 42 27  0]xS 
F2S53 Ji 
3708 1266 M (i)S 
F4S53 Ji 
3758 1266 M <B3>S 
F1S53 Ji 
3804 1266 M (N, where )[60 21 21 60 41 37 28 37  0]xS 
F3S53 Ji 
4130 1266 M (N)S 
F1S53 Ji 
4186 1266 M ( is the length of )[20 24 32 21 23 42 37 20 24 36 42 42 23 42 20 42 28  0]xS 
F2S53 Ji 
4725 1266 M (ring)[50 50 50  0]xS 
F1S53 Ji 
4925 1266 M (.)S 
F2S53 Ji 
1380 1366 M (T Ring_ring\(void *x, ...\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 1366 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1466 M (creates and returns a ring whose elements are the \223\205\224 arguments up to the first null pointer.)
[37 27 37 37 24 37 32 21 37 41 42 21 28 37 23 41 28 42 32 21 37 21 28 23 41 42 21 60 42 41 33 37
20 37 24 37 64 37 42 23 33 20 37 28 37 21 23 42 37 20 37 84 37 21 37 26 41 42 65 37 42 23 32 21
42 41 21 23 42 21 23 41 37 21 28 23 28 32 23 21 42 42 23 23 21 41 42 23 42 23 37 23  0]xS 
F2S53 Ji 
1380 1566 M (void Ring_rotate\(T ring, int n\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1666 M (rotates the origin of )[27 42 23 37 23 37 33 22 23 42 37 22 42 27 24 41 23 42 22 42 28  0]xS 
F2S53 Ji 
2161 1666 M (ring)[50 50 50  0]xS 
F1S53 Ji 
2361 1666 M ( )S 
F2S53 Ji 
2383 1666 M (n)S 
F1S53 Ji 
2433 1666 M ( elements left \()[22 37 23 37 65 37 42 23 32 22 24 37 27 23 23  0]xS 
F2S53 Ji 
2935 1666 M (n)S 
F4S53 Ji 
2985 1666 M (<)S 
F1S53 Ji 
3030 1666 M (0\) or right \()[42 28 22 41 28 22 28 23 42 42 23 22  0]xS 
F2S53 Ji 
3421 1666 M (n)S 
F4S53 Ji 
3471 1666 M <B3>S 
F1S53 Ji 
3516 1666 M (0\). It is a c.r.e. for )[42 28 21 22 27 24 22 23 32 23 37 22 37 21 23 21 37 20 23 27 42 28  0]xS 
F4S53 Ji 
4264 1666 M (<)S 
F1S53 Ji 
4310 1666 M (0 or )[42 22 41 28  0]xS 
F4S53 Ji 
4590 1666 M (>)S 
F1S53 Ji 
4636 1666 M (N, where )[61 20 23 60 41 37 28 37  0]xS 
F3S53 Ji 
4965 1666 M (N)S 
F1S53 Ji 
1480 1766 M (is the length of )[23 32 21 23 42 37 21 23 37 42 41 23 42 21 41 28  0]xS 
F2S53 Ji 
1998 1766 M (ring)[50 50 50  0]xS 
F1S53 Ji 
2198 1766 M (.)S 
: N 4140 1595 M 4264 1595 I 4264 1703 I 4140 1703 I C 
eoclip F5S53 Ji 
4177 1666 M (n)S 
N 4155 1678 M 4155 1680 I 4159 1680 I 4159 1678 I C 
 L N 4155 1603 M 4155 1601 I 4159 1601 I 4159 1603 I C 
 L N 4155 1678 M 4159 1678 I 4159 1603 I 4155 1603 I C 
 L N 4234 1678 M 4234 1680 I 4238 1680 I 4238 1678 I C 
 L N 4234 1603 M 4234 1601 I 4238 1601 I 4238 1603 I C 
 L N 4234 1678 M 4238 1678 I 4238 1603 I 4234 1603 I C 
 L ; : N 4466 1595 M 4590 1595 I 4590 1703 I 4466 1703 I C 
eoclip F5S53 Ji 
4503 1666 M (n)S 
N 4480 1678 M 4480 1680 I 4484 1680 I 4484 1678 I C 
 L N 4480 1603 M 4480 1601 I 4484 1601 I 4484 1603 I C 
 L N 4480 1678 M 4484 1678 I 4484 1603 I 4480 1603 I C 
 L N 4559 1678 M 4559 1680 I 4563 1680 I 4563 1678 I C 
 L N 4559 1603 M 4559 1601 I 4563 1601 I 4563 1603 I C 
 L N 4559 1678 M 4563 1678 I 4563 1603 I 4559 1603 I C 
 L ; ; ; LH
(%%[Page: 27]%%) = 
%%PageTrailer

%%Page: 28 28
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (Sem)[65 51  0]xS 
F2S53 Ji 
4343 1188 M (T)S 
F0S53 Ji 
4393 1188 M ( is opaque )[21 23 32 21 42 46 42 46 46 37  0]xS 
F2S53 Ji 
4770 1188 M (Sem_T)[50 50 50 50  0]xS 
1380 1399 M (typedef struct T { int count; void *queue; } T;)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1380 1599 M (It is an )[27 24 21 23 33 21 37 42  0]xS 
1629 1599 M (u.r.e.)[42 21 23 21 37  0]xS 
1794 1599 M ( error to read or write the fields in a )[21 37 28 27 42 28 21 24 41 22 27 37 37 42 21 42 28 21 60 28 23 24 37 21 23 42 37 21 28 23 37 23
42 32 22 23 42 21 37  0]xS 
F2S53 Ji 
3008 1599 M (T)S 
F1S53 Ji 
3058 1599 M ( directly, or to pass an uninitialized )[21 42 23 28 37 37 23 23 36 21 21 42 28 21 23 42 22 41 37 33 32 21 37 42 22 41 42 23 42 23 23 23
37 23 23 37 37 42  0]xS 
F2S53 Ji 
4251 1599 M (T)S 
F1S53 Ji 
4301 1599 M ( to any )[21 23 42 21 37 42 42  0]xS 
F2S53 Ji 
4550 1599 M (Sem)[50 50  0]xS 
F1S53 Ji 
4700 1599 M ( function.)[21 28 42 41 37 24 23 41 42  0]xS 
1380 1699 M (It is a c.r.e. to pass a null )[27 24 20 24 32 21 37 21 37 20 24 20 37 21 21 23 42 21 41 37 33 32 21 37 21 41 42 23 23  0]xS 
F2S53 Ji 
2224 1699 M (T)S 
F1S53 Ji 
2274 1699 M ( to any )[21 23 42 21 37 41 42  0]xS 
F2S53 Ji 
2522 1699 M (Sem)[50 50  0]xS 
F1S53 Ji 
2672 1699 M ( function, or to call any )[20 28 42 41 37 24 23 41 42 21 21 41 28 21 23 42 21 36 37 24 23 21 37 41 42  0]xS 
F2S53 Ji 
3470 1699 M (Sem)[50 50  0]xS 
F1S53 Ji 
3620 1699 M ( function before calling )[20 28 42 41 37 24 23 41 42 21 42 36 28 42 28 37 20 37 37 24 23 23 41 42  0]xS 
F2S53 Ji 
4420 1699 M (Thread_init)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4970 1699 M (.)S 
1480 1799 M (The syntax of the LOCK statement is as follows; )[51 41 37 21 32 42 42 23 37 42 20 42 28 21 23 41 37 21 51 60 56 60 21 32 23 37 23 37 65 37 42 23
21 23 32 21 37 33 20 28 42 23 23 42 60 32 23  0]xS 
F3S53 Ji 
3129 1799 M (S)S 
F1S53 Ji 
3171 1799 M ( and )[21 37 41 42  0]xS 
F3S53 Ji 
3333 1799 M (m)S 
F1S53 Ji 
3393 1799 M ( denote statements and a )[21 41 37 42 42 23 37 21 32 23 37 23 37 65 37 42 23 32 21 37 42 41 21 37  0]xS 
F2S53 Ji 
4228 1799 M (T)S 
F1S53 Ji 
4272 1799 M (.)S 
F2S53 Ji 
1380 1999 M (LOCK\()[50 50 50 50  0]xS 
F3S53 Ji 
1630 1999 M (m)S 
F2S53 Ji 
1690 1999 M (\) )[50  0]xS 
F3S53 Ji 
1790 1999 M (S)S 
F2S53 Ji 
1832 1999 M ( END_LOCK)[50 50 50 50 50 50 50 50  0]xS 
F3S53 Ji 
1380 2199 M (m)S 
F1S53 Ji 
1440 2199 M ( is locked, statements )[21 23 32 21 23 42 37 42 36 42 21 21 32 23 37 23 37 65 37 42 23 32  0]xS 
F3S53 Ji 
2173 2199 M (S)S 
F1S53 Ji 
2215 2199 M ( are executed and )[21 37 27 37 21 37 42 37 37 41 24 37 41 21 37 42 41  0]xS 
F3S53 Ji 
2816 2199 M (m)S 
F1S53 Ji 
2876 2199 M ( is unlocked. LOCK can raise )[21 23 33 21 41 42 23 42 37 41 37 42 21 21 50 61 55 60 21 37 37 42 20 28 37 23 33 37  0]xS 
F2S53 Ji 
3883 2199 M (Thread_Alerted)[50 50 49 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4582 2199 M (.)S 
F2S53 Ji 
1380 2399 M (void Sem_init\(T *s, int count\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2499 M (sets )[32 37 23 33  0]xS 
F2S53 Ji 
1626 2499 M (s->count)[49 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2025 2499 M ( to )[21 23 42  0]xS 
F2S53 Ji 
2132 2499 M (count)[50 50 50 50  0]xS 
F1S53 Ji 
2382 2499 M (. It is an )[20 21 28 23 21 23 33 20 37 42  0]xS 
2671 2499 M (u.r.e.)[41 21 23 21 37  0]xS 
2835 2499 M ( to call )[21 23 42 21 36 37 24 23  0]xS 
F2S53 Ji 
3083 2499 M (Sem_init)[50 50 50 50 49 50 50  0]xS 
F1S53 Ji 
3483 2499 M ( more than once on the same )[21 65 42 27 37 21 23 42 37 42 20 42 42 37 37 21 41 42 21 23 41 37 21 33 37 64 37  0]xS 
F2S53 Ji 
4456 2499 M (T)S 
F1S53 Ji 
4500 2499 M (.)S 
F2S53 Ji 
1380 2599 M (Sem_T *Sem_new\(int count\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 2599 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2699 M (creates and returns a )[37 27 37 37 24 37 32 21 37 41 42 21 28 37 23 41 28 42 32 21 37  0]xS 
F2S53 Ji 
2183 2699 M (T)S 
F1S53 Ji 
2233 2699 M ( with its )[21 60 23 23 42 21 23 23 32  0]xS 
F2S53 Ji 
2522 2699 M (count)[50 50 50 50  0]xS 
F1S53 Ji 
2772 2699 M ( field initialized to )[21 27 24 37 23 41 21 23 42 23 23 24 36 24 23 37 37 41 21 23 42  0]xS 
F2S53 Ji 
3406 2699 M (count)[50 50 50 50  0]xS 
F1S53 Ji 
3656 2699 M (.)S 
F2S53 Ji 
1380 2799 M (void Sem_wait\(T *s\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50  0]xS 
4320 2799 M (Thread_Alerted)[50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2899 M (wait until )[60 37 23 23 21 42 41 23 24 23  0]xS 
F2S53 Ji 
1818 2899 M (s->count)[50 50 50 49 50 50 50  0]xS 
F4S53 Ji 
2218 2899 M (>)S 
F1S53 Ji 
2263 2899 M (0, then decrements )[42 21 20 24 41 37 42 21 41 37 37 28 37 65 37 41 24 32  0]xS 
F2S53 Ji 
2911 2899 M (s->count)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3311 2899 M (.)S 
F2S53 Ji 
1380 2999 M (void Sem_signal\(T *s\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50  0]xS 
4320 2999 M (Thread_Alerted)[50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3099 M (increments )[23 42 37 27 37 65 37 42 23 32  0]xS 
F2S53 Ji 
1866 3099 M (s->count)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2266 3099 M (.)S 
; ; LH
(%%[Page: 28]%%) = 
%%PageTrailer

%%Page: 29 29
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (Seq)[65 51  0]xS 
F2S53 Ji 
4343 1188 M (T)S 
F0S53 Ji 
4393 1188 M ( is opaque )[21 23 32 21 42 46 42 46 46 37  0]xS 
F2S53 Ji 
4770 1188 M (Seq_T)[50 50 50 50  0]xS 
F1S53 Ji 
1380 1349 M (Sequence indices run from 0 to )[46 37 42 41 37 42 37 37 23 23 42 41 23 37 37 33 23 27 42 42 23 27 28 42 65 22 42 23 23 42  0]xS 
F3S53 Ji 
2452 1349 M (N)S 
F4S53 Ji 
2507 1349 M (-1)[46  0]xS 
F1S53 Ji 
2595 1349 M (, where )[20 23 60 42 37 28 37  0]xS 
F3S53 Ji 
2865 1349 M (N)S 
F1S53 Ji 
2920 1349 M ( is the length of the sequence. )[23 23 33 23 23 41 37 23 23 37 42 42 23 41 23 42 28 23 23 41 37 23 33 37 41 42 37 42 37 37 20  0]xS 
3943 1349 M (T)S 
3994 1349 M (he empty sequence has no ele-)[42 37 23 37 64 42 23 42 23 32 37 42 41 37 42 37 37 23 42 37 32 23 42 41 23 37 23 37  0]xS 
1380 1449 M (ments. Pointers can be added or removed from the low end \(index 0\) or the high end \(index )
[65 37 41 23 33 21 22 46 42 23 41 23 37 28 33 22 37 37 41 22 42 37 22 37 42 41 37 42 22 41 28 22
28 37 65 41 42 37 42 22 27 28 42 65 22 23 41 37 22 24 41 60 22 37 42 42 22 27 24 41 42 37 42 22
41 28 22 42 27 22 24 41 37 22 42 23 42 41 22 37 42 42 22 27 23 42 42 37 41  0]xS 
F3S53 Ji 
4467 1449 M (N)S 
F4S53 Ji 
4522 1449 M (-1)[46  0]xS 
F1S53 Ji 
4609 1449 M (\); sequences)[28 23 22 33 37 41 42 37 42 37 36  0]xS 
1380 1549 M (expand automatically. It is a c.r.e. to passed a null )[37 41 42 37 42 41 21 37 42 23 42 64 37 23 24 37 37 23 23 36 21 21 28 23 21 23 32 21 37 21 37 20
24 20 37 21 21 23 42 21 41 37 33 32 37 42 21 37 20 42 42 23 23  0]xS 
F2S53 Ji 
3054 1549 M (T)S 
F1S53 Ji 
3104 1549 M ( to any )[21 23 41 21 37 42 42  0]xS 
F2S53 Ji 
3352 1549 M (Seq)[50 50  0]xS 
F1S53 Ji 
3501 1549 M ( function.)[21 28 41 42 37 23 23 42 42  0]xS 
F2S53 Ji 
1380 1749 M (void *Seq_addhi\(T seq, void *x\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 1749 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
1380 1849 M (void *Seq_addlo\(T seq, void *x\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 1849 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1949 M (adds )[37 41 42 32  0]xS 
F2S53 Ji 
1653 1949 M (x)S 
F1S53 Ji 
1703 1949 M ( to the high or low end of )[21 23 42 21 23 41 37 21 42 23 42 41 21 42 28 20 24 41 60 21 37 42 41 21 42 28  0]xS 
F2S53 Ji 
2569 1949 M (seq)[50 50  0]xS 
F1S53 Ji 
2719 1949 M ( and returns )[21 37 42 41 21 28 37 23 42 28 41 33  0]xS 
F2S53 Ji 
3133 1949 M (x)S 
F1S53 Ji 
3183 1949 M (.)S 
F2S53 Ji 
1380 2049 M (void Seq_free\(T *seq\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2149 M (deallocates and clears )[41 37 37 24 23 41 37 37 23 37 33 21 37 41 42 21 37 23 37 37 28 32  0]xS 
F2S53 Ji 
2227 2149 M (*seq)[50 50 50  0]xS 
F1S53 Ji 
2427 2149 M (. It is a c.r.e. for )[21 20 28 23 21 23 33 20 37 21 37 21 23 21 37 21 21 27 42 28  0]xS 
F2S53 Ji 
2973 2149 M (seq)[50 50  0]xS 
F1S53 Ji 
3123 2149 M ( or )[20 42 28  0]xS 
F2S53 Ji 
3234 2149 M (*seq)[50 49 50  0]xS 
F1S53 Ji 
3434 2149 M ( to be null.)[21 23 42 21 42 37 20 42 42 23 23  0]xS 
F2S53 Ji 
1380 2249 M (int Seq_length\(T seq\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2349 M (returns the number of elements in )[27 37 24 41 28 42 32 21 23 42 37 20 42 42 65 41 37 28 21 41 28 21 37 23 37 65 37 42 23 32 21 23
42  0]xS 
F2S53 Ji 
2623 2349 M (seq)[49 50  0]xS 
F1S53 Ji 
2773 2349 M (.)S 
F2S53 Ji 
1380 2449 M (void *Seq_get\(T seq, int i\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2549 M (returns the )[27 37 24 41 28 42 32 21 23 42 37  0]xS 
F2S53 Ji 
1855 2549 M (i)S 
F1S53 Ji 
1905 2549 M (th element in )[24 41 21 37 23 37 65 37 42 23 21 23 41  0]xS 
F2S53 Ji 
2360 2549 M (seq)[50 50  0]xS 
F1S53 Ji 
2510 2549 M (. It is a c.r.e. for )[21 21 28 23 21 23 32 21 37 21 37 20 24 20 37 21 21 28 41 28  0]xS 
F2S53 Ji 
3056 2549 M (i)S 
F4S53 Ji 
3106 2549 M (<)S 
F1S53 Ji 
3152 2549 M (0 or )[41 21 42 28  0]xS 
F2S53 Ji 
3305 2549 M (i)S 
F4S53 Ji 
3355 2549 M <B3>S 
F3S53 Ji 
3400 2549 M (N)S 
F1S53 Ji 
3456 2549 M (, where )[20 21 60 42 37 28 37  0]xS 
F3S53 Ji 
3722 2549 M (N)S 
F1S53 Ji 
3777 2549 M ( is the length of )[21 23 33 20 24 41 37 21 23 37 42 41 24 41 21 42 27  0]xS 
F2S53 Ji 
4316 2549 M (seq)[50 50  0]xS 
F1S53 Ji 
4466 2549 M (.)S 
F2S53 Ji 
1380 2649 M (T Seq_new\(int hint\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50  0]xS 
4520 2649 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2749 M (creates and returns an empty sequence. )[37 27 37 37 24 37 32 27 37 42 41 28 27 37 24 41 28 42 32 27 37 42 27 37 65 42 23 41 28 32 37 42
41 37 42 37 37 21  0]xS 
F2S53 Ji 
2839 2749 M (hint)[50 50 50  0]xS 
F1S53 Ji 
3039 2749 M ( is an estimate of the maximum size of the sequence. It is)[27 23 33 27 37 42 27 37 32 23 24 64 37 23 37 28 41 28 27 23 42 37 27 65 37 42 23 65 41 65 27 33
23 37 37 27 42 28 27 23 42 37 27 32 37 42 42 37 41 37 37 21 27 28 23 27 23  0]xS 
1480 2849 M (c.r.e for )[37 21 23 21 37 20 28 42 27  0]xS 
F2S53 Ji 
1757 2849 M (hint)[50 50 50  0]xS 
F4S53 Ji 
1957 2849 M (<)S 
F1S53 Ji 
2003 2849 M (0.)[42  0]xS 
F2S53 Ji 
1380 2949 M (void *Seq_put\(T seq, int i, void *x\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50  0]xS 
F1S53 Ji 
1480 3049 M (changes the )[37 41 37 42 42 37 32 21 23 42 37  0]xS 
F2S53 Ji 
1892 3049 M (i)S 
F1S53 Ji 
1942 3049 M (th element in )[24 41 21 37 23 37 65 37 42 23 21 23 41  0]xS 
F2S53 Ji 
2397 3049 M (seq)[50 50  0]xS 
F1S53 Ji 
2547 3049 M ( to )[21 23 42  0]xS 
F2S53 Ji 
2654 3049 M (x)S 
F1S53 Ji 
2704 3049 M ( and returns the previous value. See )[20 37 42 42 20 28 37 23 42 28 41 33 21 23 41 37 21 42 28 37 41 23 42 42 32 21 42 36 24 41 37 21
21 46 37 37  0]xS 
F2S53 Ji 
3911 3049 M (Seq_get)[50 50 50 50 50 50  0]xS 
F1S53 Ji 
4261 3049 M ( for c.r.e.)[21 27 42 28 21 37 20 24 20 37  0]xS 
F2S53 Ji 
1380 3149 M (void *Seq_remhi\(T seq\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50  0]xS 
1380 3249 M (void *Seq_remlo\(T seq\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3349 M (remove and return the element at the high or low end of )[27 37 65 42 42 37 20 37 42 42 20 28 37 23 42 28 41 21 23 42 37 21 37 23 37 65 37 41 23 21 37 23
21 23 42 37 21 42 23 41 42 21 41 28 21 23 42 60 21 37 41 42 21 41 28  0]xS 
F2S53 Ji 
3358 3349 M (seq)[50 50  0]xS 
F1S53 Ji 
3508 3349 M (. It is a c.r.e. for )[21 21 27 24 20 23 33 21 37 21 36 21 23 21 37 21 21 28 41 28  0]xS 
F2S53 Ji 
4054 3349 M (seq)[50 50  0]xS 
F1S53 Ji 
4204 3349 M ( to be empty.)[21 23 41 21 42 37 21 37 64 42 23 36  0]xS 
F2S53 Ji 
1380 3449 M (T Seq_seq\(void *x, ...\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 3449 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3549 M (creates and returns a sequence whose elements are the \223\205\224 arguments up to the first null pointer.)
[37 27 37 37 24 37 32 21 37 41 42 21 28 37 23 41 28 42 32 21 37 21 32 37 42 41 37 42 37 37 21 60
42 41 33 37 21 37 23 37 64 37 42 23 33 20 37 28 37 21 23 42 37 21 37 83 37 21 37 26 42 41 65 37
42 23 32 21 42 41 21 23 42 21 23 42 36 21 28 23 28 32 23 21 42 42 23 23 21 41 42 23 42 23 37 23
 0]xS 
; ; LH
(%%[Page: 29]%%) = 
%%PageTrailer

%%Page: 30 30
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (Set)[65 51  0]xS 
F2S53 Ji 
4343 1188 M (T)S 
F0S53 Ji 
4393 1188 M ( is opaque )[21 23 32 21 42 46 42 46 46 37  0]xS 
F2S53 Ji 
4770 1188 M (Set_T)[50 50 50 50  0]xS 
F1S53 Ji 
1380 1349 M (It is a c.r.e. to pass a null )[27 24 39 23 32 40 37 39 37 21 23 21 37 21 39 23 42 39 42 37 32 32 40 37 39 42 41 23 24  0]xS 
F2S53 Ji 
2372 1349 M (member)[50 50 50 50 50  0]xS 
F1S53 Ji 
2672 1349 M ( or )[39 42 27  0]xS 
F2S53 Ji 
2820 1349 M (T)S 
F1S53 Ji 
2870 1349 M ( to any )[39 23 42 39 37 42 41  0]xS 
F2S53 Ji 
3173 1349 M (Set)[50 50  0]xS 
F1S53 Ji 
3323 1349 M ( function, except for )[39 28 41 42 37 23 23 42 42 20 40 37 41 37 37 42 23 39 28 42 27  0]xS 
F2S53 Ji 
4093 1349 M (Set_diff)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4493 1349 M (, )[20  0]xS 
F2S53 Ji 
4553 1349 M (Set_inter)[50 50 50 50 50 49 50 50  0]xS 
F1S53 Ji 
4999 1349 M (,)S 
F2S53 Ji 
1380 1449 M (Set_minus)[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1830 1449 M (, and )[20 21 37 42 41  0]xS 
F2S53 Ji 
2012 1449 M (Set_union)[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2462 1449 M (, which interpret a null )[21 21 60 41 24 37 41 21 23 42 23 37 28 41 28 37 23 21 37 21 42 41 23 23  0]xS 
F2S53 Ji 
3239 1449 M (T)S 
F1S53 Ji 
3289 1449 M ( as the empty set.)[21 37 32 21 23 42 37 21 37 65 41 23 42 21 32 37 23  0]xS 
F2S53 Ji 
1380 1649 M (T Set_diff\(T s, T t\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50  0]xS 
4520 1649 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1749 M (returns the symmetric difference )[27 37 24 41 28 42 32 22 24 41 37 23 32 42 64 65 37 23 28 23 37 22 42 23 27 27 37 28 37 42 37 37
 0]xS 
F2S53 Ji 
2590 1749 M (s)S 
F4S53 Ji 
2661 1749 M (/)S 
F2S53 Ji 
2705 1749 M (t)S 
F1S53 Ji 
2755 1749 M (: a set whose members appear in only one of )[23 22 37 22 33 37 23 22 60 42 42 32 37 22 65 37 65 42 37 27 33 22 37 42 41 37 37 28 22 24 41 23
41 42 23 42 22 42 41 37 23 41 28  0]xS 
F2S53 Ji 
4273 1749 M (s)S 
F1S53 Ji 
4323 1749 M ( or )[23 41 28  0]xS 
F2S53 Ji 
4437 1749 M (t)S 
F1S53 Ji 
4487 1749 M (. It is a c.r.e. for)[21 22 28 23 23 23 32 23 37 22 37 21 23 21 37 20 23 28 41  0]xS 
1480 1849 M (both )[41 42 23 42  0]xS 
F2S53 Ji 
1649 1849 M (s)S 
F4S53 Ji 
1699 1849 M (=)S 
F1S53 Ji 
1745 1849 M (null and )[42 42 23 23 21 37 41 42  0]xS 
F2S53 Ji 
2036 1849 M (t)S 
F4S53 Ji 
2086 1849 M (=)S 
F1S53 Ji 
2132 1849 M (null, or for nonnull )[41 42 23 23 21 21 41 28 21 28 41 28 21 42 41 42 42 41 23 24  0]xS 
F2S53 Ji 
2787 1849 M (s)S 
F1S53 Ji 
2836 1849 M ( and )[21 37 42 41  0]xS 
F2S53 Ji 
2998 1849 M (t)S 
F1S53 Ji 
3048 1849 M ( have different )[21 42 37 41 37 21 42 23 26 28 37 28 37 41 23  0]xS 
F2S53 Ji 
3553 1849 M (cmp)[50 50  0]xS 
F1S53 Ji 
3703 1849 M ( and )[21 37 42 41  0]xS 
F2S53 Ji 
3865 1849 M (hash)[50 50 50  0]xS 
F1S53 Ji 
4065 1849 M ( functions.)[21 28 41 42 37 23 23 42 41 33  0]xS 
F2S53 Ji 
1380 1949 M (void Set_free\(T *set\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2049 M (deallocates and clears )[41 37 37 24 23 41 37 37 23 37 33 21 37 41 42 21 37 23 37 37 28 32  0]xS 
F2S53 Ji 
2227 2049 M (*set)[50 50 50  0]xS 
F1S53 Ji 
2427 2049 M (. It is a c.r.e. for )[21 20 28 23 21 23 33 20 37 21 37 21 23 21 37 21 21 27 42 28  0]xS 
F2S53 Ji 
2973 2049 M (set)[50 50  0]xS 
F1S53 Ji 
3123 2049 M ( or )[20 42 28  0]xS 
F2S53 Ji 
3234 2049 M (*set)[50 49 50  0]xS 
F1S53 Ji 
3434 2049 M ( to be null.)[21 23 42 21 42 37 20 42 42 23 23  0]xS 
F2S53 Ji 
1380 2149 M (T Set_inter\(T s, T t\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 2149 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2249 M (returns )[27 37 24 41 28 42 32  0]xS 
F2S53 Ji 
1732 2249 M (s)S 
F4S53 Ji 
1803 2249 M <C7>S 
F2S53 Ji 
1888 2249 M (t)S 
F1S53 Ji 
1938 2249 M (: a set whose members appears in )[24 20 37 21 33 37 23 21 60 41 42 32 37 21 65 37 65 41 37 28 33 20 37 42 42 37 37 27 33 21 23 41
 0]xS 
F2S53 Ji 
3073 2249 M (s)S 
F1S53 Ji 
3123 2249 M ( and )[21 37 42 41  0]xS 
F2S53 Ji 
3285 2249 M (t)S 
F1S53 Ji 
3335 2249 M (. See )[21 21 46 37 37  0]xS 
F2S53 Ji 
3518 2249 M (Set_diff)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3918 2249 M ( for c.r.e.)[20 28 42 28 20 37 21 23 21 37  0]xS 
F2S53 Ji 
1380 2349 M (int Set_length\(T set\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2449 M (returns the number of elements in )[27 37 24 41 28 42 32 21 23 42 37 20 42 42 65 41 37 28 21 41 28 21 37 23 37 65 37 42 23 32 21 23
42  0]xS 
F2S53 Ji 
2623 2449 M (set)[49 50  0]xS 
F1S53 Ji 
2773 2449 M (.)S 
F2S53 Ji 
1380 2549 M (void Set_map\(T set,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50  0]xS 
1580 2649 M (void apply\(const void *member, void *cl\), void *cl\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 49  0]xS 
F1S53 Ji 
1480 2749 M (calls )[37 37 23 23 32  0]xS 
F2S53 Ji 
1653 2749 M (apply\(member)[50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2250 2749 M (, )[20  0]xS 
F2S53 Ji 
2291 2749 M (cl\))[50 50  0]xS 
F1S53 Ji 
2441 2749 M ( for each )[21 28 41 28 21 37 37 37 42  0]xS 
F2S53 Ji 
2754 2749 M (member)[50 50 50 50 50  0]xS 
F4S53 Ji 
3074 2749 M <CE>S 
F2S53 Ji 
3154 2749 M (set)[50 50  0]xS 
F1S53 Ji 
3304 2749 M (. It is a c.r.e. for )[21 21 28 23 21 23 32 21 37 21 37 21 23 20 37 21 21 28 41 28  0]xS 
F2S53 Ji 
3850 2749 M (apply)[50 50 50 50  0]xS 
F1S53 Ji 
4100 2749 M ( to change )[21 23 42 20 37 42 37 42 41 37  0]xS 
F2S53 Ji 
4463 2749 M (set)[50 50  0]xS 
F1S53 Ji 
4613 2749 M (.)S 
F2S53 Ji 
1380 2849 M (int Set_member\(T set, const void *member\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2949 M (returns 1 if )[27 37 24 41 28 42 32 21 42 20 24 27  0]xS 
F2S53 Ji 
1866 2949 M (member)[50 50 50 50 50  0]xS 
F4S53 Ji 
2187 2949 M <CE>S 
F2S53 Ji 
2267 2949 M (set)[50 50  0]xS 
F1S53 Ji 
2417 2949 M ( and 0 otherwise.)[21 37 41 42 21 41 21 42 23 42 37 27 61 23 32 37  0]xS 
F2S53 Ji 
1380 3049 M (T Set_minus\(T s, T t\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 3049 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3149 M (returns the difference )[27 37 24 41 28 42 32 21 23 42 37 20 42 23 27 27 37 28 37 42 37 37  0]xS 
F2S53 Ji 
2212 3149 M (s)S 
F4S53 Ji 
2282 3149 M (-)S 
F2S53 Ji 
2349 3149 M (t)S 
F1S53 Ji 
2399 3149 M (: a set whose members appear in )[23 21 37 20 33 37 23 21 60 42 41 33 37 20 65 37 65 42 37 27 33 21 37 41 42 37 37 28 20 24 41  0]xS 
F2S53 Ji 
3502 3149 M (s)S 
F1S53 Ji 
3552 3149 M ( but not in )[21 42 41 23 21 42 41 24 20 24 41  0]xS 
F2S53 Ji 
3913 3149 M (t)S 
F1S53 Ji 
3963 3149 M (. See )[21 21 46 37 37  0]xS 
F2S53 Ji 
4146 3149 M (Set_diff)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4546 3149 M ( for c.r.e.)[20 28 42 27 21 37 21 23 21 37  0]xS 
F2S53 Ji 
1380 3249 M (T Set_new\(int hint,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50  0]xS 
4520 3249 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
1580 3349 M (int cmp\(const void *x, const void *y\),)[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50  0]xS 
1580 3449 M (unsigned hash\(const void *x\)\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3549 M (creates, initializes, and returns an empty set. See )[37 27 37 37 24 37 32 21 32 23 41 23 24 23 37 23 23 37 37 32 21 32 37 42 41 32 28 37 23 42 27 42
32 32 37 42 31 37 65 42 23 42 31 33 37 23 21 31 47 37 37  0]xS 
F2S53 Ji 
3203 3549 M (Table_new)[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3652 3549 M ( for an explanation of )[32 28 41 28 32 37 41 32 37 42 41 24 37 41 37 23 24 41 42 32 41 28  0]xS 
F2S53 Ji 
4445 3549 M (hint)[50 50 50  0]xS 
F1S53 Ji 
4645 3549 M (, )[20  0]xS 
F2S53 Ji 
4697 3549 M (cmp)[50 50  0]xS 
F1S53 Ji 
4847 3549 M (, and)[21 32 37 41  0]xS 
F2S53 Ji 
1480 3649 M (hash)[50 50 50  0]xS 
F1S53 Ji 
1680 3649 M (.)S 
; ; LH
(%%[Page: 30]%%) = 
%%PageTrailer

%%Page: 31 31
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F2S53 Ji 
1380 1166 M (void Set_put\(T set, const void *member\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50  0]xS 
4520 1166 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1266 M (adds )[37 41 42 32  0]xS 
F2S53 Ji 
1653 1266 M (member)[50 50 50 50 50  0]xS 
F1S53 Ji 
1953 1266 M ( to )[21 23 42  0]xS 
F2S53 Ji 
2060 1266 M (set)[50 49  0]xS 
F1S53 Ji 
2210 1266 M (, if necessary.)[21 21 23 28 21 41 37 37 37 33 32 37 28 36  0]xS 
F2S53 Ji 
1380 1366 M (void *Set_remove\(T set, const void *member\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1466 M (removes )[27 37 65 42 42 37 32  0]xS 
F2S53 Ji 
1818 1466 M (member)[50 50 50 50 50  0]xS 
F1S53 Ji 
2118 1466 M ( from )[56 28 28 41 65  0]xS 
F2S53 Ji 
2392 1466 M (set)[50 50  0]xS 
F1S53 Ji 
2542 1466 M (, if )[21 56 23 28  0]xS 
F2S53 Ji 
2726 1466 M (member)[50 50 50 50 50  0]xS 
F4S53 Ji 
3047 1466 M <CE>S 
F2S53 Ji 
3127 1466 M (set)[50 50  0]xS 
F1S53 Ji 
3277 1466 M (, and returns the removed member; otherwise,)[21 56 37 41 42 56 28 37 23 42 27 42 32 57 23 41 37 56 28 37 65 42 41 37 42 56 65 37 65 41 37 28
23 56 42 23 42 37 27 61 23 32 37  0]xS 
F2S53 Ji 
1480 1566 M (Set_remove)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1980 1566 M ( returns null.)[20 28 37 23 42 28 41 33 20 42 42 23 23  0]xS 
F2S53 Ji 
1380 1666 M (void **Set_toArray\(T set, void *end\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50  0]xS 
4520 1666 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1766 M (creates a )[37 27 37 37 24 37 32 20 37  0]xS 
F3S53 Ji 
1788 1766 M (N)S 
F4S53 Ji 
1843 1766 M (+)S 
F1S53 Ji 
1889 1766 M (1-element array that holds the )[41 28 37 23 37 65 37 42 23 20 37 27 28 37 42 20 23 41 37 23 20 42 42 23 41 33 19 24 41 37  0]xS 
F3S53 Ji 
2899 1766 M (N)S 
F1S53 Ji 
2955 1766 M ( members in )[19 65 37 65 42 37 27 33 20 23 41  0]xS 
F2S53 Ji 
3384 1766 M (set)[50 50  0]xS 
F1S53 Ji 
3534 1766 M ( in an unspecified order and returns a pointer)[20 23 42 19 37 42 20 41 42 32 42 37 37 23 28 23 37 42 20 41 28 42 37 27 20 37 42 41 20 28 37 23
42 27 42 32 20 37 20 42 41 23 42 23 37  0]xS 
1480 1866 M (to the first element. Element )[23 42 20 24 41 37 21 28 23 28 32 23 21 37 23 37 65 37 42 23 21 20 51 23 37 65 37 42 23  0]xS 
F3S53 Ji 
2447 1866 M (N)S 
F1S53 Ji 
2502 1866 M ( is )[21 23 33  0]xS 
F2S53 Ji 
2600 1866 M (end)[49 50  0]xS 
F1S53 Ji 
2750 1866 M (.)S 
F2S53 Ji 
1380 1966 M (T Set_union\(T s, T t\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 1966 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2066 M (returns )[27 37 24 41 28 42 32  0]xS 
F2S53 Ji 
1732 2066 M (s)S 
F4S53 Ji 
1803 2066 M <C8>S 
F2S53 Ji 
1888 2066 M (t)S 
F1S53 Ji 
1938 2066 M (: a set whose members appear in )[24 20 37 21 33 37 23 21 60 41 42 32 37 21 65 37 65 41 37 28 33 20 37 42 42 37 37 27 21 23 42  0]xS 
F2S53 Ji 
3041 2066 M (s)S 
F1S53 Ji 
3091 2066 M ( or )[21 41 28  0]xS 
F2S53 Ji 
3202 2066 M (t)S 
F1S53 Ji 
3252 2066 M (. See )[21 20 47 37 37  0]xS 
F2S53 Ji 
3435 2066 M (Set_diff)[49 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3834 2066 M ( for c.r.e.)[21 28 42 27 21 37 21 23 21 37  0]xS 
; ; LH
(%%[Page: 31]%%) = 
%%PageTrailer

%%Page: 32 32
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (Stack)[59 39 58 52  0]xS 
F2S53 Ji 
4243 1188 M (T)S 
F0S53 Ji 
4293 1188 M ( is opaque )[21 23 32 21 42 46 42 46 46 37  0]xS 
F2S53 Ji 
4670 1188 M (Stack_T)[50 50 50 50 50 50  0]xS 
F1S53 Ji 
1380 1349 M (It is a c.r.e. to pass null )[27 24 20 24 32 21 37 21 37 20 24 20 37 21 21 23 42 21 41 37 33 32 21 42 41 23 24  0]xS 
F2S53 Ji 
2167 1349 M (T)S 
F1S53 Ji 
2216 1349 M ( to any )[21 23 42 21 37 41 42  0]xS 
F2S53 Ji 
2464 1349 M (Stack)[50 50 50 50  0]xS 
F1S53 Ji 
2714 1349 M ( function.)[21 27 42 42 37 23 23 42 41  0]xS 
F2S53 Ji 
1380 1549 M (int Stack_empty\(T stk\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1649 M (returns 1 if )[27 37 24 41 28 42 32 21 42 20 24 27  0]xS 
F2S53 Ji 
1866 1649 M (stk)[50 50  0]xS 
F1S53 Ji 
2016 1649 M ( is empty and 0 otherwise.)[21 23 32 21 37 65 42 23 41 21 37 42 42 20 42 21 41 24 41 37 28 60 23 33 37  0]xS 
F2S53 Ji 
1380 1749 M (void Stack_free\(T *stk\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1849 M (deallocates and clears )[41 37 37 24 23 41 37 37 23 37 33 21 37 41 42 21 37 23 37 37 28 32  0]xS 
F2S53 Ji 
2227 1849 M (*stk)[50 50 50  0]xS 
F1S53 Ji 
2427 1849 M (. It is a c.r.e. for )[21 20 28 23 21 23 33 20 37 21 37 21 23 21 37 21 21 27 42 28  0]xS 
F2S53 Ji 
2973 1849 M (stk)[50 50  0]xS 
F1S53 Ji 
3123 1849 M ( or )[20 42 28  0]xS 
F2S53 Ji 
3234 1849 M (*stk)[50 49 50  0]xS 
F1S53 Ji 
3434 1849 M ( to be null.)[21 23 42 21 42 37 20 42 42 23 23  0]xS 
F2S53 Ji 
1380 1949 M (T Stack_new\(void\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50  0]xS 
4520 1949 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2049 M (returns a new, empty )[27 37 24 41 28 42 32 21 37 21 41 37 55 21 21 37 64 42 23 42  0]xS 
F2S53 Ji 
2194 2049 M (T)S 
F1S53 Ji 
2238 2049 M (.)S 
F2S53 Ji 
1380 2149 M (void *Stack_pop\(T stk\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2249 M (pops and returns the top element on )[41 42 42 32 21 37 42 41 21 28 37 23 42 27 42 32 21 23 42 37 21 23 42 41 21 37 23 37 65 37 42 23
21 41 42  0]xS 
F2S53 Ji 
2690 2249 M (stk)[50 50  0]xS 
F1S53 Ji 
2840 2249 M (. It is a c.r.e. for )[20 21 28 23 21 23 32 21 37 21 37 21 23 21 37 21 21 27 42 28  0]xS 
F2S53 Ji 
3386 2249 M (stk)[50 50  0]xS 
F1S53 Ji 
3536 2249 M ( to be empty.)[21 23 42 21 41 37 21 37 65 42 23 36  0]xS 
F2S53 Ji 
1380 2349 M (void Stack_push\(T stk, void *x\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 2349 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2449 M (pushes )[41 42 32 42 37 32  0]xS 
F2S53 Ji 
1727 2449 M (x)S 
F1S53 Ji 
1777 2449 M ( onto )[21 42 41 24 41  0]xS 
F2S53 Ji 
1967 2449 M (stk)[50 50  0]xS 
F1S53 Ji 
2117 2449 M (.)S 
; ; LH
(%%[Page: 32]%%) = 
%%PageTrailer

%%Page: 33 33
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (Str)[59 39  0]xS 
F1S53 Ji 
1380 1349 M (The )[51 41 37  0]xS 
F2S53 Ji 
1529 1349 M (Str)[50 50  0]xS 
F1S53 Ji 
1679 1349 M ( functions manipulated null-terminated strings. Positions identify points )
[19 28 41 42 37 23 23 42 42 32 19 65 37 42 23 42 41 23 37 24 37 41 20 41 42 23 23 28 23 37 28 65
23 41 37 24 37 41 20 32 23 28 23 42 41 33 21 19 46 42 32 24 23 23 41 42 33 19 23 42 37 41 24 23
27 42 19 42 42 23 42 23 32  0]xS 
4081 1349 M (between)[41 37 23 60 37 37  0]xS 
4358 1349 M ( characters; e.g., the)[19 37 42 37 28 37 37 23 37 28 32 23 20 37 20 42 21 21 19 23 42  0]xS 
1380 1449 M (positions in STRING are )[41 42 32 24 23 23 42 41 33 20 24 41 21 46 51 56 28 60 60 21 37 27 37  0]xS 
1380 1949 M (Two positions can be given in either order. )[45 60 42 20 41 42 32 23 24 23 41 42 32 20 37 37 42 20 42 37 20 41 23 42 37 42 20 23 41 20 37 23
24 41 37 28 20 42 27 42 37 23 21  0]xS 
F2S53 Ji 
2813 1949 M (Str)[50 50  0]xS 
F1S53 Ji 
2963 1949 M ( functions that create strings allocate space for their results. In)
[20 28 41 42 37 23 23 42 41 33 20 23 42 37 23 20 37 27 37 37 24 37 19 33 23 28 23 42 41 33 20 37
23 23 42 36 37 24 37 20 32 42 37 37 37 20 27 42 28 20 23 41 37 24 27 20 28 37 32 42 23 23 33 21
20 27  0]xS 
1380 2049 M (the descriptions below, )[23 42 37 22 41 37 33 37 28 23 41 24 23 41 42 32 23 41 37 23 42 55 21  0]xS 
F2S53 Ji 
2170 2049 M (s[i:j])[50 50 50 50 50  0]xS 
F1S53 Ji 
2470 2049 M ( denotes the substring of )[22 42 37 41 42 23 37 33 22 23 42 37 22 32 42 42 32 23 28 23 42 41 23 41 28  0]xS 
F2S53 Ji 
3313 2049 M (s)S 
F1S53 Ji 
3363 2049 M ( between positions )[23 41 37 23 61 37 37 41 22 42 42 32 23 23 24 41 42 32  0]xS 
F2S53 Ji 
4008 2049 M (i)S 
F1S53 Ji 
4058 2049 M ( and )[22 37 42 41  0]xS 
F2S53 Ji 
4223 2049 M (j)S 
F1S53 Ji 
4273 2049 M (.  It is a c.r.e. to pass a)[21 23 22 28 23 22 23 33 22 37 22 37 21 23 21 37 21 22 23 42 22 42 37 32 33 22  0]xS 
1380 2149 M (nonexistent position or a null character pointer to any )[41 42 42 37 41 23 33 23 37 42 23 23 42 41 33 23 23 23 42 42 23 41 28 23 37 24 41 42 23 23 24 37
41 37 28 37 37 23 37 28 23 42 41 24 41 23 37 28 23 23 42 23 37 42 42  0]xS 
F2S53 Ji 
3204 2149 M (Str)[50 50  0]xS 
F1S53 Ji 
3354 2149 M ( function, except as specified for )[23 28 42 41 37 23 23 42 42 21 23 37 41 37 37 42 23 24 37 32 23 33 41 37 37 23 28 23 37 42 23 28
42 27  0]xS 
F2S53 Ji 
4477 2149 M (Str_catv)[50 49 50 50 50 50 50  0]xS 
F1S53 Ji 
4877 2149 M ( and)[24 37 41  0]xS 
F2S53 Ji 
1380 2249 M (Str_map)[50 50 50 50 50 50  0]xS 
F1S53 Ji 
1730 2249 M (.)S 
F2S53 Ji 
1380 2449 M (int Str_any\(const char *s, int i, const char *set\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2549 M (returns the positive position in )[27 37 24 41 28 42 32 23 23 42 37 23 42 41 33 23 23 23 42 37 23 41 42 32 24 23 23 42 41 23 23 42
 0]xS 
F2S53 Ji 
2525 2549 M (s)S 
F1S53 Ji 
2575 2549 M ( after )[23 37 28 23 37 28  0]xS 
F2S53 Ji 
2774 2549 M (s[i:i+1])[50 50 50 50 50 50 49  0]xS 
F1S53 Ji 
3174 2549 M ( if that character appears in )[23 24 27 23 24 41 37 23 23 37 42 37 28 37 37 23 37 28 23 37 41 42 37 37 28 32 23 23 42  0]xS 
F2S53 Ji 
4112 2549 M (set)[50 50  0]xS 
F1S53 Ji 
4262 2549 M (, or 0 otherwise. It is a)[21 23 41 28 23 42 23 41 24 41 37 28 60 23 33 37 20 23 28 23 23 23 33 23  0]xS 
1480 2649 M (c.r.e. for )[37 21 23 21 37 20 21 28 42 27  0]xS 
F2S53 Ji 
1778 2649 M (set)[50 50  0]xS 
F4S53 Ji 
1928 2649 M (=)S 
F1S53 Ji 
1974 2649 M (null.)[41 42 23 23  0]xS 
F2S53 Ji 
1380 2749 M (char *Str_cat\(const char *s1, int i1, int j1,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 2749 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
1580 2849 M (const char *s2, int i2, int j2\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2949 M (returns )[27 37 24 41 28 42 32  0]xS 
F2S53 Ji 
1732 2949 M (s1[i1:j1])[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2182 2949 M ( concatenated with )[20 37 42 42 37 37 23 37 41 37 24 37 41 21 60 23 24 41  0]xS 
F2S53 Ji 
2827 2949 M (s2[i2:j2])[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3277 2949 M (.)S 
F2S53 Ji 
1380 3049 M (char *Str_catv\(const char *s, ...\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50  0]xS 
4520 3049 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3149 M (returns a string consisted of the triples in \223\205\224 up to a null pointer. Each triple specifies an )
[27 37 24 41 28 42 32 21 37 21 32 23 28 23 42 41 21 37 42 42 32 23 32 24 37 41 21 42 27 21 23 42
37 21 23 28 23 42 23 37 32 21 23 42 21 37 83 37 21 41 42 21 23 42 20 37 21 42 41 24 23 21 41 42
23 42 23 37 23 21 21 51 36 37 42 21 23 28 23 42 23 37 21 32 42 37 37 23 27 24 37 32 21 37 41  0]xS 
F2S53 Ji 
4503 3149 M (s[i:j])[50 50 50 50 50  0]xS 
F1S53 Ji 
4803 3149 M (.)S 
F2S53 Ji 
1380 3249 M (int Str_chr\(const char *s, int i, int j, int c\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3349 M (returns the position in )[27 37 24 41 28 42 32 21 23 42 37 20 42 42 32 23 23 24 41 42 21 23 42  0]xS 
F2S53 Ji 
2230 3349 M (s)S 
F1S53 Ji 
2280 3349 M ( before the leftmost occurrence of )[21 42 37 28 41 28 37 21 23 42 37 20 23 37 28 23 65 42 32 23 21 42 37 37 41 28 28 37 42 37 36 21
42 28  0]xS 
F2S53 Ji 
3427 3349 M (c)S 
F1S53 Ji 
3477 3349 M ( in )[21 23 42  0]xS 
F2S53 Ji 
3583 3349 M (s[i:j])[50 50 50 50 50  0]xS 
F1S53 Ji 
3883 3349 M (, or 0 otherwise)[21 20 42 28 21 41 21 42 23 42 37 27 60 24 32  0]xS 
F2S53 Ji 
4401 3349 M (.)S 
1380 3449 M (int Str_cmp\(const char *s1, int i1, int j1,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50  0]xS 
1580 3549 M (const char *s2, int i2, int j2\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3649 M (returns an integer )[27 37 24 41 28 42 32 57 37 42 57 24 41 23 37 42 37 28  0]xS 
F4S53 Ji 
2193 3649 M (<)S 
F1S53 Ji 
2239 3649 M (0, )[41 21  0]xS 
F4S53 Ji 
2359 3649 M (=)S 
F1S53 Ji 
2404 3649 M (0, or )[42 21 57 42 27  0]xS 
F4S53 Ji 
2651 3649 M (>)S 
F1S53 Ji 
2697 3649 M (0 if )[42 57 24 27  0]xS 
F2S53 Ji 
2904 3649 M (s1[i1:j1])[50 50 50 50 50 50 49 50  0]xS 
F4S53 Ji 
3354 3649 M (<)S 
F2S53 Ji 
3399 3649 M (s2[i2:j2])[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3849 3649 M (, )[21  0]xS 
F2S53 Ji 
3927 3649 M (s1[i1:j1])[50 50 50 50 50 50 50 50  0]xS 
F4S53 Ji 
4377 3649 M (=)S 
F2S53 Ji 
4423 3649 M (s2[i2:j2])[50 50 50 49 50 50 50 50  0]xS 
F1S53 Ji 
4873 3649 M (, or)[21 58 41  0]xS 
F2S53 Ji 
1480 3749 M (s1[i1:j1])[50 50 50 50 50 50 50 50  0]xS 
F4S53 Ji 
1930 3749 M (>)S 
F2S53 Ji 
1975 3749 M (s2[i2:j2])[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2425 3749 M (.)S 
: N 1380 1110 M 5020 1110 I 5020 3790 I 1380 3790 I C 
eoclip : N 1775 1477 M 4625 1477 I 4625 1877 I 1775 1877 I C 
eoclip 2865 1705 M (S)S 
F1S42 Ji 
2832 1656 M (1)S 
2832 1734 M (6)S 
2796 1734 M <96>S 
F1S53 Ji 
2986 1705 M (T)S 
F1S42 Ji 
2952 1656 M (2)S 
2952 1734 M (5)S 
2917 1734 M <96>S 
F1S53 Ji 
3111 1705 M (R)S 
F1S42 Ji 
3077 1656 M (3)S 
3077 1734 M (4)S 
3042 1734 M <96>S 
F1S53 Ji 
3240 1705 M (I)S 
F1S42 Ji 
3207 1656 M (4)S 
3207 1734 M (3)S 
3171 1734 M <96>S 
F1S53 Ji 
3342 1705 M (N)S 
F1S42 Ji 
3309 1656 M (5)S 
3309 1734 M (2)S 
3273 1734 M <96>S 
F1S53 Ji 
3476 1705 M (G)S 
F1S42 Ji 
3443 1656 M (6)S 
3443 1734 M (1)S 
3407 1734 M <96>S 
F1S53 Ji 
3575 1705 M ( )S 
F1S42 Ji 
3541 1656 M (7)S 
3541 1734 M (0)S 
; ; ; ; LH
(%%[Page: 33]%%) = 
%%PageTrailer

%%Page: 34 34
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F2S53 Ji 
1380 1166 M (char *Str_dup\(const char *s, int i, int j,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50  0]xS 
4520 1166 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
1580 1266 M (int n\))[50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1366 M (returns )[27 37 24 41 28 42 32  0]xS 
F2S53 Ji 
1732 1366 M (n)S 
F1S53 Ji 
1782 1366 M ( copies of )[21 37 41 42 23 37 32 21 42 28  0]xS 
F2S53 Ji 
2127 1366 M (s[i:j])[49 50 50 50 50  0]xS 
F1S53 Ji 
2427 1366 M (. It is a c.r.e. for )[21 21 28 23 21 23 32 21 37 21 37 21 23 21 37 20 21 28 42 27  0]xS 
F2S53 Ji 
2972 1366 M (n)S 
F4S53 Ji 
3022 1366 M (<)S 
F1S53 Ji 
3068 1366 M (0.)[42  0]xS 
F2S53 Ji 
1380 1466 M (int Str_find\(const char *s, int i, int j, const char *str\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1566 M (returns the position in )[27 37 24 41 28 42 32 21 23 41 37 21 42 41 33 23 23 23 42 41 21 23 42  0]xS 
F2S53 Ji 
2228 1566 M (s)S 
F1S53 Ji 
2278 1566 M ( before the leftmost occurrence of )[21 41 37 28 42 27 37 21 23 42 37 20 23 37 28 23 65 42 32 23 21 41 37 37 42 28 27 37 42 37 37 21
41 28  0]xS 
F2S53 Ji 
3424 1566 M (str)[50 50  0]xS 
F1S53 Ji 
3574 1566 M ( in )[21 23 42  0]xS 
F2S53 Ji 
3679 1566 M (s[i:j])[50 50 50 50 50  0]xS 
F1S53 Ji 
3979 1566 M (, or 0 otherwise. It is a c.r.e. for)[21 20 42 28 20 42 21 41 23 42 37 28 60 23 32 37 21 21 27 24 20 23 33 20 37 21 37 20 24 20 37 21
21 28 41  0]xS 
F2S53 Ji 
1480 1666 M (str)[50 50  0]xS 
F4S53 Ji 
1630 1666 M (=)S 
F1S53 Ji 
1676 1666 M (null.)[42 42 23 23  0]xS 
F2S53 Ji 
1380 1766 M (void Str_fmt\(int code, va_list *app,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50  0]xS 
1580 1866 M (int put\(int c, void *cl\), void *cl,)[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50  0]xS 
1580 1966 M (unsigned char flags[], int width, int precision\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2066 M (is a )[23 32 27 37  0]xS 
F2S53 Ji 
1626 2066 M (Fmt)[50 50  0]xS 
F1S53 Ji 
1775 2066 M ( conversion function. It consumes )[27 37 41 42 42 37 28 32 23 42 41 27 28 41 42 37 23 23 42 42 20 27 28 23 26 37 42 42 32 42 64 37
33  0]xS 
2952 2066 M (3)S 
2993 2066 M ( arguments: a string and two positions and formats the sub-)[27 37 26 41 42 65 37 42 23 32 23 27 37 26 33 23 28 23 41 42 27 37 41 42 26 24 60 41 27 42 41 33
23 23 23 42 41 33 26 37 42 42 26 28 42 27 65 37 23 33 26 23 42 37 26 33 42 41  0]xS 
1480 2166 M (string in the style of )[32 23 28 23 42 41 21 23 42 21 23 42 37 21 32 23 42 23 37 21 41 28  0]xS 
F2S53 Ji 
2167 2166 M (printf)[50 50 50 50 50  0]xS 
F1S53 Ji 
2472 2166 M (\222s )[23 33  0]xS 
F2S53 Ji 
2548 2166 M (%s)[50  0]xS 
F1S53 Ji 
2648 2166 M (. It is a c.r.e. for )[20 21 28 23 21 23 33 20 37 21 37 21 23 21 37 21 21 27 42 28  0]xS 
F2S53 Ji 
3194 2166 M (app)[50 50  0]xS 
F1S53 Ji 
3344 2166 M (, )[21  0]xS 
F2S53 Ji 
3385 2166 M (*app)[50 50 50  0]xS 
F1S53 Ji 
3585 2166 M (, or )[21 21 41 28  0]xS 
F2S53 Ji 
3717 2166 M (flags)[50 50 50 50  0]xS 
F1S53 Ji 
3967 2166 M ( to be null.)[21 23 41 21 42 37 21 41 42 23 23  0]xS 
F2S53 Ji 
1380 2266 M (int Str_len\(const char *s, int i, int j\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2366 M (returns the length of )[27 37 24 41 28 42 32 21 23 42 37 20 24 37 41 42 23 42 21 41 28  0]xS 
F2S53 Ji 
2174 2366 M (s[i:j])[50 50 50 50 50  0]xS 
F1S53 Ji 
2474 2366 M (.)S 
F2S53 Ji 
1380 2466 M (int Str_many\(const char *s, int i, int j, const char *set\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2566 M (returns the positive position in )[27 37 24 41 28 42 32 38 23 42 37 37 42 42 32 23 23 24 41 37 38 42 41 33 23 23 23 42 42 37 24 41
 0]xS 
F2S53 Ji 
2599 2566 M (s)S 
F1S53 Ji 
2649 2566 M ( after a nonempty run of characters from )[38 37 28 23 37 27 38 37 38 42 41 42 37 65 41 24 41 38 28 41 42 38 42 27 38 37 42 37 27 37 37 24
37 27 33 37 28 28 42 64  0]xS 
F2S53 Ji 
4154 2566 M (set)[50 50  0]xS 
F1S53 Ji 
4304 2566 M ( at the beginning of)[38 37 23 38 23 42 37 38 41 37 42 23 42 41 23 42 42 38 41  0]xS 
F2S53 Ji 
1480 2666 M (s[i:j])[50 50 50 50 50  0]xS 
F1S53 Ji 
1780 2666 M (, or 0 otherwise. It is c.r.e. for )[20 21 42 28 20 42 21 42 23 41 37 28 60 23 33 37 21 20 28 23 21 23 33 20 37 21 23 21 37 21 21 28
41 28  0]xS 
F2S53 Ji 
2786 2666 M (set)[50 50  0]xS 
F4S53 Ji 
2936 2666 M (=)S 
F1S53 Ji 
2982 2666 M (null.)[42 42 23 23  0]xS 
F2S53 Ji 
1380 2766 M (char *Str_map\(const char *s, int i, int j,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50  0]xS 
4520 2766 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
1580 2866 M (const char *from, const char *to\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
 0]xS 
F1S53 Ji 
1480 2966 M (returns the string obtained from mapping the characters in )[27 37 24 41 28 42 32 19 23 42 37 18 33 23 28 23 42 41 19 42 41 24 36 24 41 37 42 19 27 28 42 65
18 65 37 42 42 23 41 42 19 23 42 37 18 37 42 37 28 37 37 23 37 28 32 19 23 42  0]xS 
F2S53 Ji 
3417 2966 M (s[i:j])[50 50 50 50 50  0]xS 
F1S53 Ji 
3717 2966 M ( according to )[19 37 37 37 42 28 41 23 42 42 18 24 41  0]xS 
F2S53 Ji 
4166 2966 M (from)[50 50 50  0]xS 
F1S53 Ji 
4366 2966 M ( and )[19 37 41 42  0]xS 
F2S53 Ji 
4524 2966 M (to)[50  0]xS 
F1S53 Ji 
4624 2966 M (. Each char-)[21 18 51 37 37 42 19 37 41 37 28  0]xS 
1480 3066 M (acter from )[37 37 23 37 28 21 27 28 42 65  0]xS 
F2S53 Ji 
1846 3066 M (s[i:j])[50 50 50 50 50  0]xS 
F1S53 Ji 
2146 3066 M ( that appears in )[21 23 42 37 23 21 37 42 41 37 37 28 32 21 24 41  0]xS 
F2S53 Ji 
2675 3066 M (from)[50 50 50  0]xS 
F1S53 Ji 
2874 3066 M ( is mapped to the corresponding character in )[21 24 32 21 65 37 42 41 37 42 21 23 42 21 23 42 37 21 37 41 28 28 37 32 42 42 41 42 23 42 41 21
37 42 37 28 37 37 23 37 28 21 23 42  0]xS 
F2S53 Ji 
4376 3066 M (to)[50  0]xS 
F1S53 Ji 
4476 3066 M (. Characters that)[21 21 55 42 37 28 37 37 23 37 27 33 21 23 42 37  0]xS 
1480 3166 M (do not appear in )[41 42 26 41 42 23 26 37 41 42 37 37 28 25 23 42  0]xS 
F2S53 Ji 
2059 3166 M (from)[50 50 50  0]xS 
F1S53 Ji 
2259 3166 M ( map to themselves. If )[26 65 37 41 26 23 42 25 23 42 37 65 32 37 23 42 37 32 21 26 28 27  0]xS 
F2S53 Ji 
3041 3166 M (from)[50 50 50  0]xS 
F4S53 Ji 
3241 3166 M (=)S 
F1S53 Ji 
3287 3166 M (null and )[42 42 23 23 26 37 41 42  0]xS 
F2S53 Ji 
3588 3166 M (to)[50  0]xS 
F4S53 Ji 
3688 3166 M (=)S 
F1S53 Ji 
3733 3166 M (null, their previous values are used. If)[42 41 24 23 21 25 23 42 37 23 28 25 42 28 37 41 24 41 42 32 26 41 37 24 41 37 33 25 37 28 37 25
42 32 37 42 21 25 28  0]xS 
F2S53 Ji 
1480 3266 M (s=)[50  0]xS 
F1S53 Ji 
1580 3266 M (null, )[41 42 23 23 21  0]xS 
F2S53 Ji 
1753 3266 M (from)[50 50 50  0]xS 
F1S53 Ji 
1953 3266 M ( and )[22 37 42 42  0]xS 
F2S53 Ji 
2119 3266 M (to)[50  0]xS 
F1S53 Ji 
2219 3266 M ( establish a default mapping. It is a c.r.e. for only one of )
[23 37 32 24 37 41 23 24 32 42 22 37 23 42 37 27 37 42 23 23 23 65 37 41 42 23 42 41 21 23 28 23
23 23 32 23 37 23 37 20 23 21 37 21 23 28 41 28 23 41 42 23 42 22 42 42 37 22 42 28  0]xS 
F2S53 Ji 
4124 3266 M (from)[50 50 50  0]xS 
F1S53 Ji 
4324 3266 M ( or )[23 42 27  0]xS 
F2S53 Ji 
4438 3266 M (to)[50  0]xS 
F1S53 Ji 
4538 3266 M ( to be null, for)[23 23 42 22 42 37 23 41 42 23 23 21 23 28 41  0]xS 
F2S53 Ji 
1480 3366 M (strlen\(from\))[50 50 50 50 50 50 50 50 50 50 49  0]xS 
F4S53 Ji 
2080 3366 M <B9>S 
F2S53 Ji 
2125 3366 M (strlen\(to\))[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2625 3366 M (, for )[21 20 27 42 28  0]xS 
F2S53 Ji 
2783 3366 M (s)S 
F1S53 Ji 
2833 3366 M (, )[21  0]xS 
F2S53 Ji 
2873 3366 M (from)[50 50 50  0]xS 
F1S53 Ji 
3073 3366 M (, and )[21 20 37 41 42  0]xS 
F2S53 Ji 
3254 3366 M (to)[50  0]xS 
F1S53 Ji 
3354 3366 M ( to all be null, or for )[20 23 41 20 37 23 23 20 42 37 20 41 42 23 23 21 20 42 27 20 28 42 27  0]xS 
F2S53 Ji 
4036 3366 M (from)[50 50 50  0]xS 
F4S53 Ji 
4236 3366 M (=)S 
F2S53 Ji 
4282 3366 M (null)[50 50 50  0]xS 
F1S53 Ji 
4482 3366 M ( and )[19 37 42 42  0]xS 
F2S53 Ji 
4642 3366 M (to)[49  0]xS 
F4S53 Ji 
4742 3366 M (=)S 
F1S53 Ji 
4787 3366 M (null on)[42 41 24 23 20 41  0]xS 
1480 3466 M (the first call.)[23 42 37 20 28 23 28 32 24 20 37 37 23 24  0]xS 
F2S53 Ji 
1380 3566 M (int Str_match\(const char *s, int i, int j, const char *str\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3666 M (returns the positive position in )[27 37 24 41 28 42 32 21 23 42 37 20 42 42 32 23 23 24 41 37 21 42 41 33 23 23 23 42 42 20 24 41
 0]xS 
F2S53 Ji 
2514 3666 M (s)S 
F1S53 Ji 
2564 3666 M ( if )[21 23 28  0]xS 
F2S53 Ji 
2657 3666 M (s[i:j])[50 50 50 50 50  0]xS 
F1S53 Ji 
2957 3666 M ( starts with )[21 33 23 37 27 24 32 21 60 23 23 42  0]xS 
F2S53 Ji 
3343 3666 M (str)[50 50  0]xS 
F1S53 Ji 
3489 3666 M (, or 0 otherwise. It is a c.r.e. for )[21 21 42 27 21 42 21 41 23 42 37 28 60 23 32 37 21 21 28 23 21 23 32 21 37 21 37 21 23 21 37 21
20 28 42 28  0]xS 
F2S53 Ji 
4554 3666 M (str)[50 50  0]xS 
F4S53 Ji 
4703 3666 M (=)S 
F1S53 Ji 
4749 3666 M (null.)[42 41 23 24  0]xS 
; ; LH
(%%[Page: 34]%%) = 
%%PageTrailer

%%Page: 35 35
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F2S53 Ji 
1380 1166 M (int Str_pos\(const char *s, int i\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
 0]xS 
F1S53 Ji 
1480 1266 M (returns the positive position corresponding to )[27 37 24 41 28 42 32 21 23 42 37 20 42 42 32 23 23 24 41 37 21 42 41 33 23 23 23 42 42 20 37 42
28 27 37 33 41 42 42 41 24 41 42 21 23 41  0]xS 
F2S53 Ji 
3011 1266 M (s[i:i])[50 50 50 50 50  0]xS 
F1S53 Ji 
3311 1266 M (; subtracting 1 yields the index of )[23 21 33 41 42 23 28 37 37 23 23 42 41 21 42 21 41 23 37 24 41 33 20 24 41 37 21 23 42 41 37 42
21 42 27  0]xS 
F2S53 Ji 
4447 1266 M (s[i:i+1])[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4847 1266 M (.)S 
F2S53 Ji 
1380 1366 M (int Str_rchr\(const char *s, int i, int j, int c\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1466 M (is the rightmost variant of )[23 32 21 23 42 37 21 27 24 41 42 23 65 42 32 23 21 42 37 27 23 37 42 23 21 42 27  0]xS 
F2S53 Ji 
2361 1466 M (Str_chr)[50 50 50 50 50 50  0]xS 
F1S53 Ji 
2707 1466 M (.)S 
F2S53 Ji 
1380 1566 M (char *Str_reverse\(const char *s, int i, int j\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 1566 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1666 M (returns a copy of )[27 37 24 41 28 42 32 21 37 21 37 41 42 42 20 42 28  0]xS 
F2S53 Ji 
2063 1666 M (s[i:j])[50 50 50 50 50  0]xS 
F1S53 Ji 
2363 1666 M ( with the characters in the opposite order.)[21 60 24 23 41 21 23 42 37 21 37 41 37 28 37 37 23 37 28 32 21 23 42 21 23 42 37 20 42 42 41 42
32 24 23 37 21 41 28 42 37 23  0]xS 
F2S53 Ji 
1380 1766 M (int Str_rfind\(const char *s, int i, int j, const char *str\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1866 M (is the rightmost variant of )[23 32 21 23 42 37 21 27 24 41 42 23 65 42 32 23 21 42 37 27 23 37 42 23 21 42 27  0]xS 
F2S53 Ji 
2361 1866 M (Str_find)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2761 1866 M (.)S 
F2S53 Ji 
1380 1966 M (int Str_rmany\(const char *s, int i, int j, const char *set\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2066 M (returns the positive position in )[27 37 24 41 28 42 32 21 24 41 37 22 41 42 32 23 24 23 41 37 22 41 42 32 24 23 23 41 42 21 24 41
 0]xS 
F2S53 Ji 
2517 2066 M (s)S 
F1S53 Ji 
2567 2066 M ( before a nonempty run of characters from )[21 42 37 27 42 28 37 21 37 21 42 42 41 37 65 42 23 42 21 28 41 42 21 42 28 21 37 42 37 27 37 37
23 37 28 33 21 28 27 42 65  0]xS 
F2S53 Ji 
4000 2066 M (set)[50 50  0]xS 
F1S53 Ji 
4150 2066 M ( at the end of )[22 36 24 21 23 42 37 21 37 42 41 22 41 28  0]xS 
F2S53 Ji 
4609 2066 M (s[i:j])[50 50 50 50 50  0]xS 
F1S53 Ji 
4909 2066 M (, or)[21 22 41  0]xS 
1480 2166 M (0 otherwise. It is c.r.e. for )[41 21 42 23 42 37 27 61 23 32 37 21 21 27 24 20 24 32 21 37 21 23 21 37 20 21 28 42 27  0]xS 
F2S53 Ji 
2354 2166 M (set)[50 50  0]xS 
F4S53 Ji 
2504 2166 M (=)S 
F1S53 Ji 
2550 2166 M (null.)[41 42 23 23  0]xS 
F2S53 Ji 
1380 2266 M (int Str_rmatch\(const char *s, int i, int j,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50  0]xS 
1580 2366 M (const char *str\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50  0]xS 
F1S53 Ji 
1480 2466 M (returns the positive position in )[27 37 24 41 28 42 32 26 23 42 37 26 42 41 33 23 23 23 42 37 26 42 41 33 23 23 23 42 41 27 23 41
 0]xS 
F2S53 Ji 
2541 2466 M (s)S 
F1S53 Ji 
2591 2466 M ( before )[26 41 37 28 42 27 37  0]xS 
F2S53 Ji 
2856 2466 M (str)[49 50  0]xS 
F1S53 Ji 
3006 2466 M ( if )[27 23 27  0]xS 
F2S53 Ji 
3109 2466 M (s[i:j])[50 50 50 49 50  0]xS 
F1S53 Ji 
3409 2466 M ( ends with )[27 37 41 42 32 26 61 23 23 41  0]xS 
F2S53 Ji 
3788 2466 M (str)[50 50  0]xS 
F1S53 Ji 
3934 2466 M (, or 0 otherwise. It is a c.r.e. for)[21 26 42 28 26 41 26 42 23 42 37 28 60 23 32 37 21 26 28 23 26 23 33 26 37 26 37 21 23 21 37 21
26 28 41  0]xS 
F2S53 Ji 
1480 2566 M (str)[50 50  0]xS 
F4S53 Ji 
1630 2566 M (=)S 
F1S53 Ji 
1676 2566 M (null.)[42 42 23 23  0]xS 
F2S53 Ji 
1380 2666 M (int Str_rupto\(const char *s, int i, int j, const char *set\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2766 M (is the rightmost variant of )[23 32 21 23 42 37 21 27 24 41 42 23 65 42 32 23 21 42 37 27 23 37 42 23 21 42 27  0]xS 
F2S53 Ji 
2361 2766 M (Str_upto)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2761 2766 M (.)S 
F2S53 Ji 
1380 2866 M (char *Str_sub\(const char *s, int i, int j\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50  0]xS 
4520 2866 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2966 M (returns )[27 37 24 41 28 42 32  0]xS 
F2S53 Ji 
1732 2966 M (s[i:j])[50 50 50 50 50  0]xS 
F1S53 Ji 
2032 2966 M (.)S 
F2S53 Ji 
1380 3066 M (int Str_upto\(const char *s, int i, int j, const char *set\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3166 M (returns the position in )[27 37 24 41 28 42 32 26 23 42 37 26 41 42 32 23 24 23 41 42 26 23 42  0]xS 
F2S53 Ji 
2250 3166 M (s)S 
F1S53 Ji 
2300 3166 M ( before the leftmost occurrence in )[26 41 37 28 42 27 37 26 23 42 37 26 23 37 28 23 65 41 33 23 26 41 37 37 42 28 27 37 42 37 37 26
23 42  0]xS 
F2S53 Ji 
3473 3166 M (s[i:j])[50 50 50 50 49  0]xS 
F1S53 Ji 
3773 3166 M ( of any character in )[26 42 28 26 37 41 42 26 37 41 37 28 37 37 23 37 28 26 23 42  0]xS 
F2S53 Ji 
4462 3166 M (set)[50 50  0]xS 
F1S53 Ji 
4612 3166 M (, or 0 other-)[21 26 42 28 25 42 26 42 23 41 37 28  0]xS 
1480 3266 M (wise. It is c.r.e. for )[60 23 32 37 21 21 28 23 21 23 32 21 37 21 23 21 37 21 21 27 42 28  0]xS 
F2S53 Ji 
2121 3266 M (set)[49 50  0]xS 
F4S53 Ji 
2271 3266 M (=)S 
F1S53 Ji 
2316 3266 M (null.)[42 41 24 23  0]xS 
; ; LH
(%%[Page: 35]%%) = 
%%PageTrailer

%%Page: 36 36
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (Table)[67 58 65 32  0]xS 
F2S53 Ji 
4243 1188 M (T)S 
F0S53 Ji 
4293 1188 M ( is opaque )[21 23 32 21 42 46 42 46 46 37  0]xS 
F2S53 Ji 
4670 1188 M (Table_T)[50 50 50 50 50 50  0]xS 
F1S53 Ji 
1380 1349 M (It is a c.r.e. to pass a null )[27 24 20 24 32 21 37 21 37 20 24 20 37 21 21 23 42 21 41 37 33 32 21 37 21 41 42 23 23  0]xS 
F2S53 Ji 
2224 1349 M (T)S 
F1S53 Ji 
2274 1349 M ( or a null )[21 42 27 21 37 21 42 41 23 24  0]xS 
F2S53 Ji 
2594 1349 M (key)[50 50  0]xS 
F1S53 Ji 
2743 1349 M ( to any )[21 23 42 21 37 41 42  0]xS 
F2S53 Ji 
2991 1349 M (Table)[50 50 50 50  0]xS 
F1S53 Ji 
3241 1349 M ( function.)[21 27 42 42 37 23 23 42 41  0]xS 
F2S53 Ji 
1380 1549 M (void Table_free\(T *table\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1649 M (deallocates and clears )[41 37 37 24 23 41 37 37 23 37 33 21 37 41 42 21 37 23 37 37 28 32  0]xS 
F2S53 Ji 
2227 1649 M (*table)[50 50 50 50 50  0]xS 
F1S53 Ji 
2527 1649 M (. It is a c.r.e. for )[20 21 28 23 21 23 33 20 37 21 37 21 23 21 37 21 21 27 42 28  0]xS 
F2S53 Ji 
3073 1649 M (table)[50 49 50 50  0]xS 
F1S53 Ji 
3323 1649 M ( or )[21 42 28  0]xS 
F2S53 Ji 
3434 1649 M (*table)[50 50 50 50 50  0]xS 
F1S53 Ji 
3733 1649 M ( to be null.)[21 23 42 21 41 37 21 42 41 24 23  0]xS 
F2S53 Ji 
1380 1749 M (void *Table_get\(T table, const void *key\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1849 M (returns the value associated with )[27 37 24 41 28 42 32 21 23 42 37 20 42 37 23 42 37 21 37 32 32 42 37 23 37 23 37 42 21 60 23 23
42  0]xS 
F2S53 Ji 
2588 1849 M (key)[50 50  0]xS 
F1S53 Ji 
2738 1849 M ( in )[21 23 41  0]xS 
F2S53 Ji 
2844 1849 M (table)[50 50 50 50  0]xS 
F1S53 Ji 
3094 1849 M (, or null if )[21 21 41 28 21 42 41 23 23 21 23 28  0]xS 
F2S53 Ji 
3448 1849 M (table)[50 50 50 50  0]xS 
F1S53 Ji 
3698 1849 M ( does not hold key.)[21 41 42 37 32 21 42 41 24 20 42 42 23 42 20 42 37 36  0]xS 
F2S53 Ji 
1380 1949 M (int Table_length\(T table\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2049 M (returns the number of key-value pairs in )[27 37 24 41 28 42 32 21 23 42 37 20 42 42 65 41 37 28 21 41 28 21 42 37 41 28 42 37 23 41 37 21
42 37 23 28 32 21 23 42  0]xS 
F2S53 Ji 
2838 2049 M (table)[50 50 49 50  0]xS 
F1S53 Ji 
3088 2049 M (.)S 
F2S53 Ji 
1380 2149 M (void Table_map\(T table,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
1580 2249 M (void apply\(const void *key, void **value, void *cl\),)[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 49 50  0]xS 
1580 2349 M (void *cl\))[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2449 M (calls )[37 37 23 23 32  0]xS 
F2S53 Ji 
1658 2449 M (apply\(key)[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2103 2449 M (, )[20  0]xS 
F2S53 Ji 
2149 2449 M (&value)[50 50 50 50 50  0]xS 
F1S53 Ji 
2449 2449 M (, )[21  0]xS 
F2S53 Ji 
2496 2449 M (cl\))[50 50  0]xS 
F1S53 Ji 
2646 2449 M ( for each key-value in )[26 27 42 28 26 37 37 36 42 26 42 37 41 28 42 37 23 41 37 26 23 42  0]xS 
F2S53 Ji 
3418 2449 M (table)[50 50 50 50  0]xS 
F1S53 Ji 
3668 2449 M ( in an unspecified order. It is a c.r.e. for)[26 23 41 26 37 42 26 41 42 32 42 37 37 23 28 23 37 42 26 41 28 42 37 23 21 25 28 23 26 23 33 26
37 25 37 21 23 21 37 21 26 28 41  0]xS 
F2S53 Ji 
1480 2549 M (apply)[50 50 50 50  0]xS 
F1S53 Ji 
1730 2549 M ( to change )[20 24 41 21 37 42 37 41 42 37  0]xS 
F2S53 Ji 
2093 2549 M (table)[50 50 50 50  0]xS 
F1S53 Ji 
2343 2549 M (.)S 
F2S53 Ji 
1380 2649 M (T Table_new\(int hint,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 2649 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
1580 2749 M (int cmp\(const void *x, const void *y\),)[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50  0]xS 
1580 2849 M (unsigned hash\(const void *key\)\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2949 M (creates, initializes, and returns a new, empty table that can hold an arbitrary number of key-value pairs.)
[37 27 37 37 24 37 32 21 27 24 41 23 23 24 37 23 23 37 37 32 21 28 37 41 42 28 27 37 23 42 28 41
33 27 37 28 42 37 54 21 28 37 65 41 23 42 28 23 37 41 24 37 27 23 42 37 23 28 37 37 41 28 42 41
23 42 28 37 41 28 37 27 42 23 23 28 37 28 42 27 42 41 65 42 37 28 27 42 28 27 42 37 41 28 42 37
23 42 37 27 42 37 23 28 32  0]xS 
F2S53 Ji 
1480 3049 M (hint)[50 50 50  0]xS 
F1S53 Ji 
1680 3049 M ( is an estimate of the number such pairs expected. It is a c.r.e. for )
[20 23 33 20 37 42 21 37 32 23 23 65 37 23 37 21 41 28 21 23 41 37 21 42 41 65 42 37 27 21 32 42
37 42 20 42 37 23 28 32 21 37 41 42 37 37 23 37 42 21 20 28 23 21 23 32 21 37 20 37 21 23 21 37
21 20 28 42 28  0]xS 
F2S53 Ji 
3857 3049 M (hint<)[50 50 50 50  0]xS 
F1S53 Ji 
4107 3049 M (0. )[42 21  0]xS 
F2S53 Ji 
4190 3049 M (cmp)[50 50  0]xS 
F1S53 Ji 
4340 3049 M ( and )[21 37 41 42  0]xS 
F2S53 Ji 
4502 3049 M (hash)[50 50 50  0]xS 
F1S53 Ji 
4701 3049 M ( are func-)[21 37 28 37 20 28 42 41 37  0]xS 
1480 3149 M (tions for comparing and hashing keys. For keys )[23 23 42 41 33 26 27 42 28 26 37 41 65 42 37 27 23 42 42 26 37 41 42 26 41 37 33 41 24 41 42 26
41 37 42 32 21 26 46 42 28 25 42 37 42 32  0]xS 
F2S53 Ji 
3123 3149 M (x)S 
F1S53 Ji 
3173 3149 M ( and )[26 37 41 42  0]xS 
F2S53 Ji 
3345 3149 M (y)S 
F1S53 Ji 
3390 3149 M (, )[21  0]xS 
F2S53 Ji 
3436 3149 M (cmp\(x,y\))[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3836 3149 M ( must return an int )[26 65 41 33 23 26 27 37 23 42 28 41 26 37 42 26 23 42 23  0]xS 
F4S53 Ji 
4493 3149 M (<)S 
F1S53 Ji 
4538 3149 M (0, )[42 21  0]xS 
F4S53 Ji 
4627 3149 M (=)S 
F1S53 Ji 
4672 3149 M (0, or )[42 21 26 41 28  0]xS 
F4S53 Ji 
4856 3149 M (>)S 
F1S53 Ji 
4902 3149 M (0 if)[41 26 23  0]xS 
F2S53 Ji 
1480 3249 M (x)S 
F4S53 Ji 
1530 3249 M (<)S 
F2S53 Ji 
1576 3249 M (y)S 
F1S53 Ji 
1620 3249 M (, )[21  0]xS 
F2S53 Ji 
1680 3249 M (x)S 
F4S53 Ji 
1730 3249 M (=)S 
F2S53 Ji 
1776 3249 M (y)S 
F1S53 Ji 
1820 3249 M (, or )[21 39 41 28  0]xS 
F2S53 Ji 
1988 3249 M (x)S 
F4S53 Ji 
2038 3249 M (>)S 
F2S53 Ji 
2084 3249 M (y)S 
F1S53 Ji 
2128 3249 M (. If )[21 39 27 28  0]xS 
F2S53 Ji 
2282 3249 M (cmp\(x,y\))[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2682 3249 M ( returns 0, then )[38 28 37 23 42 28 41 33 39 41 21 39 23 42 37 41  0]xS 
F2S53 Ji 
3274 3249 M (hash\(x\))[50 50 50 50 50 50  0]xS 
F1S53 Ji 
3624 3249 M ( must equal )[39 65 41 33 23 39 37 41 42 37 23  0]xS 
F2S53 Ji 
4083 3249 M (hash\(y\))[50 50 50 50 50 50  0]xS 
F1S53 Ji 
4433 3249 M (. If )[20 39 28 28  0]xS 
F2S53 Ji 
4587 3249 M (cmp)[50 50  0]xS 
F4S53 Ji 
4737 3249 M (=)S 
F1S53 Ji 
4782 3249 M (null or)[42 41 24 23 39 41  0]xS 
F2S53 Ji 
1480 3349 M (hash)[50 50 50  0]xS 
F4S53 Ji 
1680 3349 M (=)S 
F1S53 Ji 
1726 3349 M (null, )[42 42 23 23 21  0]xS 
F2S53 Ji 
1897 3349 M (Table_new)[50 50 50 50 50 49 50 50  0]xS 
F1S53 Ji 
2347 3349 M ( uses a function suitable for )[21 42 32 37 33 20 37 21 28 42 41 37 23 24 41 42 21 32 42 23 23 37 42 23 37 21 27 42 28  0]xS 
F2S53 Ji 
3286 3349 M (Atom_T)[50 50 50 49 50  0]xS 
F1S53 Ji 
3586 3349 M ( keys.)[21 42 37 42 32  0]xS 
F2S53 Ji 
1380 3449 M (void *Table_put\(T table,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 3449 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
1580 3549 M (const void *key, void *value\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3649 M (changes the value associated with )[37 41 37 42 42 37 32 24 23 42 37 24 41 37 23 42 37 24 37 32 33 41 37 24 37 23 37 41 24 60 24 23
41  0]xS 
F2S53 Ji 
2640 3649 M (key)[50 50  0]xS 
F1S53 Ji 
2790 3649 M ( in )[24 23 42  0]xS 
F2S53 Ji 
2903 3649 M (table)[50 50 50 50  0]xS 
F1S53 Ji 
3153 3649 M ( to )[24 23 41  0]xS 
F2S53 Ji 
3265 3649 M (value)[50 50 50 50  0]xS 
F1S53 Ji 
3515 3649 M ( and returns the previous value, or adds )[24 37 42 41 24 28 37 23 42 28 41 33 23 24 41 37 24 42 28 37 41 23 42 42 32 24 42 37 23 41 37 21
24 42 27 24 37 42 42 32  0]xS 
F2S53 Ji 
4870 3649 M (key)[50 50  0]xS 
F1S53 Ji 
1480 3749 M (and )[37 41 42  0]xS 
F2S53 Ji 
1621 3749 M (value)[50 50 50 50  0]xS 
F1S53 Ji 
1871 3749 M ( if )[21 23 27  0]xS 
F2S53 Ji 
1963 3749 M (table)[50 50 50 50  0]xS 
F1S53 Ji 
2213 3749 M ( does not hold )[21 42 41 37 33 20 42 42 23 21 41 42 23 42  0]xS 
F2S53 Ji 
2704 3749 M (key)[50 50  0]xS 
F1S53 Ji 
2848 3749 M (, and returns null.)[21 21 37 41 42 21 28 37 23 41 28 42 32 21 42 41 23 24  0]xS 
; ; LH
(%%[Page: 36]%%) = 
%%PageTrailer

%%Page: 37 37
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F2S53 Ji 
1380 1166 M (void *Table_remove\(T table, const void *key\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1266 M (removes the )[27 37 65 42 42 37 32 27 23 42 37  0]xS 
F2S53 Ji 
1918 1266 M (key)[50 50  0]xS 
F1S53 Ji 
2068 1266 M (-value pair from )[28 41 37 23 42 37 27 42 37 23 27 28 27 28 42 64  0]xS 
F2S53 Ji 
2649 1266 M (table)[49 50 50 50  0]xS 
F1S53 Ji 
2899 1266 M ( and returns the removed value. If )[27 37 42 42 27 28 36 24 41 28 42 32 27 23 42 37 27 28 37 64 42 42 37 41 27 42 37 23 42 37 21 27
27 28  0]xS 
F2S53 Ji 
4089 1266 M (table)[50 50 50 50  0]xS 
F1S53 Ji 
4339 1266 M ( does not hold )[27 42 41 37 33 27 42 41 23 27 42 42 23 42  0]xS 
F2S53 Ji 
4855 1266 M (key)[50 50  0]xS 
F1S53 Ji 
4999 1266 M (,)S 
F2S53 Ji 
1480 1366 M (Table_remove)[50 50 50 50 50 50 50 50 50 50 49  0]xS 
F1S53 Ji 
2080 1366 M ( has no effect and returns null.)[21 42 37 32 21 42 41 21 37 26 28 37 37 23 21 37 42 41 21 28 37 23 42 27 42 33 20 42 42 23 23  0]xS 
F2S53 Ji 
1380 1466 M (void **Table_toArray\(T table, void *end\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50  0]xS 
4520 1466 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1566 M (creates a 2)[37 27 37 37 24 37 32 33 37 34  0]xS 
F3S53 Ji 
1856 1566 M (N)S 
F4S53 Ji 
1912 1566 M (+)S 
F1S53 Ji 
1958 1566 M (1-element array that holds the )[41 28 37 23 37 65 37 42 23 33 37 28 27 37 42 33 24 41 37 23 34 41 42 23 42 32 34 23 41 37  0]xS 
F3S53 Ji 
3036 1566 M (N)S 
F1S53 Ji 
3091 1566 M ( key-value pairs in )[34 41 37 42 28 41 37 23 42 37 33 42 37 23 28 32 34 23 41  0]xS 
F2S53 Ji 
3780 1566 M (table)[50 50 50 50  0]xS 
F1S53 Ji 
4030 1566 M ( in an unspecified order and)[33 23 42 33 37 42 33 42 41 33 42 37 36 24 27 24 37 41 34 41 28 42 37 27 34 37 41  0]xS 
1480 1666 M (returns a pointer to the first element. The keys appear in the even-numbered array elements and the corre-)
[27 37 24 41 28 42 32 22 37 22 42 41 23 42 23 37 28 22 23 42 22 23 42 37 22 27 23 28 33 23 22 37
23 37 65 37 41 23 21 22 51 42 37 22 41 37 42 32 22 37 42 42 37 37 27 22 23 42 22 23 42 37 22 37
41 37 42 28 41 42 65 42 37 27 37 42 22 37 28 27 37 42 22 37 23 37 65 37 42 23 32 22 37 42 41 22
23 42 37 22 37 42 27 28 37  0]xS 
1480 1766 M (sponding values appear in the following odd-numbered elements, and element 2)
[32 42 41 42 42 23 42 41 21 42 37 23 41 37 33 21 37 41 42 37 37 28 20 24 41 21 23 42 37 21 27 42
23 23 42 60 23 42 42 20 42 42 41 28 42 41 65 42 37 28 37 41 21 37 23 37 65 37 42 23 32 21 21 37
41 42 21 37 23 37 65 37 41 24 20  0]xS 
F3S53 Ji 
4147 1766 M (N)S 
F1S53 Ji 
4203 1766 M ( is )[20 24 32  0]xS 
F2S53 Ji 
4300 1766 M (end)[50 50  0]xS 
F1S53 Ji 
4450 1766 M (.)S 
; ; LH
(%%[Page: 37]%%) = 
%%PageTrailer

%%Page: 38 38
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (Text)[67 52 58  0]xS 
F2S53 Ji 
4573 1188 M (T)S 
F0S53 Ji 
4623 1188 M ( is )[21 23 32  0]xS 
F2S53 Ji 
4720 1188 M (Text_T)[50 50 50 50 50  0]xS 
1380 1399 M (typedef struct T {)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50  0]xS 
2279 1399 M ( int len; const char *str; } T;)[50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
1380 1499 M (typedef struct Text_save_T *Text_save_T;)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1380 1699 M (A )[60  0]xS 
F2S53 Ji 
1462 1699 M (T)S 
F1S53 Ji 
1512 1699 M ( is a descriptor; clients can read the fields of a descriptor, but it is an )
[21 23 33 21 37 22 42 37 32 37 28 23 42 23 41 28 23 22 37 23 23 37 42 23 32 22 37 37 42 21 28 37
37 42 21 24 41 37 22 28 23 37 23 41 33 22 41 28 22 37 21 42 37 32 37 28 23 42 23 42 24 21 21 42
42 23 22 23 23 22 23 32 22 37 41  0]xS 
3814 1699 M (u.r.e.)[42 21 23 21 36  0]xS 
3978 1699 M ( to write them. )[22 23 42 21 61 27 23 24 37 21 23 42 37 65 21  0]xS 
F2S53 Ji 
4488 1699 M (Text)[50 50 50  0]xS 
F1S53 Ji 
4688 1699 M ( functions)[22 28 41 42 37 23 23 42 41  0]xS 
1380 1799 M (accept and return descriptors )[37 37 37 37 41 23 21 37 42 42 21 27 37 24 41 28 42 20 42 37 33 36 28 23 42 23 42 28 32  0]xS 
F3S53 Ji 
2361 1799 M (by value)[42 37 20 37 42 23 42  0]xS 
F1S53 Ji 
2641 1799 M (; it is a c.r.e. to pass a descriptor with )[23 21 23 23 21 23 33 21 37 21 37 20 24 20 37 21 21 23 42 21 42 37 32 32 21 37 21 42 37 32 37 28
23 42 23 42 27 21 60 24 23 41  0]xS 
F2S53 Ji 
3898 1799 M (str)[50 50  0]xS 
F4S53 Ji 
4048 1799 M (=)S 
F1S53 Ji 
4094 1799 M (null or )[42 41 23 24 20 42 28  0]xS 
F2S53 Ji 
4335 1799 M (len)[50 50  0]xS 
F4S53 Ji 
4485 1799 M (<)S 
F1S53 Ji 
4531 1799 M (0 to any )[42 21 23 42 21 37 41 42  0]xS 
F2S53 Ji 
4820 1799 M (Text)[50 50 50  0]xS 
F1S53 Ji 
1380 1899 M (function.)[27 42 42 37 23 23 42 41  0]xS 
F2S53 Ji 
1480 1999 M (Text)[50 50 50  0]xS 
F1S53 Ji 
1680 1999 M ( manages the memory for its immutable strings; it is an )[19 65 37 41 37 42 37 32 19 23 42 37 19 65 37 65 41 28 42 19 28 41 28 19 23 23 33 19 23 65 65 41
23 37 42 23 37 19 33 23 28 23 41 42 32 24 19 23 23 19 23 33 19 37 41  0]xS 
3519 1999 M (u.r.e.)[42 21 23 21 37  0]xS 
3683 1999 M ( to write this )[19 23 42 19 60 28 23 23 37 19 23 42 23 32  0]xS 
4116 1999 M (string space)[33 23 28 23 42 41 19 33 41 37 37  0]xS 
4509 1999 M ( or deallocate it)[19 42 28 19 41 37 37 24 23 41 37 37 24 36 20 23  0]xS 
1380 2099 M (by external means. Strings in string space are )[41 42 21 36 42 23 37 28 42 37 23 20 65 37 37 42 32 21 20 45 23 28 23 42 41 33 20 23 42 21 32 23
28 23 42 41 21 32 42 37 37 37 20 37 28 37  0]xS 
2905 2099 M (not)[42 42  0]xS 
3011 2099 M ( terminated by null characters, because they can contain null)
[20 23 37 28 65 23 42 37 23 37 42 20 42 41 21 41 42 23 23 21 37 41 37 28 37 37 23 37 28 32 21 21
41 37 37 37 42 32 37 21 23 41 37 42 21 37 37 41 21 37 41 42 23 37 23 42 20 42 42 23  0]xS 
1380 2199 M (characters.)[37 41 37 28 37 37 23 37 28 32  0]xS 
1480 2299 M (Some )[46 42 65 36  0]xS 
F2S53 Ji 
1690 2299 M (Text)[50 50 50  0]xS 
F1S53 Ji 
1890 2299 M ( functions accept positions, which identify points between characters; see )
[21 27 42 42 37 23 23 42 41 33 20 37 37 37 37 42 23 21 42 41 33 23 23 23 42 41 33 21 20 60 42 23
37 42 20 24 41 37 42 23 23 28 42 20 42 42 23 41 23 33 21 41 37 23 60 37 37 42 21 37 41 37 28 37
37 23 37 28 32 24 20 33 37 37  0]xS 
F2S53 Ji 
4352 2299 M (Str)[50 50  0]xS 
F1S53 Ji 
4498 2299 M (. In the descrip-)[20 21 28 41 21 23 42 37 21 41 37 33 37 27 24 41  0]xS 
1380 2399 M (tions below, )[23 23 42 41 33 21 41 37 23 42 55 21  0]xS 
F2S53 Ji 
1803 2399 M (s[i:j])[50 50 50 50 50  0]xS 
F1S53 Ji 
2102 2399 M ( denotes the substring in )[21 42 37 41 42 23 37 32 21 23 42 37 21 32 42 42 32 23 28 23 42 41 21 23 42  0]xS 
F2S53 Ji 
2933 2399 M (s)S 
F1S53 Ji 
2983 2399 M ( between positions )[21 41 37 23 61 36 37 42 21 42 41 33 23 23 23 42 41 33  0]xS 
F2S53 Ji 
3624 2399 M (i)S 
F1S53 Ji 
3674 2399 M ( and )[20 37 42 42  0]xS 
F2S53 Ji 
3836 2399 M (j)S 
F1S53 Ji 
3886 2399 M (.)S 
F2S53 Ji 
1380 2599 M (const T Text_cset   = { 256, "\\000\\001)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50  0]xS 
F1S53 Ji 
3279 2599 M <85>S 
F2S53 Ji 
3362 2599 M (\\376\\377" })[50 50 50 50 50 50 50 50 50 50  0]xS 
1380 2699 M (const T Text_ascii  = { 128, "\\000\\001)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50  0]xS 
F1S53 Ji 
3279 2699 M <85>S 
F2S53 Ji 
3362 2699 M (\\176\\177" })[50 50 50 50 50 50 50 50 50 50  0]xS 
1380 2799 M (const T Text_ucase  = {  26, ")[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
2879 2799 M (ABCDEF)[50 50 50 50 50  0]xS 
3179 2799 M (GHIJKLMNOPQRSTUV)[50 50 50 50 50 50 50 50 50 50 50 50 50 49 50  0]xS 
3979 2799 M (WXYZ)[50 50 50  0]xS 
4178 2799 M (" })[50 50  0]xS 
1380 2899 M (const T Text_lcase  = {  26, ")[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
2879 2899 M (abcdef)[50 50 50 50 50  0]xS 
3179 2899 M (hijklmnopqrtuv)[50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
3879 2899 M (wxyz" })[50 50 50 50 50 50  0]xS 
1380 2999 M (const T Text_digits = {  10, "0123456789" })[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50  0]xS 
1380 3099 M (const T Text_null   = {   0, "" })[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
 0]xS 
F1S53 Ji 
1480 3199 M (are static descriptors initialized as shown.)[37 27 37 21 33 23 37 23 23 37 21 42 37 32 37 28 23 41 24 41 28 32 21 23 42 23 23 23 37 24 23 37
37 41 21 37 33 20 33 41 42 60 42  0]xS 
F2S53 Ji 
1380 3299 M (int Text_any\(T s, int i, T set\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3399 M (returns the positive position in )[27 37 24 41 28 42 32 21 23 42 37 20 42 42 32 23 23 24 41 37 21 42 41 33 23 23 23 42 42 20 24 41
 0]xS 
F2S53 Ji 
2514 3399 M (s)S 
F1S53 Ji 
2564 3399 M ( after )[21 37 27 24 37 27  0]xS 
F2S53 Ji 
2758 3399 M (s[i:i+1])[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3158 3399 M ( if that character appears in )[21 23 28 21 23 41 37 23 21 37 42 37 28 37 37 23 37 27 21 37 42 42 37 37 27 33 20 24 41  0]xS 
F2S53 Ji 
4083 3399 M (set)[50 50  0]xS 
F1S53 Ji 
4233 3399 M (, or 0 otherwise.)[21 21 41 28 21 42 20 42 23 42 37 28 60 23 32 37  0]xS 
F2S53 Ji 
1380 3499 M (T Text_box\(const char *str, int len\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50  0]xS 
F1S53 Ji 
1480 3599 M (builds and returns a descriptor for the client-allocated string )
[41 42 23 23 42 32 22 37 42 41 22 28 37 23 41 28 42 32 22 37 21 42 37 32 37 28 23 42 23 42 27 22
28 41 28 22 23 42 37 21 37 23 24 37 41 23 28 37 23 23 42 37 37 23 37 42 21 33 23 28 23 41 42  0]xS 
F2S53 Ji 
3502 3599 M (str)[50 50  0]xS 
F1S53 Ji 
3652 3599 M ( of length )[21 42 28 21 23 37 42 42 23 41  0]xS 
F2S53 Ji 
3994 3599 M (len)[50 50  0]xS 
F1S53 Ji 
4144 3599 M (. It is a c.r.e. for )[21 21 28 23 22 23 33 21 37 22 37 21 23 20 37 21 22 28 41 28  0]xS 
F2S53 Ji 
4695 3599 M (str)[50 50  0]xS 
F4S53 Ji 
4845 3599 M (=)S 
F1S53 Ji 
4890 3599 M (null)[42 42 23  0]xS 
1480 3699 M (or )[41 28  0]xS 
F2S53 Ji 
1570 3699 M (len)[50 50  0]xS 
F4S53 Ji 
1720 3699 M (<)S 
F1S53 Ji 
1766 3699 M (0.)[41  0]xS 
; ; LH
(%%[Page: 38]%%) = 
%%PageTrailer

%%Page: 39 39
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F2S53 Ji 
1380 1166 M (T Text_cat\(T s1, T s2\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 1166 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1266 M (returns )[27 37 24 41 28 42 32  0]xS 
F2S53 Ji 
1732 1266 M (s1)[50  0]xS 
F1S53 Ji 
1832 1266 M ( concatenated with )[21 37 41 42 37 37 23 37 42 37 23 37 41 21 60 24 23 41  0]xS 
F2S53 Ji 
2477 1266 M (s2)[50  0]xS 
F1S53 Ji 
2577 1266 M (.)S 
F2S53 Ji 
1380 1366 M (int Text_chr\(T s, int i, int j, int c\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1466 M (See )[46 37 37  0]xS 
F2S53 Ji 
1621 1466 M (Str_chr.)[50 50 50 50 50 50 50  0]xS 
1380 1566 M (int Text_cmp\(T s1, T s2\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1666 M (returns an int )[27 37 24 41 28 42 32 21 37 42 20 23 42 23  0]xS 
F4S53 Ji 
1940 1666 M (<)S 
F1S53 Ji 
1986 1666 M (0, )[41 21  0]xS 
F4S53 Ji 
2069 1666 M (=)S 
F1S53 Ji 
2115 1666 M (0, or )[41 21 21 42 28  0]xS 
F4S53 Ji 
2289 1666 M (>)S 
F1S53 Ji 
2334 1666 M (0 if )[42 21 23 27  0]xS 
F2S53 Ji 
2468 1666 M (s1)[50  0]xS 
F4S53 Ji 
2568 1666 M (<)S 
F2S53 Ji 
2614 1666 M (s2)[50  0]xS 
F1S53 Ji 
2714 1666 M (, )[21  0]xS 
F2S53 Ji 
2756 1666 M (s1)[50  0]xS 
F4S53 Ji 
2856 1666 M (=)S 
F2S53 Ji 
2901 1666 M (s2)[50  0]xS 
F1S53 Ji 
3001 1666 M (, or )[21 21 41 28  0]xS 
F2S53 Ji 
3133 1666 M (s1)[50  0]xS 
F4S53 Ji 
3233 1666 M (>)S 
F2S53 Ji 
3279 1666 M (s2)[50  0]xS 
F1S53 Ji 
3379 1666 M (.)S 
F2S53 Ji 
1380 1766 M (T Text_dup\(T s, int n\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 1766 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1866 M (returns )[27 37 24 41 28 42 32  0]xS 
F2S53 Ji 
1732 1866 M (n)S 
F1S53 Ji 
1782 1866 M ( copies of )[21 37 41 42 23 37 32 21 42 28  0]xS 
F2S53 Ji 
2127 1866 M (s)S 
F1S53 Ji 
2177 1866 M (. It is a c.r.e. for )[21 21 28 23 21 23 32 21 37 21 37 21 23 21 37 21 20 28 42 28  0]xS 
F2S53 Ji 
2723 1866 M (n)S 
F4S53 Ji 
2773 1866 M (<)S 
F1S53 Ji 
2818 1866 M (0.)[42  0]xS 
F2S53 Ji 
1380 1966 M (int Text_find\(T s, int i, int j, T str\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2066 M (See )[46 37 37  0]xS 
F2S53 Ji 
1621 2066 M (Str_find)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2021 2066 M (.)S 
F2S53 Ji 
1380 2166 M (void Text_fmt\(int code, va_list *app,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50  0]xS 
1580 2266 M (int put\(int c, void *cl\), void *cl,)[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50  0]xS 
1580 2366 M (unsigned char flags[], int width, int precision\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2466 M (is a )[23 32 26 37  0]xS 
F2S53 Ji 
1623 2466 M (Fmt)[50 50  0]xS 
F1S53 Ji 
1773 2466 M ( conversion function. It consumes a )[25 37 42 42 41 37 28 32 24 41 42 25 28 42 41 37 23 24 41 42 21 25 28 23 25 37 42 42 32 42 64 37
33 25 37  0]xS 
F3S53 Ji 
3006 2466 M (pointer)[41 42 23 42 23 37  0]xS 
F1S53 Ji 
3246 2466 M ( to a descriptor and formats the string in the style of)[26 23 41 26 37 25 42 37 32 37 28 23 42 23 42 27 26 37 41 42 25 28 42 27 65 37 23 33 25 23 42 37
25 33 23 28 23 41 42 25 24 41 26 23 41 37 26 32 23 42 23 37 26 41  0]xS 
F2S53 Ji 
1480 2566 M (printf)[50 50 50 50 50  0]xS 
F1S53 Ji 
1784 2566 M (\222s )[23 33  0]xS 
F2S53 Ji 
1861 2566 M (%s)[50  0]xS 
F1S53 Ji 
1961 2566 M (. It is a c.r.e. for the descriptor pointer, )[20 21 28 23 21 23 32 21 37 21 37 21 23 21 37 21 20 28 42 28 20 24 41 37 21 42 37 32 37 28 23 42
23 41 28 21 42 41 23 42 23 37 25 20  0]xS 
F2S53 Ji 
3257 2566 M (app)[50 50  0]xS 
F1S53 Ji 
3407 2566 M (, )[21  0]xS 
F2S53 Ji 
3449 2566 M (*app)[50 50 50  0]xS 
F1S53 Ji 
3649 2566 M (, or )[20 21 42 28  0]xS 
F2S53 Ji 
3781 2566 M (flags)[49 50 50 50  0]xS 
F1S53 Ji 
4031 2566 M ( to be null.)[21 23 42 21 41 37 21 42 42 23 23  0]xS 
F2S53 Ji 
1380 2666 M (char *Text_get\(char *str, int size, T s\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2766 M (copies )[37 41 42 23 37 33  0]xS 
F2S53 Ji 
1723 2766 M (s.str[0)[49 50 50 50 50 50  0]xS 
F1S53 Ji 
2073 2766 M (..)[21  0]xS 
F2S53 Ji 
2114 2766 M (str.len-1])[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2614 2766 M ( to )[30 23 41  0]xS 
F2S53 Ji 
2739 2766 M (str[0)[50 50 50 50  0]xS 
F1S53 Ji 
2988 2766 M (..)[21  0]xS 
F2S53 Ji 
3030 2766 M (size-1])[50 50 50 50 50 50  0]xS 
F1S53 Ji 
3380 2766 M (, appends a null, and returns )[21 30 37 41 42 37 41 42 33 29 37 30 42 42 23 23 21 30 37 41 42 30 28 37 23 42 27 42 32  0]xS 
F2S53 Ji 
4392 2766 M (str)[50 50  0]xS 
F1S53 Ji 
4538 2766 M (. If )[20 30 28 28  0]xS 
F2S53 Ji 
4674 2766 M (str)[50 50  0]xS 
F4S53 Ji 
4824 2766 M (=)S 
F1S53 Ji 
4870 2766 M (null,)[42 42 23 23  0]xS 
F2S53 Ji 
1480 2866 M (Text_get)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1880 2866 M ( allocates the space. It is a c.r.e. for )[20 37 24 23 41 37 37 23 37 33 21 23 41 37 21 33 41 37 37 37 21 21 28 23 21 23 32 21 37 21 37 21
23 21 37 20 21 28 42 27  0]xS 
F2S53 Ji 
3066 2866 M (str)[50 50  0]xS 
F4S53 Ji 
3216 2866 M <B9>S 
F1S53 Ji 
3262 2866 M (null and )[41 42 23 23 21 37 42 41  0]xS 
F2S53 Ji 
3553 2866 M (size)[50 50 50  0]xS 
F4S53 Ji 
3753 2866 M (<)S 
F2S53 Ji 
3799 2866 M (s.len)[50 50 50 50  0]xS 
F4S53 Ji 
4049 2866 M (+)S 
F2S53 Ji 
4095 2866 M (1)S 
F1S53 Ji 
4145 2866 M (.)S 
F2S53 Ji 
1380 2966 M (int Text_many\(T s, int i, int j, T set\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3066 M (See )[46 37 37  0]xS 
F2S53 Ji 
1621 3066 M (Str_many)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2015 3066 M (.)S 
F2S53 Ji 
1380 3166 M (T Text_map\(T s, const T *from, const T *to\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50  0]xS 
4520 3166 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3266 M (returns the string obtained from mapping the characters in )[27 37 24 41 28 42 32 21 23 42 37 20 33 23 28 23 42 41 21 42 41 23 37 24 41 37 42 21 27 28 42 65
20 65 37 42 42 23 41 42 21 23 42 37 20 37 42 37 28 37 37 23 37 28 32 21 23 42  0]xS 
F2S53 Ji 
3435 3266 M (s)S 
F1S53 Ji 
3485 3266 M ( according to )[21 37 37 37 42 28 41 23 42 42 20 24 41  0]xS 
F2S53 Ji 
3940 3266 M (from)[50 50 50  0]xS 
F1S53 Ji 
4140 3266 M ( and )[21 37 41 42  0]xS 
F2S53 Ji 
4302 3266 M (to)[50  0]xS 
F1S53 Ji 
4402 3266 M (; see )[23 21 32 37 37  0]xS 
F2S53 Ji 
4573 3266 M (Str_map)[50 50 50 50 50 50  0]xS 
F1S53 Ji 
4923 3266 M (. If)[21 20 28  0]xS 
F2S53 Ji 
1480 3366 M (from)[50 50 50  0]xS 
F4S53 Ji 
1680 3366 M (=)S 
F1S53 Ji 
1726 3366 M (null and )[42 42 23 23 21 37 42 41  0]xS 
F2S53 Ji 
2017 3366 M (to)[50  0]xS 
F4S53 Ji 
2117 3366 M (=)S 
F1S53 Ji 
2163 3366 M (null, their previous values are used. It is a c.r.e for only one of )
[42 41 23 24 20 21 23 42 37 23 28 21 42 27 37 42 23 42 41 33 21 41 37 24 41 37 33 21 37 27 37 21
42 32 37 42 21 21 28 23 21 23 32 21 37 21 37 21 23 21 37 21 28 41 28 21 42 41 24 41 21 42 41 37
21 42 28  0]xS 
F2S53 Ji 
4252 3366 M (from)[50 50 50  0]xS 
F1S53 Ji 
4452 3366 M ( or )[21 41 28  0]xS 
F2S53 Ji 
4563 3366 M (to)[50  0]xS 
F1S53 Ji 
4663 3366 M ( to be null,)[21 23 42 21 42 36 21 42 42 23 23  0]xS 
1480 3466 M (or for )[41 28 21 28 41 28  0]xS 
F2S53 Ji 
1688 3466 M (from->len)[50 50 50 50 50 50 50 50  0]xS 
F4S53 Ji 
2138 3466 M <B9>S 
F2S53 Ji 
2184 3466 M (to->len)[50 50 50 50 50 50  0]xS 
F1S53 Ji 
2533 3466 M (.)S 
F2S53 Ji 
1380 3566 M (int Text_match\(T s, int i, int j, T str\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3666 M (See )[46 37 37  0]xS 
F2S53 Ji 
1621 3666 M (Str_match)[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2071 3666 M (.)S 
; ; LH
(%%[Page: 39]%%) = 
%%PageTrailer

%%Page: 40 40
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F2S53 Ji 
1380 1166 M (int Text_pos\(T s, int i\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1266 M (See )[46 37 37  0]xS 
F2S53 Ji 
1621 1266 M (Str_pos)[50 50 50 50 50 50  0]xS 
F1S53 Ji 
1971 1266 M (.)S 
F2S53 Ji 
1380 1366 M (T Text_put\(const char *str\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 1366 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1466 M (copies the null-terminated )[37 41 42 23 37 33 20 24 41 37 21 42 41 23 24 27 23 37 28 65 23 42 37 23 37 42  0]xS 
F2S53 Ji 
2371 1466 M (str)[50 50  0]xS 
F1S53 Ji 
2520 1466 M ( into string space and returns its descriptor. It is a c.r.e. for )
[21 23 42 23 42 21 32 23 28 23 42 41 21 33 41 37 37 37 21 37 42 41 21 28 37 23 42 27 42 32 21 23
23 33 21 41 37 33 37 27 24 41 23 42 23 21 21 28 23 21 23 32 21 37 21 37 21 23 21 36 21 21 28 42
27  0]xS 
F2S53 Ji 
4475 1466 M (str)[50 50  0]xS 
F4S53 Ji 
4625 1466 M (=)S 
F1S53 Ji 
4671 1466 M (null.)[41 42 23 23  0]xS 
F2S53 Ji 
1380 1566 M (int Text_rchr\(T s, int i, int j, int c\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1666 M (See )[46 37 37  0]xS 
F2S53 Ji 
1621 1666 M (Str_rchr)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2016 1666 M (.)S 
F2S53 Ji 
1380 1766 M (void Text_restore\(Text_save_T *save\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50  0]xS 
F1S53 Ji 
1480 1866 M (pops the string space to the point denoted by )[41 42 42 32 23 23 42 37 23 32 24 27 24 41 42 23 32 42 37 37 37 23 23 42 23 23 42 37 23 41 42 23
42 23 23 42 37 41 42 23 37 42 23 42 41  0]xS 
F2S53 Ji 
3007 1866 M (save)[50 50 50  0]xS 
F1S53 Ji 
3206 1866 M (. It is a c.r.e. for )[21 23 28 23 23 23 33 23 37 23 37 21 23 21 37 20 24 27 42 28  0]xS 
F2S53 Ji 
3766 1866 M (save)[50 50 50  0]xS 
F4S53 Ji 
3966 1866 M (=)S 
F1S53 Ji 
4012 1866 M (null. It is an )[42 42 23 23 21 23 28 23 23 23 33 23 37 41  0]xS 
4440 1866 M (u.r.e.)[42 21 23 21 37  0]xS 
4604 1866 M ( to use other)[23 23 42 23 41 33 37 23 41 24 41 37  0]xS 
F2S53 Ji 
1480 1966 M (Text_save_T)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2030 1966 M ( values that denote locations higher than )[21 42 37 23 42 37 32 21 23 42 37 23 21 41 37 42 42 23 37 21 23 41 37 37 23 24 41 42 32 21 42 23
42 41 37 28 21 23 42 37 41  0]xS 
F2S53 Ji 
3392 1966 M (save)[50 50 50  0]xS 
F1S53 Ji 
3592 1966 M ( after calling )[21 37 27 24 37 27 21 37 37 23 23 24 41 42  0]xS 
F2S53 Ji 
4034 1966 M (Text_restore)[50 50 50 50 50 50 50 50 49 50 50  0]xS 
F1S53 Ji 
4634 1966 M (.)S 
F2S53 Ji 
1380 2066 M (T Text_reverse\(T s\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50  0]xS 
4520 2066 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2166 M (returns a copy of )[27 37 24 41 28 42 32 21 37 21 37 41 42 42 20 42 28  0]xS 
F2S53 Ji 
2063 2166 M (s)S 
F1S53 Ji 
2113 2166 M ( with the characters in the opposite order.)[20 61 23 23 42 20 23 42 37 21 37 42 37 27 37 37 23 37 28 33 20 23 42 21 23 42 37 21 41 42 42 41
33 23 23 37 21 41 28 42 37 23  0]xS 
F2S53 Ji 
1380 2266 M (int Text_rfind\(T s, int i, int j, T str\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2366 M (See )[46 37 37  0]xS 
F2S53 Ji 
1621 2366 M (Str_rfind)[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2071 2366 M (.)S 
F2S53 Ji 
1380 2466 M (int Text_rmany\(T s, int i, int j, T set\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2566 M (See )[46 37 37  0]xS 
F2S53 Ji 
1621 2566 M (Str_rmany)[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2065 2566 M (.)S 
F2S53 Ji 
1380 2666 M (int Text_rmatch\(T s, int i, int j, T str\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2766 M (See )[46 37 37  0]xS 
F2S53 Ji 
1621 2766 M (Str_rmatch)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2121 2766 M (.)S 
F2S53 Ji 
1380 2866 M (int Text_rupto\(T s, int i, int j, T set\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2966 M (See )[46 37 37  0]xS 
F2S53 Ji 
1621 2966 M (Str_rupto)[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2071 2966 M (.)S 
F2S53 Ji 
1380 3066 M (Text_save_T Text_save\(void\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4520 3066 M (Mem_Failed)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3166 M (returns an opaque pointer that encodes the current top of the string space.)
[27 37 24 41 28 42 32 21 37 42 20 42 42 37 41 42 37 21 41 42 23 42 23 37 28 20 24 41 37 23 21 37
42 37 41 42 37 33 20 23 42 37 21 37 42 27 28 37 42 23 21 23 41 42 21 42 27 21 23 42 37 21 32 23
28 23 42 41 21 33 41 37 37 37  0]xS 
F2S53 Ji 
1380 3266 M (T Text_sub\(T s, int i, int j\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3366 M (returns )[27 37 24 41 28 42 32  0]xS 
F2S53 Ji 
1732 3366 M (s[i:j])[50 50 50 50 50  0]xS 
F1S53 Ji 
2032 3366 M (.)S 
F2S53 Ji 
1380 3466 M (int Text_upto\(T s, int i, int j, T set\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3566 M (See )[46 37 37  0]xS 
F2S53 Ji 
1621 3566 M (Str_upto)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2021 3566 M (.)S 
; ; LH
(%%[Page: 40]%%) = 
%%PageTrailer

%%Page: 41 41
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (Thread)[78 64 50 52 58  0]xS 
F2S53 Ji 
4193 1188 M (T)S 
F0S53 Ji 
4243 1188 M ( is opaque )[21 23 32 21 42 46 42 46 46 37  0]xS 
F2S53 Ji 
4620 1188 M (Thread_T)[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1380 1349 M (It is a c.r.e. to call any )[27 24 20 24 32 21 37 21 37 20 24 20 37 21 21 23 42 21 37 37 23 23 21 37 41 42  0]xS 
F2S53 Ji 
2134 1349 M (Thread)[50 50 50 50 50  0]xS 
F1S53 Ji 
2434 1349 M ( function before calling )[21 27 42 42 37 23 23 42 41 21 42 37 27 42 28 37 21 37 36 24 23 23 42 41  0]xS 
F2S53 Ji 
3234 1349 M (Thread_init)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3784 1349 M (.)S 
F2S53 Ji 
1380 1549 M (void Thread_alert\(T t\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1649 M (sets )[32 37 23 33  0]xS 
F2S53 Ji 
1625 1649 M (t)S 
F1S53 Ji 
1675 1649 M (\222s alert-pending flag and makes )[23 32 21 37 23 37 27 24 27 42 37 42 41 23 42 42 20 28 23 37 41 21 37 41 42 20 65 37 42 37 32  0]xS 
F2S53 Ji 
2738 1649 M (t)S 
F1S53 Ji 
2788 1649 M ( runnable. The next time )[20 28 42 41 42 37 42 23 37 21 20 51 41 37 20 42 37 42 23 20 23 23 65 37  0]xS 
F2S53 Ji 
3623 1649 M (t)S 
F1S53 Ji 
3672 1649 M ( runs, or calls a blocking )[21 27 42 42 32 21 20 42 27 21 37 36 24 23 32 20 37 21 41 23 42 37 42 23 41 42  0]xS 
F2S53 Ji 
4508 1649 M (Thread)[50 50 50 50 50  0]xS 
F1S53 Ji 
4808 1649 M (, )[21  0]xS 
F2S53 Ji 
4849 1649 M (Sem)[50 50  0]xS 
F1S53 Ji 
4999 1649 M (,)S 
1480 1749 M (or )[41 28  0]xS 
F2S53 Ji 
1575 1749 M (Chan)[50 50 50  0]xS 
F1S53 Ji 
1775 1749 M ( primitive, it clears its flag and raises )[25 42 28 23 65 23 23 23 42 37 21 25 24 23 25 37 24 37 37 27 33 25 24 23 32 26 28 23 37 41 26 37
42 41 26 28 37 23 32 37 33  0]xS 
F2S53 Ji 
3066 1749 M (Thread_Alerted)[50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
3765 1749 M (. It is a c.r.e. for )[21 26 27 23 26 23 33 25 37 26 37 21 23 21 37 21 25 28 42 27  0]xS 
F2S53 Ji 
4340 1749 M (t)S 
F4S53 Ji 
4390 1749 M (=)S 
F1S53 Ji 
4436 1749 M (null or to name a)[42 41 23 23 26 42 28 25 23 42 26 41 37 65 37 26  0]xS 
1480 1849 M (nonexistent thread.)[41 42 42 37 41 23 33 23 37 42 23 21 23 41 28 37 37 42  0]xS 
F2S53 Ji 
1380 1949 M (void Thread_exit\(int code\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2049 M (terminates the calling thread and passes )[23 37 28 64 24 41 37 23 37 33 26 23 41 37 26 37 37 23 24 23 41 42 26 23 42 27 37 37 42 26 37 42
41 26 42 37 32 32 37 33  0]xS 
F2S53 Ji 
2852 2049 M (code)[50 50 50  0]xS 
F1S53 Ji 
3052 2049 M ( to any threads waiting for the calling thread to terminate.)[26 23 41 26 37 42 41 26 24 41 28 37 37 41 33 26 60 37 23 23 23 42 42 26 27 42 28 26 23 41 37 26
37 37 23 23 24 41 42 26 23 42 27 37 37 42 26 23 42 25 24 37 27 65 23 42 37 23 37  0]xS 
1480 2149 M (When the last thread calls )[78 42 37 42 20 24 41 37 21 23 37 33 23 21 23 41 28 37 37 42 21 37 37 23 23 32  0]xS 
F2S53 Ji 
2361 2149 M (Thread_exit)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2911 2149 M (, the program terminates with )[21 20 24 41 37 21 42 27 42 42 27 37 65 21 23 37 28 65 23 42 36 24 37 32 21 60 23 23 42  0]xS 
F2S53 Ji 
3915 2149 M (exit\(code\))[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4415 2149 M (.)S 
F2S53 Ji 
1380 2249 M (int Thread_init\(int preempt, ...\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
 0]xS 
F1S53 Ji 
1480 2349 M (initializes the )[23 42 23 23 23 37 23 23 37 37 33 30 24 41 37  0]xS 
F2S53 Ji 
1967 2349 M (Thread)[50 50 50 50 50  0]xS 
F1S53 Ji 
2267 2349 M ( for nonpreemptive \()[30 28 42 28 30 42 42 41 42 28 37 37 64 42 23 23 42 37 31  0]xS 
F2S53 Ji 
2984 2349 M (preempt)[50 50 50 50 50 50  0]xS 
F4S53 Ji 
3333 2349 M (=)S 
F1S53 Ji 
3379 2349 M (0\) or preemptive \()[42 27 31 42 27 31 42 28 37 37 64 42 23 23 42 37 31  0]xS 
F2S53 Ji 
4013 2349 M (preempt)[50 50 50 50 50 50  0]xS 
F4S53 Ji 
4362 2349 M (=)S 
F1S53 Ji 
4408 2349 M (1\) scheduling and)[42 27 31 32 37 42 37 42 41 23 24 41 42 31 37 41  0]xS 
1480 2449 M (returns 1 or 0 if )[27 37 24 41 28 42 32 28 42 28 42 27 28 42 28 23 28  0]xS 
F2S53 Ji 
2055 2449 M (preempt)[50 50 50 50 50 50  0]xS 
F1S53 Ji 
2405 2449 M (=1 and preemptive scheduling is not supported. )[47 42 28 37 41 42 28 42 28 37 37 64 42 23 23 42 37 28 32 37 42 37 42 41 24 23 41 42 28 23 33 28
41 42 23 28 33 41 42 42 41 28 23 37 42 21  0]xS 
F2S53 Ji 
4058 2449 M (Thread_init)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4608 2449 M ( may accept)[29 64 37 42 28 37 37 37 37 42  0]xS 
1480 2549 M (additional implementation-defined parameters; the argument list must be terminated with a null.  It is c.r.e.)
[37 41 42 23 23 23 42 42 37 23 20 23 65 42 23 37 65 37 41 23 37 24 23 41 42 28 41 37 28 23 42 37
42 20 41 37 28 37 65 37 23 37 28 32 23 20 24 41 37 20 37 27 41 42 65 37 41 24 20 23 23 32 24 20
65 41 33 23 20 42 37 20 23 37 28 64 24 41 37 23 37 42 20 60 24 23 41 21 36 21 41 42 23 23 21 20
20 28 23 21 23 32 20 37 21 23 21 37  0]xS 
1480 2649 M (to call )[23 42 20 37 37 23 24  0]xS 
F2S53 Ji 
1707 2649 M (Thread_init)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2256 2649 M ( more than once.)[21 65 41 28 37 21 23 42 37 41 21 42 42 37 37  0]xS 
F2S53 Ji 
1380 2749 M (int Thread_join\(T t\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50  0]xS 
4320 2749 M (Thread_Alerted)[50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2849 M (suspends the calling thread until thread )[32 42 32 42 37 41 42 33 21 23 41 37 22 37 37 23 23 23 42 41 21 24 41 28 37 37 42 21 41 42 23 23
23 22 23 41 28 37 37 42  0]xS 
F2S53 Ji 
2805 2849 M (t)S 
F1S53 Ji 
2855 2849 M ( terminates. When )[21 23 37 28 65 23 41 37 24 37 32 21 21 79 41 37 42  0]xS 
F2S53 Ji 
3485 2849 M (t)S 
F1S53 Ji 
3535 2849 M ( terminates, )[21 23 37 28 65 23 42 37 23 37 32 21  0]xS 
F2S53 Ji 
3945 2849 M (Thread_join)[50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4495 2849 M ( returns )[21 28 37 23 41 28 42 32  0]xS 
F2S53 Ji 
4768 2849 M (t)S 
F1S53 Ji 
4818 2849 M (\222s exit)[23 33 21 37 42 23  0]xS 
1480 2949 M (code. If )[37 41 42 37 21 19 28 27  0]xS 
F2S53 Ji 
1751 2949 M (t)S 
F4S53 Ji 
1801 2949 M (=)S 
F1S53 Ji 
1847 2949 M (null, the calling thread waits for all other threads to terminate, and then returns 0. It is a c.r.e. for)
[42 41 23 24 20 19 23 42 37 19 37 37 23 23 23 42 42 19 23 42 27 37 37 42 19 60 37 23 23 33 19 27
42 28 19 37 23 23 19 42 23 41 37 28 19 23 42 28 37 37 41 33 19 23 41 19 23 37 28 65 23 42 37 23
37 21 19 37 41 42 19 23 42 37 41 19 28 37 23 42 28 41 33 19 41 21 19 28 23 19 23 32 19 37 19 37
21 23 21 37 21 19 28 41  0]xS 
F2S53 Ji 
1480 3049 M (t)S 
F1S53 Ji 
1530 3049 M ( to name the calling thread or for more than one thread to pass a null )
[21 23 41 21 42 37 65 37 20 24 41 37 21 37 37 23 23 23 42 42 21 23 41 28 37 37 42 21 41 28 21 27
42 28 21 64 42 28 37 21 23 41 37 42 21 42 41 37 21 23 42 28 37 36 42 21 23 42 21 41 37 33 32 21
37 21 41 42 23 23  0]xS 
F2S53 Ji 
3829 3049 M (t)S 
F1S53 Ji 
3879 3049 M (.)S 
F2S53 Ji 
1380 3149 M (T Thread_new\(int apply\(void *\),)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
4370 3149 M (Thread_Failed)[50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
1580 3249 M (void *args, int nbytes, ...\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3349 M (creates, initializes, and starts a new thread, and returns its handle. If )
[37 27 37 37 24 37 32 21 23 23 42 23 23 23 37 23 24 36 37 33 21 23 37 41 42 23 33 23 37 28 23 32
23 37 23 42 37 60 23 23 42 28 37 37 41 21 23 37 42 42 23 28 37 23 41 28 42 32 23 23 24 32 23 42
37 41 42 23 37 21 23 28 28  0]xS 
F2S53 Ji 
3784 3349 M (nbytes)[50 50 50 50 50  0]xS 
F4S53 Ji 
4084 3349 M (=)S 
F1S53 Ji 
4130 3349 M (0, the new thread executes)[42 21 23 23 42 37 23 42 37 60 23 23 42 27 37 37 42 23 37 42 37 37 41 24 36  0]xS 
F2S53 Ji 
1480 3449 M (Thread_exit\(apply\(args\)\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2679 3449 M (, otherwise, it executes )[21 53 42 23 41 37 28 60 23 33 37 21 53 23 23 53 37 42 37 37 41 24 37 32  0]xS 
F2S53 Ji 
3590 3449 M (Thread_exit\(apply\(p\)\))[50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 49  0]xS 
F1S53 Ji 
4640 3449 M (, where )[21 53 61 41 37 28 37  0]xS 
F2S53 Ji 
4970 3449 M (p)S 
F1S53 Ji 
1480 3549 M (points to a )[41 42 23 42 23 32 22 24 41 22 37  0]xS 
F3S53 Ji 
1851 3549 M (copy)[37 42 41  0]xS 
F1S53 Ji 
2008 3549 M ( of the )[22 42 28 22 23 41 37  0]xS 
F2S53 Ji 
2246 3549 M (nbytes)[50 50 50 50 50  0]xS 
F1S53 Ji 
2545 3549 M ( block starting at )[22 42 23 42 37 41 22 33 23 37 27 24 23 41 42 22 37 23  0]xS 
F2S53 Ji 
3128 3549 M (args)[50 50 50  0]xS 
F1S53 Ji 
3328 3549 M (. The new thread starts with its own, empty excep-)[21 22 51 41 37 22 42 37 60 22 23 42 27 37 37 42 22 32 24 37 27 23 33 22 60 23 23 42 22 23 23 33
22 41 60 42 21 22 37 65 41 23 42 22 37 42 37 37 41  0]xS 
1480 3649 M (tion stack. )[23 23 42 41 33 32 23 37 37 42 21  0]xS 
F2S53 Ji 
1866 3649 M (Thread_new)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2366 3649 M ( may accept additional implementation-defined parameters; the argument list)
[32 65 37 42 32 37 37 37 37 42 23 32 37 42 41 24 23 23 42 41 37 23 33 23 65 41 23 37 65 37 42 23
37 23 23 42 42 27 42 37 28 23 41 37 42 32 42 37 28 37 65 37 23 37 27 33 23 32 24 41 37 33 37 26
41 42 65 37 42 23 32 23 23 33  0]xS 
1480 3749 M (must be terminated with a null.  It is a c.r.e. for )[65 41 33 23 21 41 37 21 23 37 28 65 23 42 36 24 37 41 21 60 23 24 41 21 37 21 41 42 23 23 21 21
21 28 23 21 23 32 21 37 21 37 21 23 21 37 20 21 28 42 27  0]xS 
F2S53 Ji 
3062 3749 M (apply)[50 50 50 50  0]xS 
F4S53 Ji 
3312 3749 M (=)S 
F1S53 Ji 
3358 3749 M (null, or for )[41 42 23 23 21 21 42 27 21 28 42 27  0]xS 
F2S53 Ji 
3737 3749 M (args)[50 50 50  0]xS 
F4S53 Ji 
3937 3749 M (=)S 
F1S53 Ji 
3983 3749 M (null and )[41 42 23 23 21 37 42 41  0]xS 
F2S53 Ji 
4274 3749 M (nbytes)[50 50 50 50 50  0]xS 
F4S53 Ji 
4574 3749 M (<)S 
F1S53 Ji 
4620 3749 M (0.)[41  0]xS 
; ; LH
(%%[Page: 41]%%) = 
%%PageTrailer

%%Page: 42 42
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F2S53 Ji 
1380 1166 M (void Thread_pause\(void\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1266 M (relinquishes the processor another thread, perhaps the calling thread.)
[27 37 24 23 41 42 42 23 32 42 37 32 21 23 42 37 21 41 28 42 37 37 32 33 41 28 21 37 41 42 23 42
37 28 20 23 42 28 37 37 41 21 21 42 37 27 42 37 42 32 21 23 42 37 21 37 37 23 23 23 42 41 21 23
42 28 37 37 41  0]xS 
F2S53 Ji 
1380 1366 M (T Thread_self\(void\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1466 M (returns the calling thread\222s handle.)[27 37 24 41 28 42 32 21 23 42 37 20 37 37 24 23 23 42 41 21 23 42 28 37 37 41 23 33 21 41 37 42
41 24 37  0]xS 
; ; LH
(%%[Page: 42]%%) = 
%%PageTrailer

%%Page: 43 43
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F0S74 Ji 
1380 1188 M (XP)[84  0]xS 
F2S53 Ji 
4673 1188 M (T)S 
F1S53 Ji 
4723 1188 M ( )S 
F0S53 Ji 
4744 1188 M (is)[23  0]xS 
F1S53 Ji 
4799 1188 M ( )S 
F2S53 Ji 
4820 1188 M (XP_T)[50 50 50  0]xS 
1380 1399 M (typedef unsigned char *T;)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1380 1599 M (An extended-precision unsigned integer is represented in base  by an array of )
[60 42 28 37 42 23 37 42 42 36 42 28 42 27 37 37 23 33 23 42 41 29 42 41 33 23 42 41 37 42 29 23
42 23 37 41 37 28 29 23 33 29 27 37 42 28 37 32 37 42 23 37 41 29 24 41 29 42 37 32 37 132 29 42
41 29 37 42 29 37 28 27 37 42 29 42 27  0]xS 
F3S53 Ji 
4181 1599 M (n)S 
F1S53 Ji 
4223 1599 M ( digits, least significant)[29 41 24 41 23 23 33 21 29 23 37 37 32 23 29 33 23 41 42 23 28 23 37 37 42  0]xS 
1380 1699 M (digit first. Most )[41 24 41 23 24 19 27 24 27 33 23 21 19 74 42 32 23  0]xS 
F2S53 Ji 
1916 1699 M (XP)[50  0]xS 
F1S53 Ji 
2016 1699 M ( functions take )[19 28 42 41 37 24 23 41 42 32 20 23 37 41 37  0]xS 
F3S53 Ji 
2523 1699 M (n)S 
F1S53 Ji 
2564 1699 M ( as an argument along with source and destination )[19 37 33 19 37 42 19 37 26 42 41 65 37 42 23 19 37 23 42 41 42 19 60 24 23 41 20 32 42 41 28 37
37 19 37 42 41 20 41 37 33 23 23 42 36 24 23 41 42  0]xS 
F2S53 Ji 
4234 1699 M (T)S 
F1S53 Ji 
4279 1699 M (s; it is an )[33 23 19 23 23 20 23 32 19 37 42  0]xS 
4591 1699 M (u.r.e.)[42 21 23 21 37  0]xS 
4756 1699 M ( for )[20 27 42 28  0]xS 
F3S53 Ji 
4891 1699 M (n)S 
F4S53 Ji 
4933 1699 M (<)S 
F1S53 Ji 
4978 1699 M (1)S 
1380 1799 M (or for )[41 28 19 28 41 28  0]xS 
F3S53 Ji 
1584 1799 M (n)S 
F1S53 Ji 
1626 1799 M ( not to be the length of the corresponding )[19 42 41 24 18 24 41 19 42 37 18 24 41 37 19 23 37 42 41 23 42 19 42 27 19 23 42 37 19 37 41 28
28 37 32 42 41 42 42 23 41 42  0]xS 
F2S53 Ji 
3002 1799 M (T)S 
F1S53 Ji 
3046 1799 M (s. It is an )[32 21 19 28 23 19 23 32 19 37 42  0]xS 
3360 1799 M (u.r.e.)[42 21 23 21 37  0]xS 
3524 1799 M ( to pass a null )[18 24 41 19 42 37 32 32 19 37 19 41 42 23 23  0]xS 
F2S53 Ji 
3992 1799 M (T)S 
F1S53 Ji 
4042 1799 M ( or a )[19 42 27 19 37  0]xS 
F2S53 Ji 
4205 1799 M (T)S 
F1S53 Ji 
4255 1799 M ( that is too small to any)[19 23 41 37 24 18 23 33 19 23 41 42 19 32 65 37 23 23 19 23 42 19 37 41  0]xS 
F2S53 Ji 
1380 1899 M (XP)[50  0]xS 
F1S53 Ji 
1480 1899 M ( function.)[21 27 42 42 37 23 23 41 42  0]xS 
F2S53 Ji 
1380 2099 M (int XP_add\(int n, T z, T x, T y, int carry\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2199 M (sets )[32 37 23 33  0]xS 
F2S53 Ji 
1626 2199 M (z[0)[49 50  0]xS 
F1S53 Ji 
1776 2199 M (..)[21  0]xS 
F2S53 Ji 
1817 2199 M (n-1])[50 50 50  0]xS 
F1S53 Ji 
2017 2199 M ( to )[21 23 42  0]xS 
F2S53 Ji 
2124 2199 M (x)S 
F4S53 Ji 
2194 2199 M (+)S 
F2S53 Ji 
2261 2199 M (y)S 
F4S53 Ji 
2332 2199 M (+)S 
F2S53 Ji 
2398 2199 M (carry)[50 50 50 50  0]xS 
F1S53 Ji 
2648 2199 M ( and returns the carry out of )[21 37 41 42 21 28 37 23 41 28 42 32 21 23 42 37 21 37 37 27 28 42 21 41 42 23 21 41 28  0]xS 
F2S53 Ji 
3594 2199 M (z[n-1])[50 50 50 50 50  0]xS 
F1S53 Ji 
3894 2199 M (. )[21  0]xS 
F2S53 Ji 
3936 2199 M (carry)[49 50 50 50  0]xS 
F1S53 Ji 
4186 2199 M ( must be 0 or 1.)[21 65 42 32 23 21 42 37 20 42 21 42 27 21 42  0]xS 
F2S53 Ji 
1380 2299 M (int XP_cmp\(int n, T x, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2399 M (returns an int )[27 37 24 41 28 42 32 21 37 42 20 23 42 23  0]xS 
F4S53 Ji 
1940 2399 M (<)S 
F1S53 Ji 
1986 2399 M (0, )[41 21  0]xS 
F4S53 Ji 
2069 2399 M (=)S 
F1S53 Ji 
2115 2399 M (0, or )[41 21 21 42 28  0]xS 
F4S53 Ji 
2289 2399 M (>)S 
F1S53 Ji 
2334 2399 M (0 if )[42 21 23 27  0]xS 
F2S53 Ji 
2468 2399 M (x)S 
F4S53 Ji 
2518 2399 M (<)S 
F2S53 Ji 
2564 2399 M (y)S 
F1S53 Ji 
2609 2399 M (, )[20  0]xS 
F2S53 Ji 
2650 2399 M (x)S 
F4S53 Ji 
2700 2399 M (=)S 
F2S53 Ji 
2746 2399 M (y)S 
F1S53 Ji 
2791 2399 M (, or )[21 21 42 27  0]xS 
F2S53 Ji 
2922 2399 M (x)S 
F4S53 Ji 
2972 2399 M (>)S 
F2S53 Ji 
3018 2399 M (y)S 
F1S53 Ji 
3063 2399 M (.)S 
F2S53 Ji 
1380 2499 M (int XP_diff\(int n, T z, T x, int y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50  0]xS 
F1S53 Ji 
1480 2599 M (sets )[32 37 23 33  0]xS 
F2S53 Ji 
1627 2599 M (z[0)[50 50  0]xS 
F1S53 Ji 
1777 2599 M (..)[21  0]xS 
F2S53 Ji 
1819 2599 M (n-1])[50 50 50  0]xS 
F1S53 Ji 
2019 2599 M ( to )[22 23 42  0]xS 
F2S53 Ji 
2128 2599 M (x)S 
F4S53 Ji 
2199 2599 M (-)S 
F2S53 Ji 
2266 2599 M (y)S 
F1S53 Ji 
2310 2599 M (, where )[21 22 60 42 37 28 37  0]xS 
F2S53 Ji 
2579 2599 M (y)S 
F1S53 Ji 
2629 2599 M ( is a single digit, and returns the borrow into )[22 23 33 22 37 23 32 23 42 41 24 36 23 41 24 41 23 24 20 23 37 41 42 22 28 37 23 42 28 41 33 22
23 42 37 22 42 41 28 28 42 60 22 23 42 23 42  0]xS 
F2S53 Ji 
4141 2599 M (z[n-1])[50 50 50 50 50  0]xS 
F1S53 Ji 
4441 2599 M (. It is an )[21 22 28 23 22 23 33 22 37 42  0]xS 
4736 2599 M (u.r.e.)[42 21 23 21 37  0]xS 
4901 2599 M ( for)[23 28 41  0]xS 
F2S53 Ji 
1480 2699 M (y)S 
F4S53 Ji 
1530 2699 M (>)S 
F1S53 Ji 
1679 2699 M (.)S 
F2S53 Ji 
1380 2799 M (int XP_div\(int n, T q, T x, int m, T y, T r, T tmp\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 49  0]xS 
F1S53 Ji 
1480 2899 M (sets )[32 37 23 33  0]xS 
F2S53 Ji 
1628 2899 M (q[0)[50 50  0]xS 
F1S53 Ji 
1778 2899 M (..)[21  0]xS 
F2S53 Ji 
1819 2899 M (n-1])[50 50 50  0]xS 
F1S53 Ji 
2019 2899 M ( to )[23 23 42  0]xS 
F2S53 Ji 
2130 2899 M (x[0)[50 50  0]xS 
F1S53 Ji 
2280 2899 M (..)[21  0]xS 
F2S53 Ji 
2321 2899 M (n-1])[50 50 50  0]xS 
F4S53 Ji 
2521 2899 M (/)S 
F2S53 Ji 
2544 2899 M (y[0)[50 50  0]xS 
F1S53 Ji 
2694 2899 M (..)[21  0]xS 
F2S53 Ji 
2736 2899 M (m-1])[50 50 50  0]xS 
F1S53 Ji 
2936 2899 M (, )[20  0]xS 
F2S53 Ji 
2980 2899 M (r[0)[50 50  0]xS 
F1S53 Ji 
3129 2899 M (..)[21  0]xS 
F2S53 Ji 
3171 2899 M (m-1])[50 50 50  0]xS 
F1S53 Ji 
3371 2899 M ( to )[23 23 41  0]xS 
F2S53 Ji 
3482 2899 M (x[0)[50 50  0]xS 
F1S53 Ji 
3631 2899 M (..)[21  0]xS 
F2S53 Ji 
3673 2899 M (n-1])[50 50 50  0]xS 
F1S53 Ji 
3873 2899 M ( mod )[23 64 42 42  0]xS 
F2S53 Ji 
4067 2899 M (y[0..m-1])[50 50 50 50 50 50 49 50  0]xS 
F1S53 Ji 
4517 2899 M (, and returns 1,)[21 23 37 42 41 23 28 37 23 42 28 41 33 22 42  0]xS 
1480 2999 M (if )[23 28  0]xS 
F2S53 Ji 
1553 2999 M (y)S 
F4S53 Ji 
1603 2999 M <B9>S 
F1S53 Ji 
1649 2999 M (0. If )[42 20 23 28 27  0]xS 
F2S53 Ji 
1812 2999 M (y)S 
F4S53 Ji 
1862 2999 M (=)S 
F1S53 Ji 
1908 2999 M (0, )[41 21  0]xS 
F2S53 Ji 
1993 2999 M (XP_div)[50 50 50 50 50  0]xS 
F1S53 Ji 
2293 2999 M ( returns 0 and leaves )[22 28 37 23 42 27 42 33 22 42 22 37 42 42 22 23 37 37 42 37 32  0]xS 
F2S53 Ji 
3007 2999 M (q)S 
F1S53 Ji 
3057 2999 M ( and )[22 37 42 42  0]xS 
F2S53 Ji 
3222 2999 M (r)S 
F1S53 Ji 
3272 2999 M ( unchanged. )[23 42 41 37 42 37 41 42 37 42 21  0]xS 
F2S53 Ji 
3699 2999 M (tmp)[50 50  0]xS 
F1S53 Ji 
3849 2999 M ( must hold at least )[23 64 42 32 24 22 42 41 24 41 23 37 23 23 23 37 37 32 23  0]xS 
F2S53 Ji 
4485 2999 M (n)S 
F4S53 Ji 
4535 2999 M (+)S 
F2S53 Ji 
4581 2999 M (m)S 
F4S53 Ji 
4631 2999 M (+)S 
F1S53 Ji 
4676 2999 M (2 digits. It)[42 22 42 23 42 23 23 33 20 23 28  0]xS 
1480 3099 M (is an )[23 32 21 37 42  0]xS 
1656 3099 M (u.r.e.)[41 21 23 21 37  0]xS 
1820 3099 M ( for )[21 27 42 28  0]xS 
F2S53 Ji 
1959 3099 M (q)S 
F1S53 Ji 
2009 3099 M ( or )[20 42 28  0]xS 
F2S53 Ji 
2120 3099 M (r)S 
F1S53 Ji 
2170 3099 M ( to be one of )[20 24 41 21 42 37 20 42 42 37 21 41 28  0]xS 
F2S53 Ji 
2607 3099 M (x)S 
F1S53 Ji 
2657 3099 M ( or )[21 41 28  0]xS 
F2S53 Ji 
2768 3099 M (y)S 
F1S53 Ji 
2813 3099 M (, for )[21 21 28 41 28  0]xS 
F2S53 Ji 
2972 3099 M (q)S 
F1S53 Ji 
3022 3099 M ( and )[21 37 41 42  0]xS 
F2S53 Ji 
3184 3099 M (r)S 
F1S53 Ji 
3234 3099 M ( to be the same )[21 23 41 21 42 37 21 23 41 37 21 33 37 64 37  0]xS 
F2S53 Ji 
3754 3099 M (T)S 
F1S53 Ji 
3798 3099 M (, or for )[21 21 41 28 21 28 41 28  0]xS 
F2S53 Ji 
4048 3099 M (tmp)[50 50  0]xS 
F1S53 Ji 
4198 3099 M ( to be too small.)[21 23 41 21 42 37 21 23 41 42 21 32 65 37 23 23  0]xS 
F2S53 Ji 
1380 3199 M (unsigned long XP_fromint\(int n, T z, unsigned long u\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 49 50 50  0]xS 
F1S53 Ji 
1480 3299 M (sets )[32 37 23 33  0]xS 
F2S53 Ji 
1626 3299 M (z[0)[49 50  0]xS 
F1S53 Ji 
1776 3299 M (..)[21  0]xS 
F2S53 Ji 
1817 3299 M (n-1])[50 50 50  0]xS 
F1S53 Ji 
2017 3299 M ( to )[21 23 42  0]xS 
F2S53 Ji 
2124 3299 M (u)S 
F1S53 Ji 
2174 3299 M ( mod  and returns )[21 65 42 41 163 21 37 41 42 21 27 37 24 41 28 42 32  0]xS 
F2S53 Ji 
2919 3299 M (u)S 
F4S53 Ji 
2969 3299 M (/)S 
F1S53 Ji 
3134 3299 M (.)S 
: N 3531 1492 M 3634 1492 I 3634 1636 I 3531 1636 I C 
eoclip 3540 1599 M (2)S 
F1S42 Ji 
3584 1551 M (8)S 
; : N 1576 2592 M 1679 2592 I 1679 2736 I 1576 2736 I C 
eoclip 1584 2699 M (2)S 
F1S42 Ji 
1629 2651 M (8)S 
; : N 2363 3192 M 2505 3192 I 2505 3336 I 2363 3336 I C 
eoclip 2372 3299 M (2)S 
F1S42 Ji 
2416 3251 M (8)S 
F3S42 Ji 
2455 3251 M (n)S 
; : N 2992 3192 M 3134 3192 I 3134 3336 I 2992 3336 I C 
eoclip 3000 3299 M (2)S 
F1S42 Ji 
3045 3251 M (8)S 
F3S42 Ji 
3084 3251 M (n)S 
; ; ; LH
(%%[Page: 43]%%) = 
%%PageTrailer

%%Page: 44 44
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F2S53 Ji 
1380 1166 M (int XP_fromstr\(int n, T z, const char *str,)[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50  0]xS 
1580 1266 M (int base, char **end\))[50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1366 M (interprets )[23 42 23 37 27 42 28 37 23 32  0]xS 
F2S53 Ji 
1815 1366 M (str)[50 50  0]xS 
F1S53 Ji 
1964 1366 M ( as an unsigned integer in )[20 37 33 20 37 41 20 42 42 32 23 42 41 37 42 20 23 42 23 37 42 37 27 20 23 42  0]xS 
F2S53 Ji 
2829 1366 M (base)[50 50 50  0]xS 
F1S53 Ji 
3029 1366 M ( using )[20 42 32 23 42 41  0]xS 
F2S53 Ji 
3250 1366 M (z[0)[50 50  0]xS 
F1S53 Ji 
3400 1366 M (..)[21  0]xS 
F2S53 Ji 
3441 1366 M (n-1])[50 50 50  0]xS 
F1S53 Ji 
3641 1366 M ( as the initial value in the conversion, and)[20 37 32 20 23 42 37 20 23 42 23 23 23 37 23 20 42 37 23 42 37 20 23 42 20 23 41 37 20 37 42 42
41 37 28 32 24 41 42 21 20 37 41  0]xS 
1480 1466 M (returns the first nonzero carry out of the conversion step. If )
[27 37 24 41 28 42 32 27 24 41 37 28 27 24 27 33 23 27 42 42 41 37 37 28 42 27 37 37 28 27 42 28
41 42 23 27 42 28 27 23 42 37 27 37 42 42 41 37 28 32 24 41 42 27 33 23 37 42 20 28 28 27  0]xS 
F2S53 Ji 
3542 1466 M (end)[50 50  0]xS 
F4S53 Ji 
3692 1466 M <B9>S 
F1S53 Ji 
3738 1466 M (null, )[42 42 23 23 21  0]xS 
F2S53 Ji 
3915 1466 M (*end)[50 50 50  0]xS 
F1S53 Ji 
4115 1466 M (  points to the character in)[28 27 42 41 23 42 23 33 27 23 42 27 23 42 37 27 37 42 37 28 37 37 23 37 28 27 23  0]xS 
F2S53 Ji 
1480 1566 M (str)[50 50  0]xS 
F1S53 Ji 
1630 1566 M ( that terminated the scan or produced a nonzero carry. See )[21 23 41 37 23 21 23 37 28 65 23 42 37 23 37 41 21 23 42 37 21 32 37 37 42 21 41 28 21 42 27 42
42 41 37 37 42 21 37 21 41 42 41 37 37 28 42 21 37 37 27 28 36 21 21 46 37 37  0]xS 
F2S53 Ji 
3581 1566 M (AP_fromstr)[50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4076 1566 M (.)S 
F2S53 Ji 
1380 1666 M (int XP_length\(int n, T x\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1766 M (returns the length of )[27 37 24 41 28 42 32 21 23 42 37 20 24 37 41 42 23 42 21 41 28  0]xS 
F2S53 Ji 
2174 1766 M (x)S 
F1S53 Ji 
2224 1766 M (; that is, the index plus one of the most significant nonzero digit in )
[23 21 23 41 37 24 20 24 32 21 21 23 41 37 21 23 42 42 37 41 21 42 23 42 32 21 41 42 37 21 42 27
21 23 42 37 21 65 41 33 23 21 32 23 42 41 24 27 23 37 37 42 23 21 42 41 42 37 37 28 41 21 42 23
42 23 23 21 23 42  0]xS 
F2S53 Ji 
4456 1766 M (x[0)[50 50  0]xS 
F1S53 Ji 
4606 1766 M (..)[21  0]xS 
F2S53 Ji 
4648 1766 M (n-1].)[50 50 50 50  0]xS 
1380 1866 M (void XP_lshift\(int n, T z, int m, T x, int s, int fill\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 49 50 50 50 50  0]xS 
F1S53 Ji 
1480 1966 M (sets )[32 37 23 33  0]xS 
F2S53 Ji 
1625 1966 M (z[0)[50 50  0]xS 
F1S53 Ji 
1774 1966 M (..)[21  0]xS 
F2S53 Ji 
1816 1966 M (n-1])[50 50 50  0]xS 
F1S53 Ji 
2016 1966 M ( to )[20 23 41  0]xS 
F2S53 Ji 
2120 1966 M (x[0)[50 50  0]xS 
F1S53 Ji 
2270 1966 M (..)[21  0]xS 
F2S53 Ji 
2312 1966 M (m-1])[50 50 50  0]xS 
F1S53 Ji 
2512 1966 M ( shifted left by )[19 33 41 23 28 23 37 42 20 23 37 28 23 19 42 42  0]xS 
F2S53 Ji 
3012 1966 M (s)S 
F1S53 Ji 
3061 1966 M ( bits, and fills the vacated bits with )[20 42 23 23 32 21 20 37 42 41 20 28 23 23 23 32 20 23 42 37 20 41 37 37 37 23 37 42 20 41 24 23
32 20 60 23 23 42  0]xS 
F2S53 Ji 
4235 1966 M (fill)[50 49 50  0]xS 
F1S53 Ji 
4435 1966 M (, which must be 0)[21 20 60 42 23 37 42 19 65 42 32 23 20 42 37 19  0]xS 
1480 2066 M (or 1. It is an )[41 28 21 42 20 21 28 23 21 23 33 20 37 42  0]xS 
1901 2066 M (u.r.e.)[41 21 23 21 37  0]xS 
2065 2066 M ( for )[21 28 41 28  0]xS 
F2S53 Ji 
2204 2066 M (s)S 
F4S53 Ji 
2254 2066 M (<)S 
F1S53 Ji 
2300 2066 M (0.)[41  0]xS 
F2S53 Ji 
1380 2166 M (int XP_mul\(T z, int n, T x, int m, T y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2266 M (adds )[37 41 42 32  0]xS 
F2S53 Ji 
1655 2266 M (x[0)[50 50  0]xS 
F1S53 Ji 
1805 2266 M (..)[21  0]xS 
F2S53 Ji 
1847 2266 M (n-1])[50 49 50  0]xS 
F4S53 Ji 
2047 2266 M <D7>S 
F2S53 Ji 
2067 2266 M (y[0)[50 50  0]xS 
F1S53 Ji 
2217 2266 M (..)[21  0]xS 
F2S53 Ji 
2259 2266 M (m-1])[50 50 50  0]xS 
F1S53 Ji 
2459 2266 M ( to )[22 23 42  0]xS 
F2S53 Ji 
2569 2266 M (z[0)[50 50  0]xS 
F1S53 Ji 
2719 2266 M (..)[20  0]xS 
F2S53 Ji 
2760 2266 M (n+m-1])[50 50 50 50 50  0]xS 
F1S53 Ji 
3060 2266 M ( and returns the carry out of )[23 37 41 42 22 28 37 23 42 28 41 33 22 23 42 37 23 37 37 27 28 42 22 42 42 23 22 42 28  0]xS 
F2S53 Ji 
4018 2266 M (z[n+m-1])[50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
4418 2266 M (. If )[21 22 28 28  0]xS 
F2S53 Ji 
4540 2266 M (z)S 
F4S53 Ji 
4589 2266 M (=)S 
F1S53 Ji 
4635 2266 M (0, )[42 21  0]xS 
F2S53 Ji 
4720 2266 M (XP_mul)[50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2366 M (computes )[37 41 65 42 41 24 37 32  0]xS 
F2S53 Ji 
1820 2366 M (x)S 
F4S53 Ji 
1870 2366 M <D7>S 
F2S53 Ji 
1891 2366 M (y)S 
F1S53 Ji 
1935 2366 M (. It is an )[21 21 28 23 21 23 32 21 37 42  0]xS 
2225 2366 M (u.r.e.)[42 21 23 21 37  0]xS 
2389 2366 M ( for )[20 28 42 28  0]xS 
F2S53 Ji 
2528 2366 M (z)S 
F1S53 Ji 
2578 2366 M ( to be the same )[21 23 42 21 41 37 21 23 42 37 21 32 37 65 37  0]xS 
F2S53 Ji 
3098 2366 M (T)S 
F1S53 Ji 
3148 2366 M ( as )[21 37 32  0]xS 
F2S53 Ji 
3259 2366 M (x)S 
F1S53 Ji 
3309 2366 M ( or )[21 41 28  0]xS 
F2S53 Ji 
3420 2366 M (y)S 
F1S53 Ji 
3465 2366 M (.)S 
F2S53 Ji 
1380 2466 M (int XP_neg\(int n, T z, T x, int carry\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2566 M (sets )[32 37 23 33  0]xS 
F2S53 Ji 
1626 2566 M (z[0)[49 50  0]xS 
F1S53 Ji 
1776 2566 M (..)[21  0]xS 
F2S53 Ji 
1817 2566 M (n-1])[50 50 50  0]xS 
F1S53 Ji 
2017 2566 M ( to )[21 23 42  0]xS 
F2S53 Ji 
2124 2566 M (~x)[50  0]xS 
F4S53 Ji 
2244 2566 M (+)S 
F2S53 Ji 
2311 2566 M (carry)[50 50 50 50  0]xS 
F1S53 Ji 
2555 2566 M (, where )[21 21 60 42 37 27 37  0]xS 
F2S53 Ji 
2821 2566 M (carry)[50 50 50 50  0]xS 
F1S53 Ji 
3071 2566 M ( is 0 or 1, and returns the carry out of )[21 23 32 21 42 21 41 28 21 42 20 21 37 42 41 21 28 37 23 42 28 41 33 20 24 41 37 21 37 37 28 27
42 21 42 41 23 21 42 28  0]xS 
F2S53 Ji 
4330 2566 M (z[n-1])[50 50 50 50 50  0]xS 
F1S53 Ji 
4629 2566 M (.)S 
F2S53 Ji 
1380 2666 M (int XP_product\(int n, T z, T x, int y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50  0]xS 
F1S53 Ji 
1480 2766 M (sets )[32 37 23 33  0]xS 
F2S53 Ji 
1630 2766 M (z[0)[50 50  0]xS 
F1S53 Ji 
1780 2766 M (..)[21  0]xS 
F2S53 Ji 
1822 2766 M (n-1])[50 50 50  0]xS 
F1S53 Ji 
2022 2766 M ( to )[25 23 42  0]xS 
F2S53 Ji 
2138 2766 M (x)S 
F4S53 Ji 
2188 2766 M <D7>S 
F2S53 Ji 
2209 2766 M (y)S 
F1S53 Ji 
2253 2766 M (, where )[21 25 61 41 37 28 37  0]xS 
F2S53 Ji 
2529 2766 M (y)S 
F1S53 Ji 
2579 2766 M ( is a single digit, and returns the carry out of )[26 23 33 25 37 26 32 23 42 41 24 37 25 42 23 42 23 23 21 25 37 42 42 25 28 37 23 42 27 42 32 26
23 42 37 25 37 37 28 28 41 26 42 41 23 26 42 27  0]xS 
F2S53 Ji 
4125 2766 M (z[n-1])[50 50 50 50 50  0]xS 
F1S53 Ji 
4425 2766 M (. It is an )[21 25 28 23 26 23 32 26 37 41  0]xS 
4733 2766 M (u.r.e.)[42 20 24 20 37  0]xS 
4897 2766 M ( for)[26 28 41  0]xS 
F2S53 Ji 
1480 2866 M (y)S 
F4S53 Ji 
1530 2866 M <B3>S 
F1S53 Ji 
1679 2866 M (.)S 
F2S53 Ji 
1380 2966 M (int XP_quotient\(int n, T z, T x, int y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3066 M (sets )[32 37 23 33  0]xS 
F2S53 Ji 
1626 3066 M (z[0)[49 50  0]xS 
F1S53 Ji 
1776 3066 M (..)[21  0]xS 
F2S53 Ji 
1817 3066 M (n-1])[50 50 50  0]xS 
F1S53 Ji 
2017 3066 M ( to )[21 23 42  0]xS 
F2S53 Ji 
2124 3066 M (x)S 
F4S53 Ji 
2174 3066 M (/)S 
F2S53 Ji 
2197 3066 M (y)S 
F1S53 Ji 
2241 3066 M (, where )[21 21 60 42 37 27 37  0]xS 
F2S53 Ji 
2507 3066 M (y)S 
F1S53 Ji 
2557 3066 M ( is a single digit, and returns )[21 23 32 21 37 21 32 24 41 42 23 37 21 41 24 41 23 24 20 21 37 42 42 20 28 37 23 42 28 41 33  0]xS 
F2S53 Ji 
3520 3066 M (x)S 
F1S53 Ji 
3570 3066 M ( mod )[21 65 42 41  0]xS 
F2S53 Ji 
3759 3066 M (y)S 
F1S53 Ji 
3804 3066 M (. It is an )[21 20 28 23 21 23 33 20 37 42  0]xS 
4093 3066 M (u.r.e.)[42 20 24 20 37  0]xS 
4257 3066 M ( for )[21 28 41 28  0]xS 
F2S53 Ji 
4396 3066 M (y)S 
F4S53 Ji 
4446 3066 M (=)S 
F1S53 Ji 
4492 3066 M (0 or )[41 21 42 27  0]xS 
F2S53 Ji 
4644 3066 M (y)S 
F4S53 Ji 
4694 3066 M <B3>S 
F1S53 Ji 
4843 3066 M (.)S 
F2S53 Ji 
1380 3166 M (void XP_rshift\(int n, T z, int m, T x, int s, int fill\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 49 50 50 50 50  0]xS 
F1S53 Ji 
1480 3266 M (right shift; see )[27 24 41 42 23 21 32 42 23 28 23 23 21 32 37 37  0]xS 
F2S53 Ji 
1977 3266 M (XP_lshift)[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2427 3266 M (. If )[21 21 27 28  0]xS 
F2S53 Ji 
2545 3266 M (n)S 
F4S53 Ji 
2595 3266 M (>)S 
F2S53 Ji 
2641 3266 M (m)S 
F1S53 Ji 
2691 3266 M (, the excess bits are treated as if they were equal to )[20 21 23 42 37 21 37 41 37 37 33 32 21 42 23 23 32 21 37 28 37 21 23 28 37 37 23 37 41 21 37 33
20 24 27 21 23 42 37 42 20 60 37 28 37 21 37 42 41 37 23 21 23 42  0]xS 
F2S53 Ji 
4400 3266 M (fill)[50 50 50  0]xS 
F1S53 Ji 
4600 3266 M (.)S 
F2S53 Ji 
1380 3366 M (int XP_sub\(int n, T z, T x, T y, int borrow\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 3466 M (sets )[32 37 23 33  0]xS 
F2S53 Ji 
1626 3466 M (z[0)[49 50  0]xS 
F1S53 Ji 
1776 3466 M (..)[21  0]xS 
F2S53 Ji 
1817 3466 M (n-1])[50 50 50  0]xS 
F1S53 Ji 
2017 3466 M ( to )[21 23 42  0]xS 
F2S53 Ji 
2124 3466 M (x)S 
F4S53 Ji 
2194 3466 M (-)S 
F2S53 Ji 
2261 3466 M (y)S 
F4S53 Ji 
2332 3466 M (-)S 
F2S53 Ji 
2398 3466 M (borrow)[50 50 50 50 50  0]xS 
F1S53 Ji 
2698 3466 M ( and returns the borrow into )[21 37 41 42 21 28 37 23 41 28 42 32 21 23 42 37 21 41 42 28 27 42 60 21 23 42 23 42  0]xS 
F2S53 Ji 
3647 3466 M (z[n-1])[50 50 50 50 50  0]xS 
F1S53 Ji 
3946 3466 M (. )[21  0]xS 
F2S53 Ji 
3988 3466 M (borrow)[50 50 50 50 50  0]xS 
F1S53 Ji 
4288 3466 M ( must be 0 or 1.)[21 64 42 32 24 20 42 37 21 41 21 42 28 21 41  0]xS 
: N 1576 2759 M 1679 2759 I 1679 2903 I 1576 2903 I C 
eoclip 1584 2866 M (2)S 
F1S42 Ji 
1629 2817 M (8)S 
; : N 4740 2959 M 4843 2959 I 4843 3103 I 4740 3103 I C 
eoclip 4749 3066 M (2)S 
F1S42 Ji 
4793 3017 M (8)S 
; ; ; LH
(%%[Page: 44]%%) = 
%%PageTrailer

%%Page: 45 45
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
% DO NOT CHANGE THE FIRST LINE; Adobe PS 5.1.2 depends on it.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPD4/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
/FmND{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
  /FmPD/pdfmark FmLD
  currentdistillerparams /CoreDistVersion get 2000 ge {
    /FmPD2/pdfmark FmLD
    % FmPD4 is like FmPD but for Acrobat 4.05-specific PDF
    /FmPD4U true def
    currentdistillerparams /CoreDistVersion get 4050 ge 
    {
      /FmPD4 /pdfmark load def
    }
    {
      /FmPD4
      { FmPD4U 
	{(%%[Acrobat Distiller 4.05 and up is required to generate Logical PDF Structure]%%) = 
	  (%%[Logical PDF Structure is not generated.]%%) = flush
	} if
	/FmPD4U false def
	cleartomark
      } FmBD
    } ifelse


% Procedure FmPA used to define named destinations for all paragraphs (and elements). As
% a result, the produced PDF files were very large in size, because they contained numerous
% named destinations that were not actually used. 
% In FrameMaker 5.5.6 FmND procedure was added to allow to distinguish between 
% named destinations that were definitely used and all other named destinations.
% The users were given opportunity to change the definition of the FmPA procedure,
% so that it either directed Distiller to produce or to not produce named destinations
% (under fmCG switch).
% FmND always produced a named destination, but FmPA produced a named destination onlY
% when fmCG switch was set to 'True'.
% FrameMaker 5.5.6 used very simplistic method to determine whether a named destination
% was actually used or not.
% FrameMaker 6.0 and up uses a much more elaborate method to determine whether a 
% named destination is actually used or not. It also has an improved "Acrobat Setup" dialog,
% which allows to specify the user's preference, whether to create PDF files with named
% destinations for all paragraphs, or Wonly those named destinations that are used.
% Therefore, there is no need for fmCG switch in FrameMaker 6.0 and up. Now FmND procedure
% defines a named destination, and FmPA procedure does nothing. Sophisticated users still 
% have ability to modify definition of FmPA if they wish so.

	  /fmCG true def 

	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD

	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
 } if
} if
: N : N : N ; 
%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol F2S53 Ji 
1380 1166 M (int XP_sum\(int n, T z, T x, int y\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50  0]xS 
F1S53 Ji 
1480 1266 M (sets )[32 37 23 33  0]xS 
F2S53 Ji 
1627 1266 M (z[0)[50 50  0]xS 
F1S53 Ji 
1777 1266 M (..)[21  0]xS 
F2S53 Ji 
1819 1266 M (n-1])[50 50 50  0]xS 
F1S53 Ji 
2019 1266 M ( to )[22 23 42  0]xS 
F2S53 Ji 
2128 1266 M (x)S 
F4S53 Ji 
2199 1266 M (+)S 
F2S53 Ji 
2266 1266 M (y)S 
F1S53 Ji 
2310 1266 M (, where )[21 22 60 42 37 28 37  0]xS 
F2S53 Ji 
2579 1266 M (y)S 
F1S53 Ji 
2629 1266 M ( is a single digit, and returns the carry out of )[23 23 32 22 37 23 32 23 42 42 23 37 22 42 23 42 23 23 21 22 37 42 41 23 28 37 23 41 28 42 32 23
23 41 37 23 37 37 27 28 42 22 42 41 24 22 42 27  0]xS 
F2S53 Ji 
4141 1266 M (z[n-1])[50 50 50 50 50  0]xS 
F1S53 Ji 
4441 1266 M (. It is an )[20 23 28 23 22 23 33 22 37 42  0]xS 
4736 1266 M (u.r.e.)[42 21 23 21 37  0]xS 
4901 1266 M ( for)[23 28 41  0]xS 
F2S53 Ji 
1480 1366 M (y)S 
F4S53 Ji 
1530 1366 M (>)S 
F1S53 Ji 
1679 1366 M (.)S 
F2S53 Ji 
1380 1466 M (unsigned long XP_toint\(int n, T x\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50  0]xS 
F1S53 Ji 
1480 1566 M ( returns )[21 27 37 23 42 28 41 33  0]xS 
F2S53 Ji 
1753 1566 M (x)S 
F1S53 Ji 
1803 1566 M ( mod \()[20 65 42 42 20  0]xS 
F2S53 Ji 
2020 1566 M (ULONG_MAX)[50 50 50 50 50 50 50 50  0]xS 
F1S53 Ji 
2470 1566 M (+1\).)[47 42 27  0]xS 
F2S53 Ji 
1380 1666 M (char *XP_tostr\(char *str, int size, int base, int n, T x\))[50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 49 50 50 50 50 50 50  0]xS 
F1S53 Ji 
1480 1766 M (fills )[27 24 23 23 32  0]xS 
F2S53 Ji 
1629 1766 M (str[0)[50 50 50 50  0]xS 
F1S53 Ji 
1879 1766 M (..)[21  0]xS 
F2S53 Ji 
1921 1766 M (size-1])[50 50 49 50 50 50  0]xS 
F1S53 Ji 
2271 1766 M ( with the character representation of )[20 60 23 24 41 20 23 42 37 19 37 42 37 28 37 37 23 37 28 19 28 37 42 27 37 33 37 41 23 37 24 23
41 42 20 41 28  0]xS 
F2S53 Ji 
3485 1766 M (x)S 
F1S53 Ji 
3535 1766 M ( in )[19 24 41  0]xS 
F2S53 Ji 
3639 1766 M (base)[50 50 50  0]xS 
F1S53 Ji 
3839 1766 M (, sets )[21 19 33 37 23 32  0]xS 
F2S53 Ji 
4024 1766 M (x)S 
F1S53 Ji 
4074 1766 M ( to 0, and returns )[20 23 41 20 42 21 19 37 42 42 19 28 37 23 42 28 41 33  0]xS 
F2S53 Ji 
4651 1766 M (str)[50 50  0]xS 
F1S53 Ji 
4797 1766 M (. It is a)[20 20 28 23 20 23 32 20  0]xS 
1480 1866 M (c.r.e. for )[37 21 23 21 37 20 21 28 42 27  0]xS 
F2S53 Ji 
1778 1866 M (str)[50 50  0]xS 
F4S53 Ji 
1928 1866 M (=)S 
F1S53 Ji 
1974 1866 M (null, )[41 42 23 23 21  0]xS 
F2S53 Ji 
2145 1866 M (size)[50 50 50  0]xS 
F1S53 Ji 
2345 1866 M ( to be too small, or for )[21 23 42 20 42 37 21 23 42 41 21 32 65 37 23 24 20 21 42 28 20 28 42 28  0]xS 
F2S53 Ji 
3109 1866 M (base)[50 50 50  0]xS 
F4S53 Ji 
3308 1866 M (<)S 
F1S53 Ji 
3354 1866 M (2 or )[42 20 42 28  0]xS 
F2S53 Ji 
3507 1866 M (base)[50 50 50  0]xS 
F4S53 Ji 
3707 1866 M (>)S 
F1S53 Ji 
3752 1866 M (36.)[42 42  0]xS 
: N 1576 1259 M 1679 1259 I 1679 1403 I 1576 1403 I C 
eoclip 1584 1366 M (2)S 
F1S42 Ji 
1629 1317 M (8)S 
; ; ; LH
(%%[Page: 45]%%) = 
%%PageTrailer

%%Trailer
%%BoundingBox: 12 12 599 779
%%DocumentNeededResources: 
%%+ font Times-Bold
%%+ font Times-Roman
%%+ font Courier
%%+ font Times-Italic
%%+ font Symbol
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_WinNT_Compat 5.0 0
%%+ procset Pscript_Text 5.0 0
%%+ procset Pscript_Encoding256 5.0 0
%%+ procset Pscript_Win_Euro_L2 5.0 0
%%+ procset Pscript_Win_GdiObject 5.0 0
%%+ procset Pscript_Win_GdiObject_L2 5.0 0
%%+ font LucidaSans-Typewriter
%%+ procset Pscript_Encoding0 5.0 0
Pscript_WinNT_Incr dup /terminate get exec
ehsave restore
%%Pages: 45
(%%[LastPage]%%) = 
%%EOF
%-12345X@PJL EOJ
